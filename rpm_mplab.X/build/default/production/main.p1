Version 4.0 HI-TECH Software Intermediate Code
"2761 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2761: extern volatile __bit RD4 __attribute__((address(0x44)));
[v _RD4 `Vb ~T0 @X0 0 e@68 ]
"2764
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2764: extern volatile __bit RD5 __attribute__((address(0x45)));
[v _RD5 `Vb ~T0 @X0 0 e@69 ]
"2767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2767: extern volatile __bit RD6 __attribute__((address(0x46)));
[v _RD6 `Vb ~T0 @X0 0 e@70 ]
"2770
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2770: extern volatile __bit RD7 __attribute__((address(0x47)));
[v _RD7 `Vb ~T0 @X0 0 e@71 ]
"2755
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2755: extern volatile __bit RD2 __attribute__((address(0x42)));
[v _RD2 `Vb ~T0 @X0 0 e@66 ]
"2758
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2758: extern volatile __bit RD3 __attribute__((address(0x43)));
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"1816 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1816: extern volatile unsigned char PR2 __attribute__((address(0x092)));
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"2452
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2452: extern volatile __bit CCP1X __attribute__((address(0xBD)));
[v _CCP1X `Vb ~T0 @X0 0 e@189 ]
"2455
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2455: extern volatile __bit CCP1Y __attribute__((address(0xBC)));
[v _CCP1Y `Vb ~T0 @X0 0 e@188 ]
"892
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 892: extern volatile unsigned char CCPR1L __attribute__((address(0x015)));
[v _CCPR1L `Vuc ~T0 @X0 0 e@21 ]
"2476
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2476: extern volatile __bit CCP2X __attribute__((address(0xED)));
[v _CCP2X `Vb ~T0 @X0 0 e@237 ]
"2479
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2479: extern volatile __bit CCP2Y __attribute__((address(0xEC)));
[v _CCP2Y `Vb ~T0 @X0 0 e@236 ]
"1080
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1080: extern volatile unsigned char CCPR2L __attribute__((address(0x01B)));
[v _CCPR2L `Vuc ~T0 @X0 0 e@27 ]
"2449
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2449: extern volatile __bit CCP1M3 __attribute__((address(0xBB)));
[v _CCP1M3 `Vb ~T0 @X0 0 e@187 ]
"2446
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2446: extern volatile __bit CCP1M2 __attribute__((address(0xBA)));
[v _CCP1M2 `Vb ~T0 @X0 0 e@186 ]
"2902
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2902: extern volatile __bit TMR2ON __attribute__((address(0x92)));
[v _TMR2ON `Vb ~T0 @X0 0 e@146 ]
"2965
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2965: extern volatile __bit TRISC2 __attribute__((address(0x43A)));
[v _TRISC2 `Vb ~T0 @X0 0 e@1082 ]
"2473
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2473: extern volatile __bit CCP2M3 __attribute__((address(0xEB)));
[v _CCP2M3 `Vb ~T0 @X0 0 e@235 ]
"2470
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2470: extern volatile __bit CCP2M2 __attribute__((address(0xEA)));
[v _CCP2M2 `Vb ~T0 @X0 0 e@234 ]
"2872
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2872: extern volatile __bit T2CKPS0 __attribute__((address(0x90)));
[v _T2CKPS0 `Vb ~T0 @X0 0 e@144 ]
"2875
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2875: extern volatile __bit T2CKPS1 __attribute__((address(0x91)));
[v _T2CKPS1 `Vb ~T0 @X0 0 e@145 ]
"2962
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2962: extern volatile __bit TRISC1 __attribute__((address(0x439)));
[v _TRISC1 `Vb ~T0 @X0 0 e@1081 ]
"222
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 222:     struct {
[s S8 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S8 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"221
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 221: typedef union {
[u S7 `S8 1 ]
[n S7 . . ]
"233
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 233: extern volatile PORTBbits_t PORTBbits __attribute__((address(0x006)));
[v _PORTBbits `VS7 ~T0 @X0 0 e@6 ]
"194 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"460 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 460:     struct {
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . RBIF INTF TMR0IF RBIE INTE TMR0IE PEIE GIE ]
"470
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 470:     struct {
[s S19 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S19 . . T0IF . T0IE ]
"459
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 459: typedef union {
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"477
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 477: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS17 ~T0 @X0 0 e@11 ]
"2716
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2716: extern volatile __bit RC4 __attribute__((address(0x3C)));
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
[p mainexit ]
"2971
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2971: extern volatile __bit TRISC4 __attribute__((address(0x43C)));
[v _TRISC4 `Vb ~T0 @X0 0 e@1084 ]
"1261
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1261:     struct {
[s S51 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S51 . PS PSA T0SE T0CS INTEDG nRBPU ]
"1269
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1269:     struct {
[s S52 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S52 . PS0 PS1 PS2 ]
"1260
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1260: typedef union {
[u S50 `S51 1 `S52 1 ]
[n S50 . . . ]
"1275
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1275: extern volatile OPTION_REGbits_t OPTION_REGbits __attribute__((address(0x081)));
[v _OPTION_REGbits `VS50 ~T0 @X0 0 e@129 ]
"2938
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2938: extern volatile __bit TRISB1 __attribute__((address(0x431)));
[v _TRISB1 `Vb ~T0 @X0 0 e@1073 ]
"2941
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2941: extern volatile __bit TRISB2 __attribute__((address(0x432)));
[v _TRISB2 `Vb ~T0 @X0 0 e@1074 ]
"2983
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2983: extern volatile __bit TRISD0 __attribute__((address(0x440)));
[v _TRISD0 `Vb ~T0 @X0 0 e@1088 ]
"2986
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2986: extern volatile __bit TRISD1 __attribute__((address(0x441)));
[v _TRISD1 `Vb ~T0 @X0 0 e@1089 ]
"2989
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2989: extern volatile __bit TRISD2 __attribute__((address(0x442)));
[v _TRISD2 `Vb ~T0 @X0 0 e@1090 ]
"2992
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2992: extern volatile __bit TRISD3 __attribute__((address(0x443)));
[v _TRISD3 `Vb ~T0 @X0 0 e@1091 ]
"2995
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2995: extern volatile __bit TRISD4 __attribute__((address(0x444)));
[v _TRISD4 `Vb ~T0 @X0 0 e@1092 ]
"2998
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2998: extern volatile __bit TRISD5 __attribute__((address(0x445)));
[v _TRISD5 `Vb ~T0 @X0 0 e@1093 ]
"3001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 3001: extern volatile __bit TRISD6 __attribute__((address(0x446)));
[v _TRISD6 `Vb ~T0 @X0 0 e@1094 ]
"3004
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 3004: extern volatile __bit TRISD7 __attribute__((address(0x447)));
[v _TRISD7 `Vb ~T0 @X0 0 e@1095 ]
"2974
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2974: extern volatile __bit TRISC5 __attribute__((address(0x43D)));
[v _TRISC5 `Vb ~T0 @X0 0 e@1085 ]
"2719
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2719: extern volatile __bit RC5 __attribute__((address(0x3D)));
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
"2749
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2749: extern volatile __bit RD0 __attribute__((address(0x40)));
[v _RD0 `Vb ~T0 @X0 0 e@64 ]
"2752
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2752: extern volatile __bit RD1 __attribute__((address(0x41)));
[v _RD1 `Vb ~T0 @X0 0 e@65 ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"8 main.c
[p x FOSC = HS ]
"9
[p x WDTE = OFF ]
"10
[p x PWRTE = OFF ]
"11
[p x BOREN = ON ]
"12
[p x LVP = OFF ]
"13
[p x CPD = OFF ]
"14
[p x WRT = OFF ]
"15
[p x CP = OFF ]
"5 ./lcd.h
[; ;./lcd.h: 5: void Lcd_Port(char a)
[v _Lcd_Port `(v ~T0 @X0 1 ef1`uc ]
"6
[; ;./lcd.h: 6: {
{
[e :U _Lcd_Port ]
"5
[; ;./lcd.h: 5: void Lcd_Port(char a)
[v _a `uc ~T0 @X0 1 r1 ]
"6
[; ;./lcd.h: 6: {
[f ]
"7
[; ;./lcd.h: 7:  if(a & 1)
[e $ ! != & -> _a `i -> 1 `i -> 0 `i 97  ]
"8
[; ;./lcd.h: 8:   RD4 = 1;
[e = _RD4 -> -> 1 `i `b ]
[e $U 98  ]
"9
[; ;./lcd.h: 9:  else
[e :U 97 ]
"10
[; ;./lcd.h: 10:   RD4 = 0;
[e = _RD4 -> -> 0 `i `b ]
[e :U 98 ]
"12
[; ;./lcd.h: 12:  if(a & 2)
[e $ ! != & -> _a `i -> 2 `i -> 0 `i 99  ]
"13
[; ;./lcd.h: 13:   RD5 = 1;
[e = _RD5 -> -> 1 `i `b ]
[e $U 100  ]
"14
[; ;./lcd.h: 14:  else
[e :U 99 ]
"15
[; ;./lcd.h: 15:   RD5 = 0;
[e = _RD5 -> -> 0 `i `b ]
[e :U 100 ]
"17
[; ;./lcd.h: 17:  if(a & 4)
[e $ ! != & -> _a `i -> 4 `i -> 0 `i 101  ]
"18
[; ;./lcd.h: 18:   RD6 = 1;
[e = _RD6 -> -> 1 `i `b ]
[e $U 102  ]
"19
[; ;./lcd.h: 19:  else
[e :U 101 ]
"20
[; ;./lcd.h: 20:   RD6 = 0;
[e = _RD6 -> -> 0 `i `b ]
[e :U 102 ]
"22
[; ;./lcd.h: 22:  if(a & 8)
[e $ ! != & -> _a `i -> 8 `i -> 0 `i 103  ]
"23
[; ;./lcd.h: 23:   RD7 = 1;
[e = _RD7 -> -> 1 `i `b ]
[e $U 104  ]
"24
[; ;./lcd.h: 24:  else
[e :U 103 ]
"25
[; ;./lcd.h: 25:   RD7 = 0;
[e = _RD7 -> -> 0 `i `b ]
[e :U 104 ]
"26
[; ;./lcd.h: 26: }
[e :UE 96 ]
}
"27
[; ;./lcd.h: 27: void Lcd_Cmd(char a)
[v _Lcd_Cmd `(v ~T0 @X0 1 ef1`uc ]
"28
[; ;./lcd.h: 28: {
{
[e :U _Lcd_Cmd ]
"27
[; ;./lcd.h: 27: void Lcd_Cmd(char a)
[v _a `uc ~T0 @X0 1 r1 ]
"28
[; ;./lcd.h: 28: {
[f ]
"29
[; ;./lcd.h: 29:  RD2 = 0;
[e = _RD2 -> -> 0 `i `b ]
"30
[; ;./lcd.h: 30:  Lcd_Port(a);
[e ( _Lcd_Port (1 _a ]
"31
[; ;./lcd.h: 31:  RD3 = 1;
[e = _RD3 -> -> 1 `i `b ]
"32
[; ;./lcd.h: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"33
[; ;./lcd.h: 33:         RD3 = 0;
[e = _RD3 -> -> 0 `i `b ]
"34
[; ;./lcd.h: 34: }
[e :UE 105 ]
}
"36
[; ;./lcd.h: 36: Lcd_Clear()
[v _Lcd_Clear `(i ~T0 @X0 1 ef ]
"37
[; ;./lcd.h: 37: {
{
[e :U _Lcd_Clear ]
[f ]
"38
[; ;./lcd.h: 38:  Lcd_Cmd(0);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"39
[; ;./lcd.h: 39:  Lcd_Cmd(1);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"40
[; ;./lcd.h: 40: }
[e :UE 106 ]
}
"42
[; ;./lcd.h: 42: void Lcd_Set_Cursor(char a, char b)
[v _Lcd_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"43
[; ;./lcd.h: 43: {
{
[e :U _Lcd_Set_Cursor ]
"42
[; ;./lcd.h: 42: void Lcd_Set_Cursor(char a, char b)
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
"43
[; ;./lcd.h: 43: {
[f ]
"44
[; ;./lcd.h: 44:  char temp,z,y;
[v _temp `uc ~T0 @X0 1 a ]
[v _z `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
"45
[; ;./lcd.h: 45:  if(a == 1)
[e $ ! == -> _a `i -> 1 `i 108  ]
"46
[; ;./lcd.h: 46:  {
{
"47
[; ;./lcd.h: 47:    temp = 0x80 + b - 1;
[e = _temp -> - + -> 128 `i -> _b `i -> 1 `i `uc ]
"48
[; ;./lcd.h: 48:   z = temp>>4;
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
"49
[; ;./lcd.h: 49:   y = temp & 0x0F;
[e = _y -> & -> _temp `i -> 15 `i `uc ]
"50
[; ;./lcd.h: 50:   Lcd_Cmd(z);
[e ( _Lcd_Cmd (1 _z ]
"51
[; ;./lcd.h: 51:   Lcd_Cmd(y);
[e ( _Lcd_Cmd (1 _y ]
"52
[; ;./lcd.h: 52:  }
}
[e $U 109  ]
"53
[; ;./lcd.h: 53:  else if(a == 2)
[e :U 108 ]
[e $ ! == -> _a `i -> 2 `i 110  ]
"54
[; ;./lcd.h: 54:  {
{
"55
[; ;./lcd.h: 55:   temp = 0xC0 + b - 1;
[e = _temp -> - + -> 192 `i -> _b `i -> 1 `i `uc ]
"56
[; ;./lcd.h: 56:   z = temp>>4;
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
"57
[; ;./lcd.h: 57:   y = temp & 0x0F;
[e = _y -> & -> _temp `i -> 15 `i `uc ]
"58
[; ;./lcd.h: 58:   Lcd_Cmd(z);
[e ( _Lcd_Cmd (1 _z ]
"59
[; ;./lcd.h: 59:   Lcd_Cmd(y);
[e ( _Lcd_Cmd (1 _y ]
"60
[; ;./lcd.h: 60:  }
}
[e :U 110 ]
[e :U 109 ]
"61
[; ;./lcd.h: 61: }
[e :UE 107 ]
}
"63
[; ;./lcd.h: 63: void Lcd_Init()
[v _Lcd_Init `(v ~T0 @X0 1 ef ]
"64
[; ;./lcd.h: 64: {
{
[e :U _Lcd_Init ]
[f ]
"65
[; ;./lcd.h: 65:   Lcd_Port(0x00);
[e ( _Lcd_Port (1 -> -> 0 `i `uc ]
"66
[; ;./lcd.h: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"67
[; ;./lcd.h: 67:   Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"68
[; ;./lcd.h: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"69
[; ;./lcd.h: 69:   Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"70
[; ;./lcd.h: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 11 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"71
[; ;./lcd.h: 71:   Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"73
[; ;./lcd.h: 73:   Lcd_Cmd(0x02);
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"74
[; ;./lcd.h: 74:   Lcd_Cmd(0x02);
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"75
[; ;./lcd.h: 75:   Lcd_Cmd(0x08);
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
"76
[; ;./lcd.h: 76:   Lcd_Cmd(0x00);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"77
[; ;./lcd.h: 77:   Lcd_Cmd(0x0C);
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
"78
[; ;./lcd.h: 78:   Lcd_Cmd(0x00);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"79
[; ;./lcd.h: 79:   Lcd_Cmd(0x06);
[e ( _Lcd_Cmd (1 -> -> 6 `i `uc ]
"80
[; ;./lcd.h: 80: }
[e :UE 111 ]
}
"82
[; ;./lcd.h: 82: void Lcd_Write_Char(char a)
[v _Lcd_Write_Char `(v ~T0 @X0 1 ef1`uc ]
"83
[; ;./lcd.h: 83: {
{
[e :U _Lcd_Write_Char ]
"82
[; ;./lcd.h: 82: void Lcd_Write_Char(char a)
[v _a `uc ~T0 @X0 1 r1 ]
"83
[; ;./lcd.h: 83: {
[f ]
"84
[; ;./lcd.h: 84:    char temp,y;
[v _temp `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
"85
[; ;./lcd.h: 85:    temp = a&0x0F;
[e = _temp -> & -> _a `i -> 15 `i `uc ]
"86
[; ;./lcd.h: 86:    y = a&0xF0;
[e = _y -> & -> _a `i -> 240 `i `uc ]
"87
[; ;./lcd.h: 87:    RD2 = 1;
[e = _RD2 -> -> 1 `i `b ]
"88
[; ;./lcd.h: 88:    Lcd_Port(y>>4);
[e ( _Lcd_Port (1 -> >> -> _y `i -> 4 `i `uc ]
"89
[; ;./lcd.h: 89:    RD3 = 1;
[e = _RD3 -> -> 1 `i `b ]
"90
[; ;./lcd.h: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"91
[; ;./lcd.h: 91:    RD3 = 0;
[e = _RD3 -> -> 0 `i `b ]
"92
[; ;./lcd.h: 92:    Lcd_Port(temp);
[e ( _Lcd_Port (1 _temp ]
"93
[; ;./lcd.h: 93:    RD3 = 1;
[e = _RD3 -> -> 1 `i `b ]
"94
[; ;./lcd.h: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"95
[; ;./lcd.h: 95:    RD3 = 0;
[e = _RD3 -> -> 0 `i `b ]
"96
[; ;./lcd.h: 96: }
[e :UE 112 ]
}
"98
[; ;./lcd.h: 98: void Lcd_Write_String(char *a)
[v _Lcd_Write_String `(v ~T0 @X0 1 ef1`*uc ]
"99
[; ;./lcd.h: 99: {
{
[e :U _Lcd_Write_String ]
"98
[; ;./lcd.h: 98: void Lcd_Write_String(char *a)
[v _a `*uc ~T0 @X0 1 r1 ]
"99
[; ;./lcd.h: 99: {
[f ]
"100
[; ;./lcd.h: 100:  int i;
[v _i `i ~T0 @X0 1 a ]
"101
[; ;./lcd.h: 101:  for(i=0;a[i]!='\0';i++)
{
[e = _i -> 0 `i ]
[e $U 117  ]
[e :U 114 ]
"102
[; ;./lcd.h: 102:     Lcd_Write_Char(a[i]);
[e ( _Lcd_Write_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
[e ++ _i -> 1 `i ]
[e :U 117 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 114  ]
[e :U 115 ]
}
"103
[; ;./lcd.h: 103: }
[e :UE 113 ]
}
"105
[; ;./lcd.h: 105: void Lcd_Shift_Right()
[v _Lcd_Shift_Right `(v ~T0 @X0 1 ef ]
"106
[; ;./lcd.h: 106: {
{
[e :U _Lcd_Shift_Right ]
[f ]
"107
[; ;./lcd.h: 107:  Lcd_Cmd(0x01);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"108
[; ;./lcd.h: 108:  Lcd_Cmd(0x0C);
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
"109
[; ;./lcd.h: 109: }
[e :UE 118 ]
}
"111
[; ;./lcd.h: 111: void Lcd_Shift_Left()
[v _Lcd_Shift_Left `(v ~T0 @X0 1 ef ]
"112
[; ;./lcd.h: 112: {
{
[e :U _Lcd_Shift_Left ]
[f ]
"113
[; ;./lcd.h: 113:  Lcd_Cmd(0x01);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"114
[; ;./lcd.h: 114:  Lcd_Cmd(0x08);
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
"115
[; ;./lcd.h: 115: }
[e :UE 119 ]
}
"1 ./pwm.h
[; ;./pwm.h: 1: long freq;
[v _freq `l ~T0 @X0 1 e ]
"3
[; ;./pwm.h: 3: PWM1_Init(long fre)
[v _PWM1_Init `(i ~T0 @X0 1 ef1`l ]
"4
[; ;./pwm.h: 4: {
{
[e :U _PWM1_Init ]
"3
[; ;./pwm.h: 3: PWM1_Init(long fre)
[v _fre `l ~T0 @X0 1 r1 ]
"4
[; ;./pwm.h: 4: {
[f ]
"5
[; ;./pwm.h: 5:   PR2 = (20000000/(fre*4*4)) - 1;
[e = _PR2 -> - / -> 20000000 `l * * _fre -> -> 4 `i `l -> -> 4 `i `l -> -> 1 `i `l `uc ]
"6
[; ;./pwm.h: 6:   freq = fre;
[e = _freq _fre ]
"7
[; ;./pwm.h: 7: }
[e :UE 120 ]
}
"9
[; ;./pwm.h: 9: int PWM_Max_Duty()
[v _PWM_Max_Duty `(i ~T0 @X0 1 ef ]
"10
[; ;./pwm.h: 10: {
{
[e :U _PWM_Max_Duty ]
[f ]
"11
[; ;./pwm.h: 11:   return(20000000/(freq*4));
[e ) -> / -> 20000000 `l * _freq -> -> 4 `i `l `i ]
[e $UE 121  ]
"12
[; ;./pwm.h: 12: }
[e :UE 121 ]
}
"15
[; ;./pwm.h: 15: PWM2_Init(long fre)
[v _PWM2_Init `(i ~T0 @X0 1 ef1`l ]
"16
[; ;./pwm.h: 16: {
{
[e :U _PWM2_Init ]
"15
[; ;./pwm.h: 15: PWM2_Init(long fre)
[v _fre `l ~T0 @X0 1 r1 ]
"16
[; ;./pwm.h: 16: {
[f ]
"17
[; ;./pwm.h: 17:   PR2 = (20000000/(fre*4*4)) - 1;
[e = _PR2 -> - / -> 20000000 `l * * _fre -> -> 4 `i `l -> -> 4 `i `l -> -> 1 `i `l `uc ]
"18
[; ;./pwm.h: 18:   freq = fre;
[e = _freq _fre ]
"19
[; ;./pwm.h: 19: }
[e :UE 122 ]
}
"21
[; ;./pwm.h: 21: PWM1_Duty(unsigned int duty)
[v _PWM1_Duty `(i ~T0 @X0 1 ef1`ui ]
"22
[; ;./pwm.h: 22: {
{
[e :U _PWM1_Duty ]
"21
[; ;./pwm.h: 21: PWM1_Duty(unsigned int duty)
[v _duty `ui ~T0 @X0 1 r1 ]
"22
[; ;./pwm.h: 22: {
[f ]
"23
[; ;./pwm.h: 23:   if(duty<1024)
[e $ ! < _duty -> -> 1024 `i `ui 124  ]
"24
[; ;./pwm.h: 24:   {
{
"25
[; ;./pwm.h: 25:     duty = ((float)duty/1023)*PWM_Max_Duty();
[e = _duty -> * / -> _duty `f -> -> 1023 `i `f -> ( _PWM_Max_Duty ..  `f `ui ]
"26
[; ;./pwm.h: 26:     CCP1X = duty & 2;
[e = _CCP1X -> & _duty -> -> 2 `i `ui `b ]
"27
[; ;./pwm.h: 27:     CCP1Y = duty & 1;
[e = _CCP1Y -> & _duty -> -> 1 `i `ui `b ]
"28
[; ;./pwm.h: 28:     CCPR1L = duty>>2;
[e = _CCPR1L -> >> _duty -> 2 `i `uc ]
"29
[; ;./pwm.h: 29:   }
}
[e :U 124 ]
"30
[; ;./pwm.h: 30: }
[e :UE 123 ]
}
"32
[; ;./pwm.h: 32: PWM2_Duty(unsigned int duty)
[v _PWM2_Duty `(i ~T0 @X0 1 ef1`ui ]
"33
[; ;./pwm.h: 33: {
{
[e :U _PWM2_Duty ]
"32
[; ;./pwm.h: 32: PWM2_Duty(unsigned int duty)
[v _duty `ui ~T0 @X0 1 r1 ]
"33
[; ;./pwm.h: 33: {
[f ]
"34
[; ;./pwm.h: 34:   if(duty<1024)
[e $ ! < _duty -> -> 1024 `i `ui 126  ]
"35
[; ;./pwm.h: 35:   {
{
"36
[; ;./pwm.h: 36:     duty = ((float)duty/1023)*PWM_Max_Duty();
[e = _duty -> * / -> _duty `f -> -> 1023 `i `f -> ( _PWM_Max_Duty ..  `f `ui ]
"37
[; ;./pwm.h: 37:     CCP2X = duty & 2;
[e = _CCP2X -> & _duty -> -> 2 `i `ui `b ]
"38
[; ;./pwm.h: 38:     CCP2Y = duty & 1;
[e = _CCP2Y -> & _duty -> -> 1 `i `ui `b ]
"39
[; ;./pwm.h: 39:     CCPR2L = duty>>2;
[e = _CCPR2L -> >> _duty -> 2 `i `uc ]
"40
[; ;./pwm.h: 40:   }
}
[e :U 126 ]
"41
[; ;./pwm.h: 41: }
[e :UE 125 ]
}
"43
[; ;./pwm.h: 43: PWM1_Start()
[v _PWM1_Start `(i ~T0 @X0 1 ef ]
"44
[; ;./pwm.h: 44: {
{
[e :U _PWM1_Start ]
[f ]
"45
[; ;./pwm.h: 45:   CCP1M3 = 1;
[e = _CCP1M3 -> -> 1 `i `b ]
"46
[; ;./pwm.h: 46:   CCP1M2 = 1;
[e = _CCP1M2 -> -> 1 `i `b ]
"57
[; ;./pwm.h: 57:   TMR2ON = 1;
[e = _TMR2ON -> -> 1 `i `b ]
"58
[; ;./pwm.h: 58:   TRISC2 = 0;
[e = _TRISC2 -> -> 0 `i `b ]
"59
[; ;./pwm.h: 59: }
[e :UE 127 ]
}
"61
[; ;./pwm.h: 61: PWM1_Stop()
[v _PWM1_Stop `(i ~T0 @X0 1 ef ]
"62
[; ;./pwm.h: 62: {
{
[e :U _PWM1_Stop ]
[f ]
"63
[; ;./pwm.h: 63:   CCP1M3 = 0;
[e = _CCP1M3 -> -> 0 `i `b ]
"64
[; ;./pwm.h: 64:   CCP1M2 = 0;
[e = _CCP1M2 -> -> 0 `i `b ]
"65
[; ;./pwm.h: 65: }
[e :UE 128 ]
}
"67
[; ;./pwm.h: 67: PWM2_Start()
[v _PWM2_Start `(i ~T0 @X0 1 ef ]
"68
[; ;./pwm.h: 68: {
{
[e :U _PWM2_Start ]
[f ]
"69
[; ;./pwm.h: 69:   CCP2M3 = 1;
[e = _CCP2M3 -> -> 1 `i `b ]
"70
[; ;./pwm.h: 70:   CCP2M2 = 1;
[e = _CCP2M2 -> -> 1 `i `b ]
"75
[; ;./pwm.h: 75:     T2CKPS0 = 1;
[e = _T2CKPS0 -> -> 1 `i `b ]
"76
[; ;./pwm.h: 76:     T2CKPS1 = 0;
[e = _T2CKPS1 -> -> 0 `i `b ]
"81
[; ;./pwm.h: 81:     TMR2ON = 1;
[e = _TMR2ON -> -> 1 `i `b ]
"82
[; ;./pwm.h: 82:     TRISC1 = 0;
[e = _TRISC1 -> -> 0 `i `b ]
"83
[; ;./pwm.h: 83: }
[e :UE 129 ]
}
"85
[; ;./pwm.h: 85: PWM2_Stop()
[v _PWM2_Stop `(i ~T0 @X0 1 ef ]
"86
[; ;./pwm.h: 86: {
{
[e :U _PWM2_Stop ]
[f ]
"87
[; ;./pwm.h: 87:   CCP2M3 = 0;
[e = _CCP2M3 -> -> 0 `i `b ]
"88
[; ;./pwm.h: 88:   CCP2M2 = 0;
[e = _CCP2M2 -> -> 0 `i `b ]
"89
[; ;./pwm.h: 89: }
[e :UE 130 ]
}
"32 main.c
[; ;main.c: 32: DC_Napred() {
[v _DC_Napred `(i ~T0 @X0 1 ef ]
{
[e :U _DC_Napred ]
[f ]
"33
[; ;main.c: 33:   PORTBbits.RB1= 1;
[e = . . _PORTBbits 0 1 -> -> 1 `i `uc ]
"34
[; ;main.c: 34:   PORTBbits.RB2 = 0;
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
"35
[; ;main.c: 35: }
[e :UE 131 ]
}
"37
[; ;main.c: 37: DC_Nazad() {
[v _DC_Nazad `(i ~T0 @X0 1 ef ]
{
[e :U _DC_Nazad ]
[f ]
"38
[; ;main.c: 38:   PORTBbits.RB1 = 0;
[e = . . _PORTBbits 0 1 -> -> 0 `i `uc ]
"39
[; ;main.c: 39:   PORTBbits.RB2 = 1;
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
"40
[; ;main.c: 40: }
[e :UE 132 ]
}
"42
[; ;main.c: 42: PWM1_procenat(int i){
[v _PWM1_procenat `(i ~T0 @X0 1 ef1`i ]
{
[e :U _PWM1_procenat ]
[v _i `i ~T0 @X0 1 r1 ]
[f ]
"47
[; ;main.c: 47:     float koef = 10.23;
[v _koef `f ~T0 @X0 1 a ]
[e = _koef -> .10.23 `f ]
"48
[; ;main.c: 48:     float procenat = koef*i;
[v _procenat `f ~T0 @X0 1 a ]
[e = _procenat * _koef -> _i `f ]
"55
[; ;main.c: 55:     return PWM1_Duty(procenat);
[e ) ( _PWM1_Duty (1 -> _procenat `ui ]
[e $UE 133  ]
"56
[; ;main.c: 56: }
[e :UE 133 ]
}
"59
[; ;main.c: 59: Druga_kolona(int i) {
[v _Druga_kolona `(i ~T0 @X0 1 ef1`i ]
{
[e :U _Druga_kolona ]
[v _i `i ~T0 @X0 1 r1 ]
[f ]
"60
[; ;main.c: 60:     char s[20];
[v _s `uc ~T0 @X0 -> 20 `i a ]
"61
[; ;main.c: 61:     sprintf(s, "%d", i);
[e ( _sprintf (1 , (. , &U _s :s 1C _i ]
"62
[; ;main.c: 62:     Lcd_Set_Cursor(2,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"64
[; ;main.c: 64:     Lcd_Write_String(s);
[e ( _Lcd_Write_String (1 &U _s ]
"65
[; ;main.c: 65: }
[e :UE 134 ]
}
"69
[; ;main.c: 69: int count=0;
[v _count `i ~T0 @X0 1 e ]
[i _count
-> 0 `i
]
"70
[; ;main.c: 70: int sekunda=0;
[v _sekunda `i ~T0 @X0 1 e ]
[i _sekunda
-> 0 `i
]
[v $root$_my_isr_routine `(v ~T0 @X0 0 e ]
"71
[; ;main.c: 71: void __attribute__((picinterrupt(""))) my_isr_routine (void) {
[v _my_isr_routine `(v ~T1 @X0 1 ef ]
{
[e :U _my_isr_routine ]
[f ]
"72
[; ;main.c: 72:     if (INTCONbits.TMR0IF) {
[e $ ! != -> . . _INTCONbits 0 2 `i -> 0 `i 136  ]
{
"73
[; ;main.c: 73:         INTCONbits.TMR0IF=0;
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"74
[; ;main.c: 74:         count++;
[e ++ _count -> 1 `i ]
"75
[; ;main.c: 75:         if(count==76){
[e $ ! == _count -> 76 `i 137  ]
{
"76
[; ;main.c: 76:             count = 0;
[e = _count -> 0 `i ]
"77
[; ;main.c: 77:             sekunda++;
[e ++ _sekunda -> 1 `i ]
"80
[; ;main.c: 80:            RC4=~RC4;
[e = _RC4 -> ~ -> _RC4 `ui `b ]
"82
[; ;main.c: 82:         }
}
[e :U 137 ]
"83
[; ;main.c: 83:     }
}
[e :U 136 ]
"84
[; ;main.c: 84: }
[e :UE 135 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"91
[; ;main.c: 91: void main()
[v _main `(v ~T0 @X0 1 ef ]
"92
[; ;main.c: 92: {
{
[e :U _main ]
[f ]
"95
[; ;main.c: 95:     TRISC4=0;
[e = _TRISC4 -> -> 0 `i `b ]
"97
[; ;main.c: 97:     INTCONbits.GIE=1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"98
[; ;main.c: 98:      INTCONbits.PEIE=1;
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"99
[; ;main.c: 99:      INTCONbits.TMR0IE=1;
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
"100
[; ;main.c: 100:      INTCONbits.TMR0IF=0;
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"101
[; ;main.c: 101:      (INTCONbits.GIE = 1);
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"104
[; ;main.c: 104:      OPTION_REGbits.T0CS=0;
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
"105
[; ;main.c: 105:      OPTION_REGbits.T0SE=0;
[e = . . _OPTION_REGbits 0 2 -> -> 0 `i `uc ]
"106
[; ;main.c: 106:      OPTION_REGbits.PSA=0;
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
"109
[; ;main.c: 109:      OPTION_REGbits.PS0=1;
[e = . . _OPTION_REGbits 1 0 -> -> 1 `i `uc ]
"110
[; ;main.c: 110:      OPTION_REGbits.PS1=1;
[e = . . _OPTION_REGbits 1 1 -> -> 1 `i `uc ]
"111
[; ;main.c: 111:      OPTION_REGbits.PS2=1;
[e = . . _OPTION_REGbits 1 2 -> -> 1 `i `uc ]
"114
[; ;main.c: 114:   PWM1_Init(5000);
[e ( _PWM1_Init (1 -> -> 5000 `i `l ]
"115
[; ;main.c: 115:   PWM2_Init(5000);
[e ( _PWM2_Init (1 -> -> 5000 `i `l ]
"118
[; ;main.c: 118:   TRISB1 = 0;
[e = _TRISB1 -> -> 0 `i `b ]
"119
[; ;main.c: 119:   TRISB2 = 0;
[e = _TRISB2 -> -> 0 `i `b ]
"122
[; ;main.c: 122:   TRISC2 = 0;
[e = _TRISC2 -> -> 0 `i `b ]
"124
[; ;main.c: 124:   TRISC1 = 0;
[e = _TRISC1 -> -> 0 `i `b ]
"127
[; ;main.c: 127:   TRISD0 = 1;
[e = _TRISD0 -> -> 1 `i `b ]
"128
[; ;main.c: 128:   TRISD1 = 1;
[e = _TRISD1 -> -> 1 `i `b ]
"131
[; ;main.c: 131:   TRISD2 = 0;
[e = _TRISD2 -> -> 0 `i `b ]
"132
[; ;main.c: 132:   TRISD3 = 0;
[e = _TRISD3 -> -> 0 `i `b ]
"133
[; ;main.c: 133:   TRISD4 = 0;
[e = _TRISD4 -> -> 0 `i `b ]
"134
[; ;main.c: 134:   TRISD5 = 0;
[e = _TRISD5 -> -> 0 `i `b ]
"135
[; ;main.c: 135:   TRISD6 = 0;
[e = _TRISD6 -> -> 0 `i `b ]
"136
[; ;main.c: 136:   TRISD7 = 0;
[e = _TRISD7 -> -> 0 `i `b ]
"140
[; ;main.c: 140:   TRISC5 = 1;
[e = _TRISC5 -> -> 1 `i `b ]
"142
[; ;main.c: 142:   PWM1_Duty(0);
[e ( _PWM1_Duty (1 -> -> 0 `i `ui ]
"143
[; ;main.c: 143:   PWM2_Duty(0);
[e ( _PWM2_Duty (1 -> -> 0 `i `ui ]
"144
[; ;main.c: 144:   PWM1_Start();
[e ( _PWM1_Start ..  ]
"145
[; ;main.c: 145:   PWM2_Start();
[e ( _PWM2_Start ..  ]
"149
[; ;main.c: 149:     Lcd_Init();
[e ( _Lcd_Init ..  ]
"150
[; ;main.c: 150:     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"156
[; ;main.c: 156:   int flag1 = 0;
[v _flag1 `i ~T0 @X0 1 a ]
[e = _flag1 -> 0 `i ]
"157
[; ;main.c: 157:   int flag2 = 0;
[v _flag2 `i ~T0 @X0 1 a ]
[e = _flag2 -> 0 `i ]
"158
[; ;main.c: 158:   int flag3 = 0;
[v _flag3 `i ~T0 @X0 1 a ]
[e = _flag3 -> 0 `i ]
"159
[; ;main.c: 159:   int flag4 = 0;
[v _flag4 `i ~T0 @X0 1 a ]
[e = _flag4 -> 0 `i ]
"160
[; ;main.c: 160:   int cnt = 0;
[v _cnt `i ~T0 @X0 1 a ]
[e = _cnt -> 0 `i ]
"161
[; ;main.c: 161:   int rpm;
[v _rpm `i ~T0 @X0 1 a ]
"162
[; ;main.c: 162:   char prva[20];
[v _prva `uc ~T0 @X0 -> 20 `i a ]
"163
[; ;main.c: 163:   char druga[20];
[v _druga `uc ~T0 @X0 -> 20 `i a ]
"166
[; ;main.c: 166:   int mod_1 = 0;
[v _mod_1 `i ~T0 @X0 1 a ]
[e = _mod_1 -> 0 `i ]
"167
[; ;main.c: 167:   int mod_2 = 1;
[v _mod_2 `i ~T0 @X0 1 a ]
[e = _mod_2 -> 1 `i ]
"170
[; ;main.c: 170:   int procenat = 60;
[v _procenat `i ~T0 @X0 1 a ]
[e = _procenat -> 60 `i ]
"171
[; ;main.c: 171:   int rpm_zadato = 200;
[v _rpm_zadato `i ~T0 @X0 1 a ]
[e = _rpm_zadato -> 200 `i ]
"174
[; ;main.c: 174:   do
[e :U 141 ]
"175
[; ;main.c: 175:   {
{
"176
[; ;main.c: 176:       DC_Napred();
[e ( _DC_Napred ..  ]
"183
[; ;main.c: 183:     if ((RC5 == 1) && (flag3 == 0)) {
[e $ ! && == -> _RC5 `i -> 1 `i == _flag3 -> 0 `i 142  ]
{
"184
[; ;main.c: 184:         flag3 = 1;
[e = _flag3 -> 1 `i ]
"185
[; ;main.c: 185:         cnt++;
[e ++ _cnt -> 1 `i ]
"187
[; ;main.c: 187:     }
}
[e :U 142 ]
"188
[; ;main.c: 188:     if (RC5 == 0) {
[e $ ! == -> _RC5 `i -> 0 `i 143  ]
{
"189
[; ;main.c: 189:         flag3 = 0;
[e = _flag3 -> 0 `i ]
"190
[; ;main.c: 190:     }
}
[e :U 143 ]
"193
[; ;main.c: 193:     if (mod_1 == 1) {
[e $ ! == _mod_1 -> 1 `i 144  ]
{
"194
[; ;main.c: 194:     if((RD0 == 0) && (procenat < 100) && (flag1 == 0)) {
[e $ ! && && == -> _RD0 `i -> 0 `i < _procenat -> 100 `i == _flag1 -> 0 `i 145  ]
{
"195
[; ;main.c: 195:         flag1 = 1;
[e = _flag1 -> 1 `i ]
"196
[; ;main.c: 196:         procenat = procenat + 10;
[e = _procenat + _procenat -> 10 `i ]
"198
[; ;main.c: 198:         cnt = 0;
[e = _cnt -> 0 `i ]
"199
[; ;main.c: 199:     }
}
[e :U 145 ]
"200
[; ;main.c: 200:       if ((RD0 =! 0) && (flag1 == 1)) {
[e $ ! && = _RD0 ! != -> 0 `i -> 0 `i == _flag1 -> 1 `i 146  ]
{
"201
[; ;main.c: 201:       flag1 = 0;
[e = _flag1 -> 0 `i ]
"202
[; ;main.c: 202:       }
}
[e :U 146 ]
"204
[; ;main.c: 204:     if((RD1 == 0) && (procenat > 0) && (flag2 == 0)) {
[e $ ! && && == -> _RD1 `i -> 0 `i > _procenat -> 0 `i == _flag2 -> 0 `i 147  ]
{
"205
[; ;main.c: 205:         flag2 = 1;
[e = _flag2 -> 1 `i ]
"206
[; ;main.c: 206:       procenat = procenat - 10;
[e = _procenat - _procenat -> 10 `i ]
"208
[; ;main.c: 208:       cnt = 0;
[e = _cnt -> 0 `i ]
"209
[; ;main.c: 209:     }
}
[e :U 147 ]
"210
[; ;main.c: 210:       if ((RD1 =! 0) && (flag2 == 1)) {
[e $ ! && = _RD1 ! != -> 0 `i -> 0 `i == _flag2 -> 1 `i 148  ]
{
"211
[; ;main.c: 211:          flag2 = 0;
[e = _flag2 -> 0 `i ]
"212
[; ;main.c: 212:       }
}
[e :U 148 ]
"214
[; ;main.c: 214:       PWM1_procenat(procenat);
[e ( _PWM1_procenat (1 _procenat ]
"215
[; ;main.c: 215:       Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"216
[; ;main.c: 216:       sprintf(prva, "%d%% Faktor ispune", procenat);
[e ( _sprintf (1 , (. , &U _prva :s 2C _procenat ]
"217
[; ;main.c: 217:       Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"218
[; ;main.c: 218:       Lcd_Write_String(prva);
[e ( _Lcd_Write_String (1 &U _prva ]
"220
[; ;main.c: 220:     }
}
[e :U 144 ]
"226
[; ;main.c: 226:       if (mod_2 == 1) {
[e $ ! == _mod_2 -> 1 `i 149  ]
{
"227
[; ;main.c: 227:         if((RD0 == 0) && (flag1 == 0)) {
[e $ ! && == -> _RD0 `i -> 0 `i == _flag1 -> 0 `i 150  ]
{
"228
[; ;main.c: 228:             flag1 = 1;
[e = _flag1 -> 1 `i ]
"229
[; ;main.c: 229:             rpm_zadato = rpm_zadato + 5;
[e = _rpm_zadato + _rpm_zadato -> 5 `i ]
"230
[; ;main.c: 230:             if (rpm_zadato >= 300) {
[e $ ! >= _rpm_zadato -> 300 `i 151  ]
{
"231
[; ;main.c: 231:                 rpm_zadato = 300;
[e = _rpm_zadato -> 300 `i ]
"232
[; ;main.c: 232:             }
}
[e :U 151 ]
"233
[; ;main.c: 233:             Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"234
[; ;main.c: 234:             sprintf(prva, "%d%% Faktor ispune", procenat);
[e ( _sprintf (1 , (. , &U _prva :s 3C _procenat ]
"235
[; ;main.c: 235:             Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"236
[; ;main.c: 236:             Lcd_Write_String(prva);
[e ( _Lcd_Write_String (1 &U _prva ]
"237
[; ;main.c: 237:             sprintf(druga, "%d RPM (%d)",rpm ,rpm_zadato);
[e ( _sprintf (1 , , (. , &U _druga :s 4C _rpm _rpm_zadato ]
"238
[; ;main.c: 238:             Lcd_Set_Cursor(2,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"239
[; ;main.c: 239:             Lcd_Write_String(druga);
[e ( _Lcd_Write_String (1 &U _druga ]
"240
[; ;main.c: 240:         }
}
[e :U 150 ]
"241
[; ;main.c: 241:         if ((RD0 =! 0) && (flag1 == 1)) {
[e $ ! && = _RD0 ! != -> 0 `i -> 0 `i == _flag1 -> 1 `i 152  ]
{
"242
[; ;main.c: 242:             flag1 = 0;
[e = _flag1 -> 0 `i ]
"243
[; ;main.c: 243:         }
}
[e :U 152 ]
"244
[; ;main.c: 244:         if((RD1 == 0) && (flag2 == 0)) {
[e $ ! && == -> _RD1 `i -> 0 `i == _flag2 -> 0 `i 153  ]
{
"245
[; ;main.c: 245:             flag2 = 1;
[e = _flag2 -> 1 `i ]
"246
[; ;main.c: 246:             rpm_zadato = rpm_zadato - 5;
[e = _rpm_zadato - _rpm_zadato -> 5 `i ]
"247
[; ;main.c: 247:             if (rpm_zadato <= 0) {
[e $ ! <= _rpm_zadato -> 0 `i 154  ]
{
"248
[; ;main.c: 248:                 rpm_zadato = 0;
[e = _rpm_zadato -> 0 `i ]
"249
[; ;main.c: 249:             }
}
[e :U 154 ]
"250
[; ;main.c: 250:             Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"251
[; ;main.c: 251:             sprintf(prva, "%d%% Faktor ispune", procenat);
[e ( _sprintf (1 , (. , &U _prva :s 5C _procenat ]
"252
[; ;main.c: 252:             Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"253
[; ;main.c: 253:             Lcd_Write_String(prva);
[e ( _Lcd_Write_String (1 &U _prva ]
"254
[; ;main.c: 254:             sprintf(druga, "%d RPM (%d)",rpm ,rpm_zadato);
[e ( _sprintf (1 , , (. , &U _druga :s 6C _rpm _rpm_zadato ]
"255
[; ;main.c: 255:             Lcd_Set_Cursor(2,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"256
[; ;main.c: 256:             Lcd_Write_String(druga);
[e ( _Lcd_Write_String (1 &U _druga ]
"257
[; ;main.c: 257:         }
}
[e :U 153 ]
"258
[; ;main.c: 258:         if ((RD1 =! 0) && (flag2 == 1)) {
[e $ ! && = _RD1 ! != -> 0 `i -> 0 `i == _flag2 -> 1 `i 155  ]
{
"259
[; ;main.c: 259:             flag2 = 0;
[e = _flag2 -> 0 `i ]
"260
[; ;main.c: 260:         }
}
[e :U 155 ]
"265
[; ;main.c: 265:        if (sekunda == 1) {
[e $ ! == _sekunda -> 1 `i 156  ]
{
"266
[; ;main.c: 266:           sekunda = 0;
[e = _sekunda -> 0 `i ]
"268
[; ;main.c: 268:           rpm = cnt*60/20;
[e = _rpm / * _cnt -> 60 `i -> 20 `i ]
"269
[; ;main.c: 269:           if (rpm_zadato > rpm) {
[e $ ! > _rpm_zadato _rpm 157  ]
{
"270
[; ;main.c: 270:               procenat++;
[e ++ _procenat -> 1 `i ]
"272
[; ;main.c: 272:           }
}
[e :U 157 ]
"273
[; ;main.c: 273:           if (rpm_zadato < rpm) {
[e $ ! < _rpm_zadato _rpm 158  ]
{
"274
[; ;main.c: 274:               procenat--;
[e -- _procenat -> 1 `i ]
"276
[; ;main.c: 276:               }
}
[e :U 158 ]
"277
[; ;main.c: 277:          if (procenat >= 100) {
[e $ ! >= _procenat -> 100 `i 159  ]
{
"278
[; ;main.c: 278:             procenat = 100;
[e = _procenat -> 100 `i ]
"279
[; ;main.c: 279:          }
}
[e :U 159 ]
"281
[; ;main.c: 281:         PWM1_procenat(procenat);
[e ( _PWM1_procenat (1 _procenat ]
"282
[; ;main.c: 282:         Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"285
[; ;main.c: 285:         sprintf(prva, "%d%% Faktor ispune", procenat);
[e ( _sprintf (1 , (. , &U _prva :s 7C _procenat ]
"286
[; ;main.c: 286:         Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"287
[; ;main.c: 287:         Lcd_Write_String(prva);
[e ( _Lcd_Write_String (1 &U _prva ]
"290
[; ;main.c: 290:         if (rpm >= 300) {
[e $ ! >= _rpm -> 300 `i 160  ]
{
"291
[; ;main.c: 291:         sprintf(druga, "%d RPM MAX (%d)",rpm ,rpm_zadato);
[e ( _sprintf (1 , , (. , &U _druga :s 8C _rpm _rpm_zadato ]
"292
[; ;main.c: 292:         Lcd_Set_Cursor(2,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"293
[; ;main.c: 293:         Lcd_Write_String(druga);
[e ( _Lcd_Write_String (1 &U _druga ]
"294
[; ;main.c: 294:         cnt = 0;
[e = _cnt -> 0 `i ]
"295
[; ;main.c: 295:         } else if (rpm < 300){
}
[e $U 161  ]
[e :U 160 ]
[e $ ! < _rpm -> 300 `i 162  ]
{
"296
[; ;main.c: 296:         sprintf(druga, "%d RPM (%d)",rpm ,rpm_zadato);
[e ( _sprintf (1 , , (. , &U _druga :s 9C _rpm _rpm_zadato ]
"297
[; ;main.c: 297:         Lcd_Set_Cursor(2,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"298
[; ;main.c: 298:         Lcd_Write_String(druga);
[e ( _Lcd_Write_String (1 &U _druga ]
"299
[; ;main.c: 299:         cnt = 0;
[e = _cnt -> 0 `i ]
"300
[; ;main.c: 300:         }
}
[e :U 162 ]
[e :U 161 ]
"302
[; ;main.c: 302:       }
}
[e :U 156 ]
"306
[; ;main.c: 306:         }
}
[e :U 149 ]
"313
[; ;main.c: 313:   }while(1);
}
[e $ != -> 1 `i -> 0 `i 141  ]
[e :U 140 ]
"314
[; ;main.c: 314: }
[e :UE 138 ]
}
[p f _sprintf 9437312 ]
[a 2C 37 100 37 37 32 70 97 107 116 111 114 32 105 115 112 117 110 101 0 ]
[a 3C 37 100 37 37 32 70 97 107 116 111 114 32 105 115 112 117 110 101 0 ]
[a 5C 37 100 37 37 32 70 97 107 116 111 114 32 105 115 112 117 110 101 0 ]
[a 7C 37 100 37 37 32 70 97 107 116 111 114 32 105 115 112 117 110 101 0 ]
[a 1C 37 100 0 ]
[a 8C 37 100 32 82 80 77 32 77 65 88 32 40 37 100 41 0 ]
[a 4C 37 100 32 82 80 77 32 40 37 100 41 0 ]
[a 6C 37 100 32 82 80 77 32 40 37 100 41 0 ]
[a 9C 37 100 32 82 80 77 32 40 37 100 41 0 ]
