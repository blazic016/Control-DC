

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jul 08 02:09:31 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     	FNCALL	_main,_DC_Napred
   328                           	FNCALL	_main,_Lcd_Clear
   329                           	FNCALL	_main,_Lcd_Init
   330                           	FNCALL	_main,_Lcd_Set_Cursor
   331                           	FNCALL	_main,_Lcd_Write_String
   332                           	FNCALL	_main,_PWM1_Duty
   333                           	FNCALL	_main,_PWM1_Init
   334                           	FNCALL	_main,_PWM1_Start
   335                           	FNCALL	_main,_PWM1_procenat
   336                           	FNCALL	_main,_PWM2_Duty
   337                           	FNCALL	_main,_PWM2_Init
   338                           	FNCALL	_main,_PWM2_Start
   339                           	FNCALL	_main,___awdiv
   340                           	FNCALL	_main,___wmul
   341                           	FNCALL	_main,_sprintf
   342                           	FNCALL	_sprintf,___lwdiv
   343                           	FNCALL	_sprintf,___lwmod
   344                           	FNCALL	_PWM2_Init,___aldiv
   345                           	FNCALL	_PWM2_Duty,_PWM_Max_Duty
   346                           	FNCALL	_PWM2_Duty,___fldiv
   347                           	FNCALL	_PWM2_Duty,___flmul
   348                           	FNCALL	_PWM2_Duty,___fltol
   349                           	FNCALL	_PWM2_Duty,___xxtofl
   350                           	FNCALL	_PWM1_procenat,_PWM1_Duty
   351                           	FNCALL	_PWM1_procenat,___flmul
   352                           	FNCALL	_PWM1_procenat,___fltol
   353                           	FNCALL	_PWM1_procenat,___xxtofl
   354                           	FNCALL	_PWM1_Duty,_PWM_Max_Duty
   355                           	FNCALL	_PWM1_Duty,___fldiv
   356                           	FNCALL	_PWM1_Duty,___flmul
   357                           	FNCALL	_PWM1_Duty,___fltol
   358                           	FNCALL	_PWM1_Duty,___xxtofl
   359                           	FNCALL	___flmul,__Umul8_16
   360                           	FNCALL	_PWM_Max_Duty,___aldiv
   361                           	FNCALL	_PWM1_Init,___aldiv
   362                           	FNCALL	_Lcd_Write_String,_Lcd_Write_Char
   363                           	FNCALL	_Lcd_Write_Char,_Lcd_Port
   364                           	FNCALL	_Lcd_Set_Cursor,_Lcd_Cmd
   365                           	FNCALL	_Lcd_Init,_Lcd_Cmd
   366                           	FNCALL	_Lcd_Init,_Lcd_Port
   367                           	FNCALL	_Lcd_Clear,_Lcd_Cmd
   368                           	FNCALL	_Lcd_Cmd,_Lcd_Port
   369                           	FNROOT	_main
   370                           	FNCALL	intlevel1,_my_isr_routine
   371                           	global	intlevel1
   372                           	FNROOT	intlevel1
   373                           	global	_dpowers
   374                           psect	strings,class=STRING,delta=2,noexec
   375                           global __pstrings
   376                           __pstrings:
   377  1000                     stringtab:
   378  1000                     	global    __stringtab
   379                           __stringtab:
   380  1000                     ;	String table - string pointers are 1 byte each
   381                           stringcode:stringdir:
   382  1000                     movlw high(stringdir)
      + 1000                     stringdir:	
   383  1000  3010               movwf pclath
   384  1001  008A               movf fsr,w
   385  1002  0804               incf fsr
   386  1003  0A84               	addwf pc
   387  1004  0782               	global __stringbase
   388                           __stringbase:
   389  1005                     	retlw	0
   390  1005  3400               psect	strings
   391                           	global    __end_of__stringtab
   392                           __end_of__stringtab:
   393  1006                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   394                           	line	358
   395                           _dpowers:
   396  1006                     	retlw	01h
   397  1006  3401               	retlw	0
   398  1007  3400               
   399                           	retlw	0Ah
   400  1008  340A               	retlw	0
   401  1009  3400               
   402                           	retlw	064h
   403  100A  3464               	retlw	0
   404  100B  3400               
   405                           	retlw	0E8h
   406  100C  34E8               	retlw	03h
   407  100D  3403               
   408                           	retlw	010h
   409  100E  3410               	retlw	027h
   410  100F  3427               
   411                           	global __end_of_dpowers
   412                           __end_of_dpowers:
   413  1010                     	global	_dpowers
   414                           	global	_count
   415                           	global	_sekunda
   416                           	global	_freq
   417                           psect	nvBANK1,class=BANK1,space=1,noexec
   418                           global __pnvBANK1
   419                           __pnvBANK1:
   420  00BB                     _freq:
   421  00BB                            ds      4
   422  00BB                     
   423                           	global	_INTCONbits
   424                           _INTCONbits	set	0xB
   425  000B                     	global	_PORTBbits
   426                           _PORTBbits	set	0x6
   427  0006                     	global	_CCPR2L
   428                           _CCPR2L	set	0x1B
   429  001B                     	global	_CCPR1L
   430                           _CCPR1L	set	0x15
   431  0015                     	global	_RD1
   432                           _RD1	set	0x41
   433  0041                     	global	_RD0
   434                           _RD0	set	0x40
   435  0040                     	global	_RC5
   436                           _RC5	set	0x3D
   437  003D                     	global	_RC4
   438                           _RC4	set	0x3C
   439  003C                     	global	_T2CKPS1
   440                           _T2CKPS1	set	0x91
   441  0091                     	global	_T2CKPS0
   442                           _T2CKPS0	set	0x90
   443  0090                     	global	_CCP2M2
   444                           _CCP2M2	set	0xEA
   445  00EA                     	global	_CCP2M3
   446                           _CCP2M3	set	0xEB
   447  00EB                     	global	_TMR2ON
   448                           _TMR2ON	set	0x92
   449  0092                     	global	_CCP1M2
   450                           _CCP1M2	set	0xBA
   451  00BA                     	global	_CCP1M3
   452                           _CCP1M3	set	0xBB
   453  00BB                     	global	_CCP2Y
   454                           _CCP2Y	set	0xEC
   455  00EC                     	global	_CCP2X
   456                           _CCP2X	set	0xED
   457  00ED                     	global	_CCP1Y
   458                           _CCP1Y	set	0xBC
   459  00BC                     	global	_CCP1X
   460                           _CCP1X	set	0xBD
   461  00BD                     	global	_RD3
   462                           _RD3	set	0x43
   463  0043                     	global	_RD2
   464                           _RD2	set	0x42
   465  0042                     	global	_RD7
   466                           _RD7	set	0x47
   467  0047                     	global	_RD6
   468                           _RD6	set	0x46
   469  0046                     	global	_RD5
   470                           _RD5	set	0x45
   471  0045                     	global	_RD4
   472                           _RD4	set	0x44
   473  0044                     	global	_OPTION_REGbits
   474                           _OPTION_REGbits	set	0x81
   475  0081                     	global	_PR2
   476                           _PR2	set	0x92
   477  0092                     	global	_TRISC5
   478                           _TRISC5	set	0x43D
   479  043D                     	global	_TRISD7
   480                           _TRISD7	set	0x447
   481  0447                     	global	_TRISD6
   482                           _TRISD6	set	0x446
   483  0446                     	global	_TRISD5
   484                           _TRISD5	set	0x445
   485  0445                     	global	_TRISD4
   486                           _TRISD4	set	0x444
   487  0444                     	global	_TRISD3
   488                           _TRISD3	set	0x443
   489  0443                     	global	_TRISD2
   490                           _TRISD2	set	0x442
   491  0442                     	global	_TRISD1
   492                           _TRISD1	set	0x441
   493  0441                     	global	_TRISD0
   494                           _TRISD0	set	0x440
   495  0440                     	global	_TRISB2
   496                           _TRISB2	set	0x432
   497  0432                     	global	_TRISB1
   498                           _TRISB1	set	0x431
   499  0431                     	global	_TRISC4
   500                           _TRISC4	set	0x43C
   501  043C                     	global	_TRISC1
   502                           _TRISC1	set	0x439
   503  0439                     	global	_TRISC2
   504                           _TRISC2	set	0x43A
   505  043A                     psect	strings
   506                           	
   507                           STR_2:	
   508  1010                     	retlw	37	;'%'
   509  1010  3425               	retlw	100	;'d'
   510  1011  3464               	retlw	37	;'%'
   511  1012  3425               	retlw	37	;'%'
   512  1013  3425               	retlw	32	;' '
   513  1014  3420               	retlw	70	;'F'
   514  1015  3446               	retlw	97	;'a'
   515  1016  3461               	retlw	107	;'k'
   516  1017  346B               	retlw	116	;'t'
   517  1018  3474               	retlw	111	;'o'
   518  1019  346F               	retlw	114	;'r'
   519  101A  3472               	retlw	32	;' '
   520  101B  3420               	retlw	105	;'i'
   521  101C  3469               	retlw	115	;'s'
   522  101D  3473               	retlw	112	;'p'
   523  101E  3470               	retlw	117	;'u'
   524  101F  3475               	retlw	110	;'n'
   525  1020  346E               	retlw	101	;'e'
   526  1021  3465               	retlw	0
   527  1022  3400               psect	strings
   528                           	
   529                           STR_8:	
   530  1023                     	retlw	37	;'%'
   531  1023  3425               	retlw	100	;'d'
   532  1024  3464               	retlw	32	;' '
   533  1025  3420               	retlw	82	;'R'
   534  1026  3452               	retlw	80	;'P'
   535  1027  3450               	retlw	77	;'M'
   536  1028  344D               	retlw	32	;' '
   537  1029  3420               	retlw	77	;'M'
   538  102A  344D               	retlw	65	;'A'
   539  102B  3441               	retlw	88	;'X'
   540  102C  3458               	retlw	32	;' '
   541  102D  3420               	retlw	40	;'('
   542  102E  3428               	retlw	37	;'%'
   543  102F  3425               	retlw	100	;'d'
   544  1030  3464               	retlw	41	;')'
   545  1031  3429               	retlw	0
   546  1032  3400               psect	strings
   547                           	
   548                           STR_4:	
   549  1033                     	retlw	37	;'%'
   550  1033  3425               	retlw	100	;'d'
   551  1034  3464               	retlw	32	;' '
   552  1035  3420               	retlw	82	;'R'
   553  1036  3452               	retlw	80	;'P'
   554  1037  3450               	retlw	77	;'M'
   555  1038  344D               	retlw	32	;' '
   556  1039  3420               	retlw	40	;'('
   557  103A  3428               	retlw	37	;'%'
   558  103B  3425               	retlw	100	;'d'
   559  103C  3464               	retlw	41	;')'
   560  103D  3429               	retlw	0
   561  103E  3400               psect	strings
   562                           	
   563                           STR_1:	
   564  103F                     	retlw	37	;'%'
   565  103F  3425               	retlw	100	;'d'
   566  1040  3464               	retlw	0
   567  1041  3400               psect	strings
   568                           STR_3	equ	STR_2+0
   569  1010                     STR_5	equ	STR_2+0
   570  1010                     STR_7	equ	STR_2+0
   571  1010                     STR_6	equ	STR_4+0
   572  1033                     STR_9	equ	STR_4+0
   573  1033                     ; #config settings
   574                           global __CFG_FOSC$HS
   575                           __CFG_FOSC$HS equ 0x0
   576  0000                     global __CFG_WDTE$OFF
   577                           __CFG_WDTE$OFF equ 0x0
   578  0000                     global __CFG_PWRTE$OFF
   579                           __CFG_PWRTE$OFF equ 0x0
   580  0000                     global __CFG_BOREN$ON
   581                           __CFG_BOREN$ON equ 0x0
   582  0000                     global __CFG_LVP$OFF
   583                           __CFG_LVP$OFF equ 0x0
   584  0000                     global __CFG_CPD$OFF
   585                           __CFG_CPD$OFF equ 0x0
   586  0000                     global __CFG_WRT$OFF
   587                           __CFG_WRT$OFF equ 0x0
   588  0000                     global __CFG_CP$OFF
   589                           __CFG_CP$OFF equ 0x0
   590  0000                     	file	"C:\Users\User\AppData\Local\Temp\s11ts."
   591                           	line	#
   592                           psect cinit,class=CODE,delta=2
   593                           global start_initialization
   594                           start_initialization:
   595  000F                     
   596                           global __initialization
   597                           __initialization:
   598  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   599                           global __pbssCOMMON
   600                           __pbssCOMMON:
   601  007A                     _count:
   602  007A                            ds      2
   603  007A                     
   604                           psect	bssBANK3,class=BANK3,space=1,noexec
   605                           global __pbssBANK3
   606                           __pbssBANK3:
   607  01CC                     _sekunda:
   608  01CC                            ds      2
   609  01CC                     
   610                           	file	"C:\Users\User\AppData\Local\Temp\s11ts."
   611                           	line	#
   612                           ; Clear objects allocated to COMMON
   613                           psect cinit,class=CODE,delta=2,merge=1
   614                           	clrf	((__pbssCOMMON)+0)&07Fh
   615  000F  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
   616  0010  01FB               ; Clear objects allocated to BANK3
   617                           psect cinit,class=CODE,delta=2,merge=1
   618                           	bsf	status, 5	;RP0=1, select bank3
   619  0011  1683               	bsf	status, 6	;RP1=1, select bank3
   620  0012  1703               	clrf	((__pbssBANK3)+0)&07Fh
   621  0013  01CC               	clrf	((__pbssBANK3)+1)&07Fh
   622  0014  01CD               psect cinit,class=CODE,delta=2,merge=1
   623                           global end_of_initialization,__end_of__initialization
   624                           
   625                           ;End of C runtime variable initialization code
   626                           
   627                           end_of_initialization:
   628  0015                     __end_of__initialization:
   629  0015                     clrf status
   630  0015  0183               ljmp _main	;jump to C main() function
   631  0016  120A  118A  2819   psect	cstackBANK3,class=BANK3,space=1,noexec
   632                           global __pcstackBANK3
   633                           __pcstackBANK3:
   634  0190                     	global	main@flag4
   635                           main@flag4:	; 2 bytes @ 0x0
   636  0190                     	ds	2
   637  0190                     	global	main@prva
   638                           main@prva:	; 20 bytes @ 0x2
   639  0192                     	ds	20
   640  0192                     	global	main@druga
   641                           main@druga:	; 20 bytes @ 0x16
   642  01A6                     	ds	20
   643  01A6                     	global	main@mod_1
   644                           main@mod_1:	; 2 bytes @ 0x2A
   645  01BA                     	ds	2
   646  01BA                     	global	main@mod_2
   647                           main@mod_2:	; 2 bytes @ 0x2C
   648  01BC                     	ds	2
   649  01BC                     	global	main@flag3
   650                           main@flag3:	; 2 bytes @ 0x2E
   651  01BE                     	ds	2
   652  01BE                     	global	main@cnt
   653                           main@cnt:	; 2 bytes @ 0x30
   654  01C0                     	ds	2
   655  01C0                     	global	main@flag1
   656                           main@flag1:	; 2 bytes @ 0x32
   657  01C2                     	ds	2
   658  01C2                     	global	main@flag2
   659                           main@flag2:	; 2 bytes @ 0x34
   660  01C4                     	ds	2
   661  01C4                     	global	main@rpm
   662                           main@rpm:	; 2 bytes @ 0x36
   663  01C6                     	ds	2
   664  01C6                     	global	main@rpm_zadato
   665                           main@rpm_zadato:	; 2 bytes @ 0x38
   666  01C8                     	ds	2
   667  01C8                     	global	main@procenat
   668                           main@procenat:	; 2 bytes @ 0x3A
   669  01CA                     	ds	2
   670  01CA                     psect	cstackBANK1,class=BANK1,space=1,noexec
   671                           global __pcstackBANK1
   672                           __pcstackBANK1:
   673  00A0                     	global	?___fltol
   674                           ?___fltol:	; 4 bytes @ 0x0
   675  00A0                     	global	___fltol@f1
   676                           ___fltol@f1:	; 4 bytes @ 0x0
   677  00A0                     	ds	4
   678  00A0                     ??___fltol:	; 1 bytes @ 0x4
   679  00A4                     	ds	5
   680  00A4                     	global	___fltol@sign1
   681                           ___fltol@sign1:	; 1 bytes @ 0x9
   682  00A9                     	ds	1
   683  00A9                     	global	___fltol@exp1
   684                           ___fltol@exp1:	; 1 bytes @ 0xA
   685  00AA                     	ds	1
   686  00AA                     ?_PWM1_Duty:	; 2 bytes @ 0xB
   687  00AB                     ?_PWM2_Duty:	; 2 bytes @ 0xB
   688  00AB                     	global	PWM1_Duty@duty
   689                           PWM1_Duty@duty:	; 2 bytes @ 0xB
   690  00AB                     	global	PWM2_Duty@duty
   691                           PWM2_Duty@duty:	; 2 bytes @ 0xB
   692  00AB                     	ds	2
   693  00AB                     ??_PWM1_Duty:	; 1 bytes @ 0xD
   694  00AD                     ??_PWM2_Duty:	; 1 bytes @ 0xD
   695  00AD                     	ds	2
   696  00AD                     ?_PWM1_procenat:	; 2 bytes @ 0xF
   697  00AF                     	global	PWM1_procenat@i
   698                           PWM1_procenat@i:	; 2 bytes @ 0xF
   699  00AF                     	ds	2
   700  00AF                     	global	PWM1_procenat@koef
   701                           PWM1_procenat@koef:	; 4 bytes @ 0x11
   702  00B1                     	ds	4
   703  00B1                     	global	PWM1_procenat@procenat
   704                           PWM1_procenat@procenat:	; 4 bytes @ 0x15
   705  00B5                     	ds	4
   706  00B5                     	global	_PWM1_procenat$918
   707                           _PWM1_procenat$918:	; 2 bytes @ 0x19
   708  00B9                     	ds	2
   709  00B9                     psect	cstackCOMMON,class=COMMON,space=1,noexec
   710                           global __pcstackCOMMON
   711                           __pcstackCOMMON:
   712  0070                     ?_Lcd_Port:	; 1 bytes @ 0x0
   713  0070                     ?_Lcd_Cmd:	; 1 bytes @ 0x0
   714  0070                     ?_Lcd_Init:	; 1 bytes @ 0x0
   715  0070                     ?_Lcd_Write_Char:	; 1 bytes @ 0x0
   716  0070                     ?_my_isr_routine:	; 1 bytes @ 0x0
   717  0070                     ??_my_isr_routine:	; 1 bytes @ 0x0
   718  0070                     ?_main:	; 1 bytes @ 0x0
   719  0070                     ?_Lcd_Clear:	; 2 bytes @ 0x0
   720  0070                     ?_PWM1_Start:	; 2 bytes @ 0x0
   721  0070                     ?_PWM2_Start:	; 2 bytes @ 0x0
   722  0070                     ?_DC_Napred:	; 2 bytes @ 0x0
   723  0070                     	ds	2
   724  0070                     ??_Lcd_Port:	; 1 bytes @ 0x2
   725  0072                     ??_PWM1_Start:	; 1 bytes @ 0x2
   726  0072                     ??_PWM2_Start:	; 1 bytes @ 0x2
   727  0072                     ??_DC_Napred:	; 1 bytes @ 0x2
   728  0072                     	global	?__Umul8_16
   729                           ?__Umul8_16:	; 2 bytes @ 0x2
   730  0072                     	global	?___wmul
   731                           ?___wmul:	; 2 bytes @ 0x2
   732  0072                     	global	?___lwdiv
   733                           ?___lwdiv:	; 2 bytes @ 0x2
   734  0072                     	global	?___aldiv
   735                           ?___aldiv:	; 4 bytes @ 0x2
   736  0072                     	global	Lcd_Port@a
   737                           Lcd_Port@a:	; 1 bytes @ 0x2
   738  0072                     	global	__Umul8_16@multiplicand
   739                           __Umul8_16@multiplicand:	; 1 bytes @ 0x2
   740  0072                     	global	___wmul@multiplier
   741                           ___wmul@multiplier:	; 2 bytes @ 0x2
   742  0072                     	global	___lwdiv@divisor
   743                           ___lwdiv@divisor:	; 2 bytes @ 0x2
   744  0072                     	global	___aldiv@divisor
   745                           ___aldiv@divisor:	; 4 bytes @ 0x2
   746  0072                     	ds	1
   747  0072                     ??_Lcd_Cmd:	; 1 bytes @ 0x3
   748  0073                     ??_Lcd_Write_Char:	; 1 bytes @ 0x3
   749  0073                     	ds	1
   750  0073                     ??__Umul8_16:	; 1 bytes @ 0x4
   751  0074                     	global	Lcd_Write_Char@temp
   752                           Lcd_Write_Char@temp:	; 1 bytes @ 0x4
   753  0074                     	global	___wmul@multiplicand
   754                           ___wmul@multiplicand:	; 2 bytes @ 0x4
   755  0074                     	global	___lwdiv@dividend
   756                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   757  0074                     	ds	1
   758  0074                     	global	Lcd_Cmd@a
   759                           Lcd_Cmd@a:	; 1 bytes @ 0x5
   760  0075                     	global	Lcd_Write_Char@y
   761                           Lcd_Write_Char@y:	; 1 bytes @ 0x5
   762  0075                     	ds	1
   763  0075                     ??_Lcd_Clear:	; 1 bytes @ 0x6
   764  0076                     ?_Lcd_Set_Cursor:	; 1 bytes @ 0x6
   765  0076                     ??_Lcd_Init:	; 1 bytes @ 0x6
   766  0076                     ??___wmul:	; 1 bytes @ 0x6
   767  0076                     ??___lwdiv:	; 1 bytes @ 0x6
   768  0076                     	global	Lcd_Set_Cursor@b
   769                           Lcd_Set_Cursor@b:	; 1 bytes @ 0x6
   770  0076                     	global	Lcd_Write_Char@a
   771                           Lcd_Write_Char@a:	; 1 bytes @ 0x6
   772  0076                     	global	___wmul@product
   773                           ___wmul@product:	; 2 bytes @ 0x6
   774  0076                     	global	___aldiv@dividend
   775                           ___aldiv@dividend:	; 4 bytes @ 0x6
   776  0076                     	ds	1
   777  0076                     ??_Lcd_Set_Cursor:	; 1 bytes @ 0x7
   778  0077                     ?_Lcd_Write_String:	; 1 bytes @ 0x7
   779  0077                     	global	Lcd_Write_String@a
   780                           Lcd_Write_String@a:	; 2 bytes @ 0x7
   781  0077                     	global	___lwdiv@quotient
   782                           ___lwdiv@quotient:	; 2 bytes @ 0x7
   783  0077                     	ds	1
   784  0077                     ??___awdiv:	; 1 bytes @ 0x8
   785  0078                     	ds	1
   786  0078                     	global	___lwdiv@counter
   787                           ___lwdiv@counter:	; 1 bytes @ 0x9
   788  0079                     	ds	1
   789  0079                     ??_PWM1_procenat:	; 1 bytes @ 0xA
   790  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
   791                           global __pcstackBANK0
   792                           __pcstackBANK0:
   793  0020                     ??_Lcd_Write_String:	; 1 bytes @ 0x0
   794  0020                     ??___aldiv:	; 1 bytes @ 0x0
   795  0020                     	global	?___awdiv
   796                           ?___awdiv:	; 2 bytes @ 0x0
   797  0020                     	global	?___lwmod
   798                           ?___lwmod:	; 2 bytes @ 0x0
   799  0020                     	global	Lcd_Set_Cursor@a
   800                           Lcd_Set_Cursor@a:	; 1 bytes @ 0x0
   801  0020                     	global	___awdiv@divisor
   802                           ___awdiv@divisor:	; 2 bytes @ 0x0
   803  0020                     	global	___lwmod@divisor
   804                           ___lwmod@divisor:	; 2 bytes @ 0x0
   805  0020                     	global	__Umul8_16@product
   806                           __Umul8_16@product:	; 2 bytes @ 0x0
   807  0020                     	ds	1
   808  0020                     	global	Lcd_Set_Cursor@z
   809                           Lcd_Set_Cursor@z:	; 1 bytes @ 0x1
   810  0021                     	global	___aldiv@counter
   811                           ___aldiv@counter:	; 1 bytes @ 0x1
   812  0021                     	ds	1
   813  0021                     	global	Lcd_Set_Cursor@y
   814                           Lcd_Set_Cursor@y:	; 1 bytes @ 0x2
   815  0022                     	global	___aldiv@sign
   816                           ___aldiv@sign:	; 1 bytes @ 0x2
   817  0022                     	global	___awdiv@dividend
   818                           ___awdiv@dividend:	; 2 bytes @ 0x2
   819  0022                     	global	___lwmod@dividend
   820                           ___lwmod@dividend:	; 2 bytes @ 0x2
   821  0022                     	global	__Umul8_16@word_mpld
   822                           __Umul8_16@word_mpld:	; 2 bytes @ 0x2
   823  0022                     	ds	1
   824  0022                     	global	Lcd_Set_Cursor@temp
   825                           Lcd_Set_Cursor@temp:	; 1 bytes @ 0x3
   826  0023                     	global	Lcd_Write_String@i
   827                           Lcd_Write_String@i:	; 2 bytes @ 0x3
   828  0023                     	global	___aldiv@quotient
   829                           ___aldiv@quotient:	; 4 bytes @ 0x3
   830  0023                     	ds	1
   831  0023                     ??___lwmod:	; 1 bytes @ 0x4
   832  0024                     	global	___awdiv@counter
   833                           ___awdiv@counter:	; 1 bytes @ 0x4
   834  0024                     	global	__Umul8_16@multiplier
   835                           __Umul8_16@multiplier:	; 1 bytes @ 0x4
   836  0024                     	ds	1
   837  0024                     	global	___awdiv@sign
   838                           ___awdiv@sign:	; 1 bytes @ 0x5
   839  0025                     	global	___lwmod@counter
   840                           ___lwmod@counter:	; 1 bytes @ 0x5
   841  0025                     	ds	1
   842  0025                     	global	?_sprintf
   843                           ?_sprintf:	; 2 bytes @ 0x6
   844  0026                     	global	sprintf@sp
   845                           sprintf@sp:	; 2 bytes @ 0x6
   846  0026                     	global	___awdiv@quotient
   847                           ___awdiv@quotient:	; 2 bytes @ 0x6
   848  0026                     	ds	1
   849  0026                     ?_PWM1_Init:	; 2 bytes @ 0x7
   850  0027                     	global	?_PWM_Max_Duty
   851                           ?_PWM_Max_Duty:	; 2 bytes @ 0x7
   852  0027                     ?_PWM2_Init:	; 2 bytes @ 0x7
   853  0027                     	global	PWM1_Init@fre
   854                           PWM1_Init@fre:	; 4 bytes @ 0x7
   855  0027                     	global	PWM2_Init@fre
   856                           PWM2_Init@fre:	; 4 bytes @ 0x7
   857  0027                     	ds	1
   858  0027                     	global	sprintf@f
   859                           sprintf@f:	; 1 bytes @ 0x8
   860  0028                     	ds	1
   861  0028                     ??_PWM_Max_Duty:	; 1 bytes @ 0x9
   862  0029                     	ds	2
   863  0029                     ??_PWM1_Init:	; 1 bytes @ 0xB
   864  002B                     ??_PWM2_Init:	; 1 bytes @ 0xB
   865  002B                     	ds	2
   866  002B                     ??_sprintf:	; 1 bytes @ 0xD
   867  002D                     	global	?___xxtofl
   868                           ?___xxtofl:	; 4 bytes @ 0xD
   869  002D                     	global	___xxtofl@val
   870                           ___xxtofl@val:	; 4 bytes @ 0xD
   871  002D                     	ds	3
   872  002D                     	global	sprintf@ap
   873                           sprintf@ap:	; 1 bytes @ 0x10
   874  0030                     	ds	1
   875  0030                     ??___xxtofl:	; 1 bytes @ 0x11
   876  0031                     	global	sprintf@flag
   877                           sprintf@flag:	; 1 bytes @ 0x11
   878  0031                     	ds	1
   879  0031                     	global	sprintf@prec
   880                           sprintf@prec:	; 1 bytes @ 0x12
   881  0032                     	ds	1
   882  0032                     	global	sprintf@val
   883                           sprintf@val:	; 2 bytes @ 0x13
   884  0033                     	ds	2
   885  0033                     	global	sprintf@c
   886                           sprintf@c:	; 1 bytes @ 0x15
   887  0035                     	global	___xxtofl@sign
   888                           ___xxtofl@sign:	; 1 bytes @ 0x15
   889  0035                     	ds	1
   890  0035                     	global	___xxtofl@exp
   891                           ___xxtofl@exp:	; 1 bytes @ 0x16
   892  0036                     	ds	1
   893  0036                     	global	___xxtofl@arg
   894                           ___xxtofl@arg:	; 4 bytes @ 0x17
   895  0037                     	ds	4
   896  0037                     	global	?___fldiv
   897                           ?___fldiv:	; 4 bytes @ 0x1B
   898  003B                     	global	___fldiv@a
   899                           ___fldiv@a:	; 4 bytes @ 0x1B
   900  003B                     	ds	4
   901  003B                     	global	___fldiv@b
   902                           ___fldiv@b:	; 4 bytes @ 0x1F
   903  003F                     	ds	4
   904  003F                     ??___fldiv:	; 1 bytes @ 0x23
   905  0043                     	ds	5
   906  0043                     	global	___fldiv@rem
   907                           ___fldiv@rem:	; 4 bytes @ 0x28
   908  0048                     	ds	4
   909  0048                     	global	___fldiv@sign
   910                           ___fldiv@sign:	; 1 bytes @ 0x2C
   911  004C                     	ds	1
   912  004C                     	global	___fldiv@new_exp
   913                           ___fldiv@new_exp:	; 2 bytes @ 0x2D
   914  004D                     	ds	2
   915  004D                     	global	___fldiv@grs
   916                           ___fldiv@grs:	; 4 bytes @ 0x2F
   917  004F                     	ds	4
   918  004F                     	global	___fldiv@bexp
   919                           ___fldiv@bexp:	; 1 bytes @ 0x33
   920  0053                     	ds	1
   921  0053                     	global	___fldiv@aexp
   922                           ___fldiv@aexp:	; 1 bytes @ 0x34
   923  0054                     	ds	1
   924  0054                     	global	?___flmul
   925                           ?___flmul:	; 4 bytes @ 0x35
   926  0055                     	global	___flmul@b
   927                           ___flmul@b:	; 4 bytes @ 0x35
   928  0055                     	ds	4
   929  0055                     	global	___flmul@a
   930                           ___flmul@a:	; 4 bytes @ 0x39
   931  0059                     	ds	4
   932  0059                     ??___flmul:	; 1 bytes @ 0x3D
   933  005D                     	ds	5
   934  005D                     	global	___flmul@sign
   935                           ___flmul@sign:	; 1 bytes @ 0x42
   936  0062                     	ds	1
   937  0062                     	global	___flmul@aexp
   938                           ___flmul@aexp:	; 1 bytes @ 0x43
   939  0063                     	ds	1
   940  0063                     	global	___flmul@grs
   941                           ___flmul@grs:	; 4 bytes @ 0x44
   942  0064                     	ds	4
   943  0064                     	global	___flmul@bexp
   944                           ___flmul@bexp:	; 1 bytes @ 0x48
   945  0068                     	ds	1
   946  0068                     	global	___flmul@prod
   947                           ___flmul@prod:	; 4 bytes @ 0x49
   948  0069                     	ds	4
   949  0069                     	global	___flmul@temp
   950                           ___flmul@temp:	; 2 bytes @ 0x4D
   951  006D                     	ds	2
   952  006D                     ??_main:	; 1 bytes @ 0x4F
   953  006F                     	ds	1
   954  006F                     ;!
   955                           ;!Data Sizes:
   956                           ;!    Strings     50
   957                           ;!    Constant    10
   958                           ;!    Data        0
   959                           ;!    BSS         4
   960                           ;!    Persistent  4
   961                           ;!    Stack       0
   962                           ;!
   963                           ;!Auto Spaces:
   964                           ;!    Space          Size  Autos    Used
   965                           ;!    COMMON           14     10      12
   966                           ;!    BANK0            80     80      80
   967                           ;!    BANK1            80     27      31
   968                           ;!    BANK3            96     60      62
   969                           ;!    BANK2            96      0       0
   970                           
   971                           ;!
   972                           ;!Pointer List with Targets:
   973                           ;!
   974                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
   975                           ;!		 -> STR_9(CODE[12]), STR_8(CODE[16]), STR_7(CODE[19]), STR_6(CODE[12]), 
   976                           ;!		 -> STR_5(CODE[19]), STR_4(CODE[12]), STR_3(CODE[19]), STR_2(CODE[19]), 
   977                           ;!		 -> STR_1(CODE[3]), 
   978                           ;!
   979                           ;!    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
   980                           ;!		 -> main@druga(BANK3[20]), main@prva(BANK3[20]), Druga_kolona@s(BANK0[20]), 
   981                           ;!
   982                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
   983                           ;!		 -> ?_sprintf(BANK0[2]), 
   984                           ;!
   985                           ;!    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
   986                           ;!		 -> main@druga(BANK3[20]), main@prva(BANK3[20]), Druga_kolona@s(BANK0[20]), 
   987                           ;!
   988                           
   989                           
   990                           ;!
   991                           ;!Critical Paths under _main in COMMON
   992                           ;!
   993                           ;!    _sprintf->___lwdiv
   994                           ;!    ___lwmod->___lwdiv
   995                           ;!    ___awdiv->___wmul
   996                           ;!    _PWM2_Init->___aldiv
   997                           ;!    _PWM_Max_Duty->___aldiv
   998                           ;!    _PWM1_Init->___aldiv
   999                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1000                           ;!    _Lcd_Write_Char->_Lcd_Port
  1001                           ;!    _Lcd_Set_Cursor->_Lcd_Cmd
  1002                           ;!    _Lcd_Init->_Lcd_Cmd
  1003                           ;!    _Lcd_Clear->_Lcd_Cmd
  1004                           ;!    _Lcd_Cmd->_Lcd_Port
  1005                           ;!
  1006                           ;!Critical Paths under _my_isr_routine in COMMON
  1007                           ;!
  1008                           ;!    None.
  1009                           ;!
  1010                           ;!Critical Paths under _main in BANK0
  1011                           ;!
  1012                           ;!    _sprintf->___lwmod
  1013                           ;!    _PWM2_Init->___aldiv
  1014                           ;!    _PWM2_Duty->___flmul
  1015                           ;!    _PWM1_procenat->___flmul
  1016                           ;!    _PWM1_Duty->___flmul
  1017                           ;!    ___xxtofl->_PWM_Max_Duty
  1018                           ;!    ___fltol->___flmul
  1019                           ;!    ___flmul->___fldiv
  1020                           ;!    ___fldiv->___xxtofl
  1021                           ;!    _PWM_Max_Duty->___aldiv
  1022                           ;!    _PWM1_Init->___aldiv
  1023                           ;!
  1024                           ;!Critical Paths under _my_isr_routine in BANK0
  1025                           ;!
  1026                           ;!    None.
  1027                           ;!
  1028                           ;!Critical Paths under _main in BANK1
  1029                           ;!
  1030                           ;!    _main->_PWM1_procenat
  1031                           ;!    _PWM2_Duty->___fltol
  1032                           ;!    _PWM1_procenat->_PWM1_Duty
  1033                           ;!    _PWM1_Duty->___fltol
  1034                           ;!
  1035                           ;!Critical Paths under _my_isr_routine in BANK1
  1036                           ;!
  1037                           ;!    None.
  1038                           ;!
  1039                           ;!Critical Paths under _main in BANK3
  1040                           ;!
  1041                           ;!    None.
  1042                           ;!
  1043                           ;!Critical Paths under _my_isr_routine in BANK3
  1044                           ;!
  1045                           ;!    None.
  1046                           ;!
  1047                           ;!Critical Paths under _main in BANK2
  1048                           ;!
  1049                           ;!    None.
  1050                           ;!
  1051                           ;!Critical Paths under _my_isr_routine in BANK2
  1052                           ;!
  1053                           ;!    None.
  1054                           
  1055 ;;
  1056 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1057 ;;
  1058                           
  1059                           ;!
  1060                           ;!Call Graph Tables:
  1061                           ;!
  1062                           ;! ---------------------------------------------------------------------------------
  1063                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1064                           ;! ---------------------------------------------------------------------------------
  1065                           ;! (0) _main                                                61    61      0   38736
  1066                           ;!                                             79 BANK0      1     1      0
  1067                           ;!                                              0 BANK3     60    60      0
  1068                           ;!                          _DC_Napred
  1069                           ;!                          _Lcd_Clear
  1070                           ;!                           _Lcd_Init
  1071                           ;!                     _Lcd_Set_Cursor
  1072                           ;!                   _Lcd_Write_String
  1073                           ;!                          _PWM1_Duty
  1074                           ;!                          _PWM1_Init
  1075                           ;!                         _PWM1_Start
  1076                           ;!                      _PWM1_procenat
  1077                           ;!                          _PWM2_Duty
  1078                           ;!                          _PWM2_Init
  1079                           ;!                         _PWM2_Start
  1080                           ;!                            ___awdiv
  1081                           ;!                             ___wmul
  1082                           ;!                            _sprintf
  1083                           ;! ---------------------------------------------------------------------------------
  1084                           ;! (1) _sprintf                                             24    17      7    2657
  1085                           ;!                                              6 BANK0     16     9      7
  1086                           ;!                            ___lwdiv
  1087                           ;!                            ___lwmod
  1088                           ;! ---------------------------------------------------------------------------------
  1089                           ;! (2) ___lwmod                                              6     2      4     412
  1090                           ;!                                              0 BANK0      6     2      4
  1091                           ;!                            ___lwdiv (ARG)
  1092                           ;! ---------------------------------------------------------------------------------
  1093                           ;! (2) ___lwdiv                                              8     4      4     314
  1094                           ;!                                              2 COMMON     8     4      4
  1095                           ;! ---------------------------------------------------------------------------------
  1096                           ;! (1) ___wmul                                               6     2      4     244
  1097                           ;!                                              2 COMMON     6     2      4
  1098                           ;! ---------------------------------------------------------------------------------
  1099                           ;! (1) ___awdiv                                              9     5      4     625
  1100                           ;!                                              8 COMMON     1     1      0
  1101                           ;!                                              0 BANK0      8     4      4
  1102                           ;!                             ___wmul (ARG)
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (1) _PWM2_Start                                           0     0      0       0
  1105                           ;! ---------------------------------------------------------------------------------
  1106                           ;! (1) _PWM2_Init                                            8     4      4    1137
  1107                           ;!                                              7 BANK0      8     4      4
  1108                           ;!                            ___aldiv
  1109                           ;! ---------------------------------------------------------------------------------
  1110                           ;! (1) _PWM2_Duty                                            4     2      2    7649
  1111                           ;!                                             11 BANK1      4     2      2
  1112                           ;!                       _PWM_Max_Duty
  1113                           ;!                            ___fldiv
  1114                           ;!                            ___flmul
  1115                           ;!                            ___fltol
  1116                           ;!                           ___xxtofl
  1117                           ;! ---------------------------------------------------------------------------------
  1118                           ;! (1) _PWM1_procenat                                       12    10      2   13074
  1119                           ;!                                             15 BANK1     12    10      2
  1120                           ;!                          _PWM1_Duty
  1121                           ;!                            ___flmul
  1122                           ;!                            ___fltol
  1123                           ;!                           ___xxtofl
  1124                           ;! ---------------------------------------------------------------------------------
  1125                           ;! (2) _PWM1_Duty                                            4     2      2    7739
  1126                           ;!                                             11 BANK1      4     2      2
  1127                           ;!                       _PWM_Max_Duty
  1128                           ;!                            ___fldiv
  1129                           ;!                            ___flmul
  1130                           ;!                            ___fltol
  1131                           ;!                           ___xxtofl
  1132                           ;! ---------------------------------------------------------------------------------
  1133                           ;! (2) ___xxtofl                                            14    10      4     702
  1134                           ;!                                             13 BANK0     14    10      4
  1135                           ;!                       _PWM_Max_Duty (ARG)
  1136                           ;! ---------------------------------------------------------------------------------
  1137                           ;! (2) ___fltol                                             11     7      4     607
  1138                           ;!                                              0 BANK1     11     7      4
  1139                           ;!                       _PWM_Max_Duty (ARG)
  1140                           ;!                            ___fldiv (ARG)
  1141                           ;!                            ___flmul (ARG)
  1142                           ;!                           ___xxtofl (ARG)
  1143                           ;! ---------------------------------------------------------------------------------
  1144                           ;! (2) ___flmul                                             26    18      8    3713
  1145                           ;!                                             53 BANK0     26    18      8
  1146                           ;!                       _PWM_Max_Duty (ARG)
  1147                           ;!                          __Umul8_16
  1148                           ;!                            ___fldiv (ARG)
  1149                           ;!                           ___xxtofl (ARG)
  1150                           ;! ---------------------------------------------------------------------------------
  1151                           ;! (3) __Umul8_16                                            9     7      2     980
  1152                           ;!                                              2 COMMON     4     2      2
  1153                           ;!                                              0 BANK0      5     5      0
  1154                           ;! ---------------------------------------------------------------------------------
  1155                           ;! (2) ___fldiv                                             26    18      8    1425
  1156                           ;!                                             27 BANK0     26    18      8
  1157                           ;!                           ___xxtofl (ARG)
  1158                           ;! ---------------------------------------------------------------------------------
  1159                           ;! (2) _PWM_Max_Duty                                         6     4      2     985
  1160                           ;!                                              7 BANK0      6     4      2
  1161                           ;!                            ___aldiv
  1162                           ;! ---------------------------------------------------------------------------------
  1163                           ;! (1) _PWM1_Start                                           0     0      0       0
  1164                           ;! ---------------------------------------------------------------------------------
  1165                           ;! (1) _PWM1_Init                                            8     4      4    1137
  1166                           ;!                                              7 BANK0      8     4      4
  1167                           ;!                            ___aldiv
  1168                           ;! ---------------------------------------------------------------------------------
  1169                           ;! (2) ___aldiv                                             15     7      8     985
  1170                           ;!                                              2 COMMON     8     0      8
  1171                           ;!                                              0 BANK0      7     7      0
  1172                           ;! ---------------------------------------------------------------------------------
  1173                           ;! (1) _Lcd_Write_String                                     7     5      2     744
  1174                           ;!                                              7 COMMON     2     0      2
  1175                           ;!                                              0 BANK0      5     5      0
  1176                           ;!                     _Lcd_Write_Char
  1177                           ;! ---------------------------------------------------------------------------------
  1178                           ;! (2) _Lcd_Write_Char                                       4     4      0     254
  1179                           ;!                                              3 COMMON     4     4      0
  1180                           ;!                           _Lcd_Port
  1181                           ;! ---------------------------------------------------------------------------------
  1182                           ;! (1) _Lcd_Set_Cursor                                       7     6      1    1355
  1183                           ;!                                              6 COMMON     3     2      1
  1184                           ;!                                              0 BANK0      4     4      0
  1185                           ;!                            _Lcd_Cmd
  1186                           ;! ---------------------------------------------------------------------------------
  1187                           ;! (1) _Lcd_Init                                             2     2      0     279
  1188                           ;!                                              6 COMMON     2     2      0
  1189                           ;!                            _Lcd_Cmd
  1190                           ;!                           _Lcd_Port
  1191                           ;! ---------------------------------------------------------------------------------
  1192                           ;! (1) _Lcd_Clear                                            0     0      0     155
  1193                           ;!                            _Lcd_Cmd
  1194                           ;! ---------------------------------------------------------------------------------
  1195                           ;! (2) _Lcd_Cmd                                              3     3      0     155
  1196                           ;!                                              3 COMMON     3     3      0
  1197                           ;!                           _Lcd_Port
  1198                           ;! ---------------------------------------------------------------------------------
  1199                           ;! (3) _Lcd_Port                                             1     1      0     124
  1200                           ;!                                              2 COMMON     1     1      0
  1201                           ;! ---------------------------------------------------------------------------------
  1202                           ;! (1) _DC_Napred                                            0     0      0       0
  1203                           ;! ---------------------------------------------------------------------------------
  1204                           ;! Estimated maximum stack depth 3
  1205                           ;! ---------------------------------------------------------------------------------
  1206                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1207                           ;! ---------------------------------------------------------------------------------
  1208                           ;! (5) _my_isr_routine                                       2     2      0       0
  1209                           ;!                                              0 COMMON     2     2      0
  1210                           ;! ---------------------------------------------------------------------------------
  1211                           ;! Estimated maximum stack depth 5
  1212                           ;! ---------------------------------------------------------------------------------
  1213                           ;!
  1214                           ;! Call Graph Graphs:
  1215                           ;!
  1216                           ;! _main (ROOT)
  1217                           ;!   _DC_Napred
  1218                           ;!   _Lcd_Clear
  1219                           ;!     _Lcd_Cmd
  1220                           ;!       _Lcd_Port
  1221                           ;!   _Lcd_Init
  1222                           ;!     _Lcd_Cmd
  1223                           ;!       _Lcd_Port
  1224                           ;!     _Lcd_Port
  1225                           ;!   _Lcd_Set_Cursor
  1226                           ;!     _Lcd_Cmd
  1227                           ;!       _Lcd_Port
  1228                           ;!   _Lcd_Write_String
  1229                           ;!     _Lcd_Write_Char
  1230                           ;!       _Lcd_Port
  1231                           ;!   _PWM1_Duty
  1232                           ;!     _PWM_Max_Duty
  1233                           ;!       ___aldiv
  1234                           ;!     ___fldiv
  1235                           ;!       ___xxtofl (ARG)
  1236                           ;!         _PWM_Max_Duty (ARG)
  1237                           ;!           ___aldiv
  1238                           ;!     ___flmul
  1239                           ;!       _PWM_Max_Duty (ARG)
  1240                           ;!         ___aldiv
  1241                           ;!       __Umul8_16 (ARG)
  1242                           ;!       ___fldiv (ARG)
  1243                           ;!         ___xxtofl (ARG)
  1244                           ;!           _PWM_Max_Duty (ARG)
  1245                           ;!             ___aldiv
  1246                           ;!       ___xxtofl (ARG)
  1247                           ;!         _PWM_Max_Duty (ARG)
  1248                           ;!           ___aldiv
  1249                           ;!     ___fltol
  1250                           ;!       _PWM_Max_Duty (ARG)
  1251                           ;!         ___aldiv
  1252                           ;!       ___fldiv (ARG)
  1253                           ;!         ___xxtofl (ARG)
  1254                           ;!           _PWM_Max_Duty (ARG)
  1255                           ;!             ___aldiv
  1256                           ;!       ___flmul (ARG)
  1257                           ;!         _PWM_Max_Duty (ARG)
  1258                           ;!           ___aldiv
  1259                           ;!         __Umul8_16 (ARG)
  1260                           ;!         ___fldiv (ARG)
  1261                           ;!           ___xxtofl (ARG)
  1262                           ;!             _PWM_Max_Duty (ARG)
  1263                           ;!               ___aldiv
  1264                           ;!         ___xxtofl (ARG)
  1265                           ;!           _PWM_Max_Duty (ARG)
  1266                           ;!             ___aldiv
  1267                           ;!       ___xxtofl (ARG)
  1268                           ;!         _PWM_Max_Duty (ARG)
  1269                           ;!           ___aldiv
  1270                           ;!     ___xxtofl
  1271                           ;!       _PWM_Max_Duty (ARG)
  1272                           ;!         ___aldiv
  1273                           ;!   _PWM1_Init
  1274                           ;!     ___aldiv
  1275                           ;!   _PWM1_Start
  1276                           ;!   _PWM1_procenat
  1277                           ;!     _PWM1_Duty
  1278                           ;!       _PWM_Max_Duty
  1279                           ;!         ___aldiv
  1280                           ;!       ___fldiv
  1281                           ;!         ___xxtofl (ARG)
  1282                           ;!           _PWM_Max_Duty (ARG)
  1283                           ;!             ___aldiv
  1284                           ;!       ___flmul
  1285                           ;!         _PWM_Max_Duty (ARG)
  1286                           ;!           ___aldiv
  1287                           ;!         __Umul8_16 (ARG)
  1288                           ;!         ___fldiv (ARG)
  1289                           ;!           ___xxtofl (ARG)
  1290                           ;!             _PWM_Max_Duty (ARG)
  1291                           ;!               ___aldiv
  1292                           ;!         ___xxtofl (ARG)
  1293                           ;!           _PWM_Max_Duty (ARG)
  1294                           ;!             ___aldiv
  1295                           ;!       ___fltol
  1296                           ;!         _PWM_Max_Duty (ARG)
  1297                           ;!           ___aldiv
  1298                           ;!         ___fldiv (ARG)
  1299                           ;!           ___xxtofl (ARG)
  1300                           ;!             _PWM_Max_Duty (ARG)
  1301                           ;!               ___aldiv
  1302                           ;!         ___flmul (ARG)
  1303                           ;!           _PWM_Max_Duty (ARG)
  1304                           ;!             ___aldiv
  1305                           ;!           __Umul8_16 (ARG)
  1306                           ;!           ___fldiv (ARG)
  1307                           ;!             ___xxtofl (ARG)
  1308                           ;!               _PWM_Max_Duty (ARG)
  1309                           ;!                 ___aldiv
  1310                           ;!           ___xxtofl (ARG)
  1311                           ;!             _PWM_Max_Duty (ARG)
  1312                           ;!               ___aldiv
  1313                           ;!         ___xxtofl (ARG)
  1314                           ;!           _PWM_Max_Duty (ARG)
  1315                           ;!             ___aldiv
  1316                           ;!       ___xxtofl
  1317                           ;!         _PWM_Max_Duty (ARG)
  1318                           ;!           ___aldiv
  1319                           ;!     ___flmul
  1320                           ;!       _PWM_Max_Duty (ARG)
  1321                           ;!         ___aldiv
  1322                           ;!       __Umul8_16 (ARG)
  1323                           ;!       ___fldiv (ARG)
  1324                           ;!         ___xxtofl (ARG)
  1325                           ;!           _PWM_Max_Duty (ARG)
  1326                           ;!             ___aldiv
  1327                           ;!       ___xxtofl (ARG)
  1328                           ;!         _PWM_Max_Duty (ARG)
  1329                           ;!           ___aldiv
  1330                           ;!     ___fltol
  1331                           ;!       _PWM_Max_Duty (ARG)
  1332                           ;!         ___aldiv
  1333                           ;!       ___fldiv (ARG)
  1334                           ;!         ___xxtofl (ARG)
  1335                           ;!           _PWM_Max_Duty (ARG)
  1336                           ;!             ___aldiv
  1337                           ;!       ___flmul (ARG)
  1338                           ;!         _PWM_Max_Duty (ARG)
  1339                           ;!           ___aldiv
  1340                           ;!         __Umul8_16 (ARG)
  1341                           ;!         ___fldiv (ARG)
  1342                           ;!           ___xxtofl (ARG)
  1343                           ;!             _PWM_Max_Duty (ARG)
  1344                           ;!               ___aldiv
  1345                           ;!         ___xxtofl (ARG)
  1346                           ;!           _PWM_Max_Duty (ARG)
  1347                           ;!             ___aldiv
  1348                           ;!       ___xxtofl (ARG)
  1349                           ;!         _PWM_Max_Duty (ARG)
  1350                           ;!           ___aldiv
  1351                           ;!     ___xxtofl
  1352                           ;!       _PWM_Max_Duty (ARG)
  1353                           ;!         ___aldiv
  1354                           ;!   _PWM2_Duty
  1355                           ;!     _PWM_Max_Duty
  1356                           ;!       ___aldiv
  1357                           ;!     ___fldiv
  1358                           ;!       ___xxtofl (ARG)
  1359                           ;!         _PWM_Max_Duty (ARG)
  1360                           ;!           ___aldiv
  1361                           ;!     ___flmul
  1362                           ;!       _PWM_Max_Duty (ARG)
  1363                           ;!         ___aldiv
  1364                           ;!       __Umul8_16 (ARG)
  1365                           ;!       ___fldiv (ARG)
  1366                           ;!         ___xxtofl (ARG)
  1367                           ;!           _PWM_Max_Duty (ARG)
  1368                           ;!             ___aldiv
  1369                           ;!       ___xxtofl (ARG)
  1370                           ;!         _PWM_Max_Duty (ARG)
  1371                           ;!           ___aldiv
  1372                           ;!     ___fltol
  1373                           ;!       _PWM_Max_Duty (ARG)
  1374                           ;!         ___aldiv
  1375                           ;!       ___fldiv (ARG)
  1376                           ;!         ___xxtofl (ARG)
  1377                           ;!           _PWM_Max_Duty (ARG)
  1378                           ;!             ___aldiv
  1379                           ;!       ___flmul (ARG)
  1380                           ;!         _PWM_Max_Duty (ARG)
  1381                           ;!           ___aldiv
  1382                           ;!         __Umul8_16 (ARG)
  1383                           ;!         ___fldiv (ARG)
  1384                           ;!           ___xxtofl (ARG)
  1385                           ;!             _PWM_Max_Duty (ARG)
  1386                           ;!               ___aldiv
  1387                           ;!         ___xxtofl (ARG)
  1388                           ;!           _PWM_Max_Duty (ARG)
  1389                           ;!             ___aldiv
  1390                           ;!       ___xxtofl (ARG)
  1391                           ;!         _PWM_Max_Duty (ARG)
  1392                           ;!           ___aldiv
  1393                           ;!     ___xxtofl
  1394                           ;!       _PWM_Max_Duty (ARG)
  1395                           ;!         ___aldiv
  1396                           ;!   _PWM2_Init
  1397                           ;!     ___aldiv
  1398                           ;!   _PWM2_Start
  1399                           ;!   ___awdiv
  1400                           ;!     ___wmul (ARG)
  1401                           ;!   ___wmul
  1402                           ;!   _sprintf
  1403                           ;!     ___lwdiv
  1404                           ;!     ___lwmod
  1405                           ;!       ___lwdiv (ARG)
  1406                           ;!
  1407                           ;! _my_isr_routine (ROOT)
  1408                           ;!
  1409                           
  1410                           ;! Address spaces:
  1411                           
  1412                           ;!Name               Size   Autos  Total    Cost      Usage
  1413                           ;!BITCOMMON            E      0       0       0        0.0%
  1414                           ;!EEDATA             100      0       0       0        0.0%
  1415                           ;!NULL                 0      0       0       0        0.0%
  1416                           ;!CODE                 0      0       0       0        0.0%
  1417                           ;!COMMON               E      A       C       1       85.7%
  1418                           ;!BITSFR0              0      0       0       1        0.0%
  1419                           ;!SFR0                 0      0       0       1        0.0%
  1420                           ;!BITSFR1              0      0       0       2        0.0%
  1421                           ;!SFR1                 0      0       0       2        0.0%
  1422                           ;!STACK                0      0       0       2        0.0%
  1423                           ;!ABS                  0      0      B9       3        0.0%
  1424                           ;!BITBANK0            50      0       0       4        0.0%
  1425                           ;!BITSFR3              0      0       0       4        0.0%
  1426                           ;!SFR3                 0      0       0       4        0.0%
  1427                           ;!BANK0               50     50      50       5      100.0%
  1428                           ;!BITSFR2              0      0       0       5        0.0%
  1429                           ;!SFR2                 0      0       0       5        0.0%
  1430                           ;!BITBANK1            50      0       0       6        0.0%
  1431                           ;!BANK1               50     1B      1F       7       38.8%
  1432                           ;!BITBANK3            60      0       0       8        0.0%
  1433                           ;!BANK3               60     3C      3E       9       64.6%
  1434                           ;!BITBANK2            60      0       0      10        0.0%
  1435                           ;!BANK2               60      0       0      11        0.0%
  1436                           ;!DATA                 0      0      B9      12        0.0%
  1437                           
  1438                           	global	_main
  1439                           
  1440 ;; *************** function _main *****************
  1441 ;; Defined at:
  1442 ;;		line 91 in file "main.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  druga          20   22[BANK3 ] unsigned char [20]
  1447 ;;  prva           20    2[BANK3 ] unsigned char [20]
  1448 ;;  procenat        2   58[BANK3 ] int 
  1449 ;;  rpm_zadato      2   56[BANK3 ] int 
  1450 ;;  rpm             2   54[BANK3 ] int 
  1451 ;;  flag2           2   52[BANK3 ] int 
  1452 ;;  flag1           2   50[BANK3 ] int 
  1453 ;;  cnt             2   48[BANK3 ] int 
  1454 ;;  flag3           2   46[BANK3 ] int 
  1455 ;;  mod_2           2   44[BANK3 ] int 
  1456 ;;  mod_1           2   42[BANK3 ] int 
  1457 ;;  flag4           2    0[BANK3 ] int 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : B00/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       0       0       0       0
  1468 ;;      Locals:         0       0       0      60       0
  1469 ;;      Temps:          0       1       0       0       0
  1470 ;;      Totals:         0       1       0      60       0
  1471 ;;Total ram usage:       61 bytes
  1472 ;; Hardware stack levels required when called:    5
  1473 ;; This function calls:
  1474 ;;		_DC_Napred
  1475 ;;		_Lcd_Clear
  1476 ;;		_Lcd_Init
  1477 ;;		_Lcd_Set_Cursor
  1478 ;;		_Lcd_Write_String
  1479 ;;		_PWM1_Duty
  1480 ;;		_PWM1_Init
  1481 ;;		_PWM1_Start
  1482 ;;		_PWM1_procenat
  1483 ;;		_PWM2_Duty
  1484 ;;		_PWM2_Init
  1485 ;;		_PWM2_Start
  1486 ;;		___awdiv
  1487 ;;		___wmul
  1488 ;;		_sprintf
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1494                           	file	"main.c"
  1495                           	line	91
  1496                           global __pmaintext
  1497                           __pmaintext:	;psect for function _main
  1498  0019                     psect	maintext
  1499                           	file	"main.c"
  1500                           	line	91
  1501                           	global	__size_of_main
  1502                           	__size_of_main	equ	__end_of_main-_main
  1503  0431                     	
  1504                           _main:	
  1505  0019                     ;incstack = 0
  1506                           	opt	stack 3
  1507                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1508                           	line	95
  1509                           	
  1510                           l3282:	
  1511  0019                     ;main.c: 95:     TRISC4=0;
  1512                           	bsf	status, 5	;RP0=1, select bank1
  1513  0019  1683               	bcf	status, 6	;RP1=0, select bank1
  1514  001A  1303               	bcf	(1084/8)^080h,(1084)&7	;volatile
  1515  001B  1207               	line	97
  1516                           ;main.c: 97:     INTCONbits.GIE=1;
  1517                           	bsf	(11),7	;volatile
  1518  001C  178B               	line	98
  1519                           ;main.c: 98:      INTCONbits.PEIE=1;
  1520                           	bsf	(11),6	;volatile
  1521  001D  170B               	line	99
  1522                           ;main.c: 99:      INTCONbits.TMR0IE=1;
  1523                           	bsf	(11),5	;volatile
  1524  001E  168B               	line	100
  1525                           ;main.c: 100:      INTCONbits.TMR0IF=0;
  1526                           	bcf	(11),2	;volatile
  1527  001F  110B               	line	101
  1528                           ;main.c: 101:      (INTCONbits.GIE = 1);
  1529                           	bsf	(11),7	;volatile
  1530  0020  178B               	line	104
  1531                           ;main.c: 104:      OPTION_REGbits.T0CS=0;
  1532                           	bcf	(129)^080h,5	;volatile
  1533  0021  1281               	line	105
  1534                           ;main.c: 105:      OPTION_REGbits.T0SE=0;
  1535                           	bcf	(129)^080h,4	;volatile
  1536  0022  1201               	line	106
  1537                           ;main.c: 106:      OPTION_REGbits.PSA=0;
  1538                           	bcf	(129)^080h,3	;volatile
  1539  0023  1181               	line	109
  1540                           ;main.c: 109:      OPTION_REGbits.PS0=1;
  1541                           	bsf	(129)^080h,0	;volatile
  1542  0024  1401               	line	110
  1543                           ;main.c: 110:      OPTION_REGbits.PS1=1;
  1544                           	bsf	(129)^080h,1	;volatile
  1545  0025  1481               	line	111
  1546                           ;main.c: 111:      OPTION_REGbits.PS2=1;
  1547                           	bsf	(129)^080h,2	;volatile
  1548  0026  1501               	line	114
  1549                           	
  1550                           l3284:	
  1551  0027                     ;main.c: 114:   PWM1_Init(5000);
  1552                           	movlw	0
  1553  0027  3000               	bcf	status, 5	;RP0=0, select bank0
  1554  0028  1283               	bcf	status, 6	;RP1=0, select bank0
  1555  0029  1303               	movwf	(PWM1_Init@fre+3)
  1556  002A  00AA               	movlw	0
  1557  002B  3000               	movwf	(PWM1_Init@fre+2)
  1558  002C  00A9               	movlw	013h
  1559  002D  3013               	movwf	(PWM1_Init@fre+1)
  1560  002E  00A8               	movlw	088h
  1561  002F  3088               	movwf	(PWM1_Init@fre)
  1562  0030  00A7               
  1563                           	fcall	_PWM1_Init
  1564  0031  160A  118A  2706  120A  118A  	line	115
  1565                           ;main.c: 115:   PWM2_Init(5000);
  1566                           	movlw	0
  1567  0036  3000               	bcf	status, 5	;RP0=0, select bank0
  1568  0037  1283               	bcf	status, 6	;RP1=0, select bank0
  1569  0038  1303               	movwf	(PWM2_Init@fre+3)
  1570  0039  00AA               	movlw	0
  1571  003A  3000               	movwf	(PWM2_Init@fre+2)
  1572  003B  00A9               	movlw	013h
  1573  003C  3013               	movwf	(PWM2_Init@fre+1)
  1574  003D  00A8               	movlw	088h
  1575  003E  3088               	movwf	(PWM2_Init@fre)
  1576  003F  00A7               
  1577                           	fcall	_PWM2_Init
  1578  0040  160A  118A  2755  120A  118A  	line	118
  1579                           	
  1580                           l3286:	
  1581  0045                     ;main.c: 118:   TRISB1 = 0;
  1582                           	bsf	status, 5	;RP0=1, select bank1
  1583  0045  1683               	bcf	status, 6	;RP1=0, select bank1
  1584  0046  1303               	bcf	(1073/8)^080h,(1073)&7	;volatile
  1585  0047  1086               	line	119
  1586                           	
  1587                           l3288:	
  1588  0048                     ;main.c: 119:   TRISB2 = 0;
  1589                           	bcf	(1074/8)^080h,(1074)&7	;volatile
  1590  0048  1106               	line	122
  1591                           	
  1592                           l3290:	
  1593  0049                     ;main.c: 122:   TRISC2 = 0;
  1594                           	bcf	(1082/8)^080h,(1082)&7	;volatile
  1595  0049  1107               	line	124
  1596                           	
  1597                           l3292:	
  1598  004A                     ;main.c: 124:   TRISC1 = 0;
  1599                           	bcf	(1081/8)^080h,(1081)&7	;volatile
  1600  004A  1087               	line	127
  1601                           	
  1602                           l3294:	
  1603  004B                     ;main.c: 127:   TRISD0 = 1;
  1604                           	bsf	(1088/8)^080h,(1088)&7	;volatile
  1605  004B  1408               	line	128
  1606                           	
  1607                           l3296:	
  1608  004C                     ;main.c: 128:   TRISD1 = 1;
  1609                           	bsf	(1089/8)^080h,(1089)&7	;volatile
  1610  004C  1488               	line	131
  1611                           	
  1612                           l3298:	
  1613  004D                     ;main.c: 131:   TRISD2 = 0;
  1614                           	bcf	(1090/8)^080h,(1090)&7	;volatile
  1615  004D  1108               	line	132
  1616                           	
  1617                           l3300:	
  1618  004E                     ;main.c: 132:   TRISD3 = 0;
  1619                           	bcf	(1091/8)^080h,(1091)&7	;volatile
  1620  004E  1188               	line	133
  1621                           	
  1622                           l3302:	
  1623  004F                     ;main.c: 133:   TRISD4 = 0;
  1624                           	bcf	(1092/8)^080h,(1092)&7	;volatile
  1625  004F  1208               	line	134
  1626                           	
  1627                           l3304:	
  1628  0050                     ;main.c: 134:   TRISD5 = 0;
  1629                           	bcf	(1093/8)^080h,(1093)&7	;volatile
  1630  0050  1288               	line	135
  1631                           	
  1632                           l3306:	
  1633  0051                     ;main.c: 135:   TRISD6 = 0;
  1634                           	bcf	(1094/8)^080h,(1094)&7	;volatile
  1635  0051  1308               	line	136
  1636                           	
  1637                           l3308:	
  1638  0052                     ;main.c: 136:   TRISD7 = 0;
  1639                           	bcf	(1095/8)^080h,(1095)&7	;volatile
  1640  0052  1388               	line	140
  1641                           	
  1642                           l3310:	
  1643  0053                     ;main.c: 140:   TRISC5 = 1;
  1644                           	bsf	(1085/8)^080h,(1085)&7	;volatile
  1645  0053  1687               	line	142
  1646                           	
  1647                           l3312:	
  1648  0054                     ;main.c: 142:   PWM1_Duty(0);
  1649                           	movlw	0
  1650  0054  3000               	movwf	(PWM1_Duty@duty)^080h
  1651  0055  00AB               	movwf	(PWM1_Duty@duty+1)^080h
  1652  0056  00AC               	fcall	_PWM1_Duty
  1653  0057  120A  158A  22CF  120A  118A  	line	143
  1654                           	
  1655                           l3314:	
  1656  005C                     ;main.c: 143:   PWM2_Duty(0);
  1657                           	movlw	0
  1658  005C  3000               	bsf	status, 5	;RP0=1, select bank1
  1659  005D  1683               	bcf	status, 6	;RP1=0, select bank1
  1660  005E  1303               	movwf	(PWM2_Duty@duty)^080h
  1661  005F  00AB               	movwf	(PWM2_Duty@duty+1)^080h
  1662  0060  00AC               	fcall	_PWM2_Duty
  1663  0061  120A  158A  2376  120A  118A  	line	144
  1664                           	
  1665                           l3316:	
  1666  0066                     ;main.c: 144:   PWM1_Start();
  1667                           	fcall	_PWM1_Start
  1668  0066  160A  118A  2564  120A  118A  	line	145
  1669                           	
  1670                           l3318:	
  1671  006B                     ;main.c: 145:   PWM2_Start();
  1672                           	fcall	_PWM2_Start
  1673  006B  160A  118A  256D  120A  118A  	line	149
  1674                           ;main.c: 149:     Lcd_Init();
  1675                           	fcall	_Lcd_Init
  1676  0070  120A  158A  2040  120A  118A  	line	150
  1677                           ;main.c: 150:     Lcd_Clear();
  1678                           	fcall	_Lcd_Clear
  1679  0075  160A  118A  2578  120A  118A  	line	156
  1680                           	
  1681                           l3320:	
  1682  007A                     ;main.c: 156:   int flag1 = 0;
  1683                           	bsf	status, 5	;RP0=1, select bank3
  1684  007A  1683               	bsf	status, 6	;RP1=1, select bank3
  1685  007B  1703               	clrf	(main@flag1)^0180h
  1686  007C  01C2               	clrf	(main@flag1+1)^0180h
  1687  007D  01C3               	line	157
  1688                           	
  1689                           l3322:	
  1690  007E                     ;main.c: 157:   int flag2 = 0;
  1691                           	clrf	(main@flag2)^0180h
  1692  007E  01C4               	clrf	(main@flag2+1)^0180h
  1693  007F  01C5               	line	158
  1694                           	
  1695                           l3324:	
  1696  0080                     ;main.c: 158:   int flag3 = 0;
  1697                           	clrf	(main@flag3)^0180h
  1698  0080  01BE               	clrf	(main@flag3+1)^0180h
  1699  0081  01BF               	line	159
  1700                           	
  1701                           l3326:	
  1702  0082                     ;main.c: 159:   int flag4 = 0;
  1703                           	clrf	(main@flag4)^0180h
  1704  0082  0190               	clrf	(main@flag4+1)^0180h
  1705  0083  0191               	line	160
  1706                           	
  1707                           l3328:	
  1708  0084                     ;main.c: 160:   int cnt = 0;
  1709                           	clrf	(main@cnt)^0180h
  1710  0084  01C0               	clrf	(main@cnt+1)^0180h
  1711  0085  01C1               	line	166
  1712                           	
  1713                           l3330:	
  1714  0086                     ;main.c: 161:   int rpm;;main.c: 162:   char prva[20];;main.c: 163:   char druga[20];;ma
                                 in.c: 166:   int mod_1 = 0;
  1715                           	clrf	(main@mod_1)^0180h
  1716  0086  01BA               	clrf	(main@mod_1+1)^0180h
  1717  0087  01BB               	line	167
  1718                           	
  1719                           l3332:	
  1720  0088                     ;main.c: 167:   int mod_2 = 1;
  1721                           	movlw	01h
  1722  0088  3001               	movwf	(main@mod_2)^0180h
  1723  0089  00BC               	movlw	0
  1724  008A  3000               	movwf	((main@mod_2)^0180h)+1
  1725  008B  00BD               	line	170
  1726                           	
  1727                           l3334:	
  1728  008C                     ;main.c: 170:   int procenat = 60;
  1729                           	movlw	03Ch
  1730  008C  303C               	movwf	(main@procenat)^0180h
  1731  008D  00CA               	movlw	0
  1732  008E  3000               	movwf	((main@procenat)^0180h)+1
  1733  008F  00CB               	line	171
  1734                           	
  1735                           l3336:	
  1736  0090                     ;main.c: 171:   int rpm_zadato = 200;
  1737                           	movlw	0C8h
  1738  0090  30C8               	movwf	(main@rpm_zadato)^0180h
  1739  0091  00C8               	movlw	0
  1740  0092  3000               	movwf	((main@rpm_zadato)^0180h)+1
  1741  0093  00C9               	line	174
  1742                           ;main.c: 174:   do
  1743                           	
  1744                           l186:	
  1745  0094                     	line	176
  1746                           ;main.c: 175:   {;main.c: 176:       DC_Napred();
  1747                           	fcall	_DC_Napred
  1748  0094  160A  118A  255F  120A  118A  	line	183
  1749                           	
  1750                           l3338:	
  1751  0099                     ;main.c: 183:     if ((RC5 == 1) && (flag3 == 0)) {
  1752                           	bcf	status, 5	;RP0=0, select bank0
  1753  0099  1283               	bcf	status, 6	;RP1=0, select bank0
  1754  009A  1303               	btfss	(61/8),(61)&7	;volatile
  1755  009B  1E87               	goto	u4941
  1756  009C  289E               	goto	u4940
  1757  009D  289F               u4941:
  1758  009E                     	goto	l3344
  1759  009E  28B2               u4940:
  1760  009F                     	
  1761                           l3340:	
  1762  009F                     	bsf	status, 5	;RP0=1, select bank3
  1763  009F  1683               	bsf	status, 6	;RP1=1, select bank3
  1764  00A0  1703               	movf	((main@flag3)^0180h),w
  1765  00A1  083E               iorwf	((main@flag3+1)^0180h),w
  1766  00A2  043F               	btfss	status,2
  1767  00A3  1D03               	goto	u4951
  1768  00A4  28A6               	goto	u4950
  1769  00A5  28A7               u4951:
  1770  00A6                     	goto	l3344
  1771  00A6  28B2               u4950:
  1772  00A7                     	line	184
  1773                           	
  1774                           l3342:	
  1775  00A7                     ;main.c: 184:         flag3 = 1;
  1776                           	movlw	01h
  1777  00A7  3001               	movwf	(main@flag3)^0180h
  1778  00A8  00BE               	movlw	0
  1779  00A9  3000               	movwf	((main@flag3)^0180h)+1
  1780  00AA  00BF               	line	185
  1781                           ;main.c: 185:         cnt++;
  1782                           	movlw	01h
  1783  00AB  3001               	addwf	(main@cnt)^0180h,f
  1784  00AC  07C0               	skipnc
  1785  00AD  1803               	incf	(main@cnt+1)^0180h,f
  1786  00AE  0AC1               	movlw	0
  1787  00AF  3000               	addwf	(main@cnt+1)^0180h,f
  1788  00B0  07C1               	goto	l3344
  1789  00B1  28B2               	line	187
  1790                           ;main.c: 187:     }
  1791                           	
  1792                           l187:	
  1793  00B2                     	line	188
  1794                           	
  1795                           l3344:	
  1796  00B2                     ;main.c: 188:     if (RC5 == 0) {
  1797                           	bcf	status, 5	;RP0=0, select bank0
  1798  00B2  1283               	bcf	status, 6	;RP1=0, select bank0
  1799  00B3  1303               	btfsc	(61/8),(61)&7	;volatile
  1800  00B4  1A87               	goto	u4961
  1801  00B5  28B7               	goto	u4960
  1802  00B6  28B8               u4961:
  1803  00B7                     	goto	l3348
  1804  00B7  28BD               u4960:
  1805  00B8                     	line	189
  1806                           	
  1807                           l3346:	
  1808  00B8                     ;main.c: 189:         flag3 = 0;
  1809                           	bsf	status, 5	;RP0=1, select bank3
  1810  00B8  1683               	bsf	status, 6	;RP1=1, select bank3
  1811  00B9  1703               	clrf	(main@flag3)^0180h
  1812  00BA  01BE               	clrf	(main@flag3+1)^0180h
  1813  00BB  01BF               	goto	l3348
  1814  00BC  28BD               	line	190
  1815                           ;main.c: 190:     }
  1816                           	
  1817                           l188:	
  1818  00BD                     	line	193
  1819                           	
  1820                           l3348:	
  1821  00BD                     ;main.c: 193:     if (mod_1 == 1) {
  1822                           	bsf	status, 5	;RP0=1, select bank3
  1823  00BD  1683               	bsf	status, 6	;RP1=1, select bank3
  1824  00BE  1703               		decf	((main@mod_1)^0180h),w
  1825  00BF  033A               iorwf	((main@mod_1+1)^0180h),w
  1826  00C0  043B               	btfss	status,2
  1827  00C1  1D03               	goto	u4971
  1828  00C2  28C4               	goto	u4970
  1829  00C3  28C5               u4971:
  1830  00C4                     	goto	l3396
  1831  00C4  2984               u4970:
  1832  00C5                     	line	194
  1833                           	
  1834                           l3350:	
  1835  00C5                     ;main.c: 194:     if((RD0 == 0) && (procenat < 100) && (flag1 == 0)) {
  1836                           	bcf	status, 5	;RP0=0, select bank0
  1837  00C5  1283               	bcf	status, 6	;RP1=0, select bank0
  1838  00C6  1303               	btfsc	(64/8),(64)&7	;volatile
  1839  00C7  1808               	goto	u4981
  1840  00C8  28CA               	goto	u4980
  1841  00C9  28CB               u4981:
  1842  00CA                     	goto	l3362
  1843  00CA  28F1               u4980:
  1844  00CB                     	
  1845                           l3352:	
  1846  00CB                     	bsf	status, 5	;RP0=1, select bank3
  1847  00CB  1683               	bsf	status, 6	;RP1=1, select bank3
  1848  00CC  1703               	movf	(main@procenat+1)^0180h,w
  1849  00CD  084B               	xorlw	80h
  1850  00CE  3A80               	movwf	btemp+1
  1851  00CF  00FF               	movlw	(0)^80h
  1852  00D0  3080               	subwf	btemp+1,w
  1853  00D1  027F               	skipz
  1854  00D2  1D03               	goto	u4995
  1855  00D3  28D6               	movlw	064h
  1856  00D4  3064               	subwf	(main@procenat)^0180h,w
  1857  00D5  024A               u4995:
  1858  00D6                     
  1859                           	skipnc
  1860  00D6  1803               	goto	u4991
  1861  00D7  28D9               	goto	u4990
  1862  00D8  28DA               u4991:
  1863  00D9                     	goto	l3362
  1864  00D9  28F1               u4990:
  1865  00DA                     	
  1866                           l3354:	
  1867  00DA                     	bsf	status, 5	;RP0=1, select bank3
  1868  00DA  1683               	bsf	status, 6	;RP1=1, select bank3
  1869  00DB  1703               	movf	((main@flag1)^0180h),w
  1870  00DC  0842               iorwf	((main@flag1+1)^0180h),w
  1871  00DD  0443               	btfss	status,2
  1872  00DE  1D03               	goto	u5001
  1873  00DF  28E1               	goto	u5000
  1874  00E0  28E2               u5001:
  1875  00E1                     	goto	l3362
  1876  00E1  28F1               u5000:
  1877  00E2                     	line	195
  1878                           	
  1879                           l3356:	
  1880  00E2                     ;main.c: 195:         flag1 = 1;
  1881                           	movlw	01h
  1882  00E2  3001               	movwf	(main@flag1)^0180h
  1883  00E3  00C2               	movlw	0
  1884  00E4  3000               	movwf	((main@flag1)^0180h)+1
  1885  00E5  00C3               	line	196
  1886                           	
  1887                           l3358:	
  1888  00E6                     ;main.c: 196:         procenat = procenat + 10;
  1889                           	movf	(main@procenat)^0180h,w
  1890  00E6  084A               	addlw	low(0Ah)
  1891  00E7  3E0A               	movwf	(main@procenat)^0180h
  1892  00E8  00CA               	movf	(main@procenat+1)^0180h,w
  1893  00E9  084B               	skipnc
  1894  00EA  1803               	addlw	1
  1895  00EB  3E01               	addlw	high(0Ah)
  1896  00EC  3E00               	movwf	1+(main@procenat)^0180h
  1897  00ED  00CB               	line	198
  1898                           	
  1899                           l3360:	
  1900  00EE                     ;main.c: 198:         cnt = 0;
  1901                           	clrf	(main@cnt)^0180h
  1902  00EE  01C0               	clrf	(main@cnt+1)^0180h
  1903  00EF  01C1               	goto	l3362
  1904  00F0  28F1               	line	199
  1905                           ;main.c: 199:     }
  1906                           	
  1907                           l190:	
  1908  00F1                     	line	200
  1909                           	
  1910                           l3362:	
  1911  00F1                     ;main.c: 200:       if ((RD0 =! 0) && (flag1 == 1)) {
  1912                           	bcf	status, 5	;RP0=0, select bank0
  1913  00F1  1283               	bcf	status, 6	;RP1=0, select bank0
  1914  00F2  1303               	bsf	(64/8),(64)&7	;volatile
  1915  00F3  1408               	btfss	(64/8),(64)&7	;volatile
  1916  00F4  1C08               	goto	u5011
  1917  00F5  28F7               	goto	u5010
  1918  00F6  28F8               u5011:
  1919  00F7                     	goto	l3368
  1920  00F7  2903               u5010:
  1921  00F8                     	
  1922                           l3364:	
  1923  00F8                     	bsf	status, 5	;RP0=1, select bank3
  1924  00F8  1683               	bsf	status, 6	;RP1=1, select bank3
  1925  00F9  1703               		decf	((main@flag1)^0180h),w
  1926  00FA  0342               iorwf	((main@flag1+1)^0180h),w
  1927  00FB  0443               	btfss	status,2
  1928  00FC  1D03               	goto	u5021
  1929  00FD  28FF               	goto	u5020
  1930  00FE  2900               u5021:
  1931  00FF                     	goto	l3368
  1932  00FF  2903               u5020:
  1933  0100                     	line	201
  1934                           	
  1935                           l3366:	
  1936  0100                     ;main.c: 201:       flag1 = 0;
  1937                           	clrf	(main@flag1)^0180h
  1938  0100  01C2               	clrf	(main@flag1+1)^0180h
  1939  0101  01C3               	goto	l3368
  1940  0102  2903               	line	202
  1941                           ;main.c: 202:       }
  1942                           	
  1943                           l191:	
  1944  0103                     	line	204
  1945                           	
  1946                           l3368:	
  1947  0103                     ;main.c: 204:     if((RD1 == 0) && (procenat > 0) && (flag2 == 0)) {
  1948                           	bcf	status, 5	;RP0=0, select bank0
  1949  0103  1283               	bcf	status, 6	;RP1=0, select bank0
  1950  0104  1303               	btfsc	(65/8),(65)&7	;volatile
  1951  0105  1888               	goto	u5031
  1952  0106  2908               	goto	u5030
  1953  0107  2909               u5031:
  1954  0108                     	goto	l3380
  1955  0108  292F               u5030:
  1956  0109                     	
  1957                           l3370:	
  1958  0109                     	bsf	status, 5	;RP0=1, select bank3
  1959  0109  1683               	bsf	status, 6	;RP1=1, select bank3
  1960  010A  1703               	movf	(main@procenat+1)^0180h,w
  1961  010B  084B               	xorlw	80h
  1962  010C  3A80               	movwf	btemp+1
  1963  010D  00FF               	movlw	(0)^80h
  1964  010E  3080               	subwf	btemp+1,w
  1965  010F  027F               	skipz
  1966  0110  1D03               	goto	u5045
  1967  0111  2914               	movlw	01h
  1968  0112  3001               	subwf	(main@procenat)^0180h,w
  1969  0113  024A               u5045:
  1970  0114                     
  1971                           	skipc
  1972  0114  1C03               	goto	u5041
  1973  0115  2917               	goto	u5040
  1974  0116  2918               u5041:
  1975  0117                     	goto	l3380
  1976  0117  292F               u5040:
  1977  0118                     	
  1978                           l3372:	
  1979  0118                     	bsf	status, 5	;RP0=1, select bank3
  1980  0118  1683               	bsf	status, 6	;RP1=1, select bank3
  1981  0119  1703               	movf	((main@flag2)^0180h),w
  1982  011A  0844               iorwf	((main@flag2+1)^0180h),w
  1983  011B  0445               	btfss	status,2
  1984  011C  1D03               	goto	u5051
  1985  011D  291F               	goto	u5050
  1986  011E  2920               u5051:
  1987  011F                     	goto	l3380
  1988  011F  292F               u5050:
  1989  0120                     	line	205
  1990                           	
  1991                           l3374:	
  1992  0120                     ;main.c: 205:         flag2 = 1;
  1993                           	movlw	01h
  1994  0120  3001               	movwf	(main@flag2)^0180h
  1995  0121  00C4               	movlw	0
  1996  0122  3000               	movwf	((main@flag2)^0180h)+1
  1997  0123  00C5               	line	206
  1998                           	
  1999                           l3376:	
  2000  0124                     ;main.c: 206:       procenat = procenat - 10;
  2001                           	movf	(main@procenat)^0180h,w
  2002  0124  084A               	addlw	low(-10)
  2003  0125  3EF6               	movwf	(main@procenat)^0180h
  2004  0126  00CA               	movf	(main@procenat+1)^0180h,w
  2005  0127  084B               	skipnc
  2006  0128  1803               	addlw	1
  2007  0129  3E01               	addlw	high(-10)
  2008  012A  3EFF               	movwf	1+(main@procenat)^0180h
  2009  012B  00CB               	line	208
  2010                           	
  2011                           l3378:	
  2012  012C                     ;main.c: 208:       cnt = 0;
  2013                           	clrf	(main@cnt)^0180h
  2014  012C  01C0               	clrf	(main@cnt+1)^0180h
  2015  012D  01C1               	goto	l3380
  2016  012E  292F               	line	209
  2017                           ;main.c: 209:     }
  2018                           	
  2019                           l192:	
  2020  012F                     	line	210
  2021                           	
  2022                           l3380:	
  2023  012F                     ;main.c: 210:       if ((RD1 =! 0) && (flag2 == 1)) {
  2024                           	bcf	status, 5	;RP0=0, select bank0
  2025  012F  1283               	bcf	status, 6	;RP1=0, select bank0
  2026  0130  1303               	bsf	(65/8),(65)&7	;volatile
  2027  0131  1488               	btfss	(65/8),(65)&7	;volatile
  2028  0132  1C88               	goto	u5061
  2029  0133  2935               	goto	u5060
  2030  0134  2936               u5061:
  2031  0135                     	goto	l3386
  2032  0135  2941               u5060:
  2033  0136                     	
  2034                           l3382:	
  2035  0136                     	bsf	status, 5	;RP0=1, select bank3
  2036  0136  1683               	bsf	status, 6	;RP1=1, select bank3
  2037  0137  1703               		decf	((main@flag2)^0180h),w
  2038  0138  0344               iorwf	((main@flag2+1)^0180h),w
  2039  0139  0445               	btfss	status,2
  2040  013A  1D03               	goto	u5071
  2041  013B  293D               	goto	u5070
  2042  013C  293E               u5071:
  2043  013D                     	goto	l3386
  2044  013D  2941               u5070:
  2045  013E                     	line	211
  2046                           	
  2047                           l3384:	
  2048  013E                     ;main.c: 211:          flag2 = 0;
  2049                           	clrf	(main@flag2)^0180h
  2050  013E  01C4               	clrf	(main@flag2+1)^0180h
  2051  013F  01C5               	goto	l3386
  2052  0140  2941               	line	212
  2053                           ;main.c: 212:       }
  2054                           	
  2055                           l193:	
  2056  0141                     	line	214
  2057                           	
  2058                           l3386:	
  2059  0141                     ;main.c: 214:       PWM1_procenat(procenat);
  2060                           	bsf	status, 5	;RP0=1, select bank3
  2061  0141  1683               	bsf	status, 6	;RP1=1, select bank3
  2062  0142  1703               	movf	(main@procenat+1)^0180h,w
  2063  0143  084B               	bsf	status, 5	;RP0=1, select bank1
  2064  0144  1683               	bcf	status, 6	;RP1=0, select bank1
  2065  0145  1303               	movwf	(PWM1_procenat@i+1)^080h
  2066  0146  00B0               	bsf	status, 5	;RP0=1, select bank3
  2067  0147  1683               	bsf	status, 6	;RP1=1, select bank3
  2068  0148  1703               	movf	(main@procenat)^0180h,w
  2069  0149  084A               	bsf	status, 5	;RP0=1, select bank1
  2070  014A  1683               	bcf	status, 6	;RP1=0, select bank1
  2071  014B  1303               	movwf	(PWM1_procenat@i)^080h
  2072  014C  00AF               	fcall	_PWM1_procenat
  2073  014D  120A  158A  2111  120A  118A  	line	215
  2074                           	
  2075                           l3388:	
  2076  0152                     ;main.c: 215:       Lcd_Clear();
  2077                           	fcall	_Lcd_Clear
  2078  0152  160A  118A  2578  120A  118A  	line	216
  2079                           	
  2080                           l3390:	
  2081  0157                     ;main.c: 216:       sprintf(prva, "%d%% Faktor ispune", procenat);
  2082                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2083  0157  3092               	bcf	status, 5	;RP0=0, select bank0
  2084  0158  1283               	bcf	status, 6	;RP1=0, select bank0
  2085  0159  1303               	movwf	(sprintf@sp)
  2086  015A  00A6               	movlw	(0x1)
  2087  015B  3001               	movwf	(sprintf@sp+1)
  2088  015C  00A7               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2089  015D  300B               	movwf	(??_main+0)+0
  2090  015E  00EF               	movf	(??_main+0)+0,w
  2091  015F  086F               	movwf	(sprintf@f)
  2092  0160  00A8               	bsf	status, 5	;RP0=1, select bank3
  2093  0161  1683               	bsf	status, 6	;RP1=1, select bank3
  2094  0162  1703               	movf	(main@procenat+1)^0180h,w
  2095  0163  084B               	bcf	status, 5	;RP0=0, select bank0
  2096  0164  1283               	bcf	status, 6	;RP1=0, select bank0
  2097  0165  1303               	movwf	1+(?_sprintf)+03h
  2098  0166  00AA               	bsf	status, 5	;RP0=1, select bank3
  2099  0167  1683               	bsf	status, 6	;RP1=1, select bank3
  2100  0168  1703               	movf	(main@procenat)^0180h,w
  2101  0169  084A               	bcf	status, 5	;RP0=0, select bank0
  2102  016A  1283               	bcf	status, 6	;RP1=0, select bank0
  2103  016B  1303               	movwf	0+(?_sprintf)+03h
  2104  016C  00A9               	fcall	_sprintf
  2105  016D  120A  158A  24E1  120A  118A  	line	217
  2106                           	
  2107                           l3392:	
  2108  0172                     ;main.c: 217:       Lcd_Set_Cursor(1,1);
  2109                           	clrf	(Lcd_Set_Cursor@b)
  2110  0172  01F6               	incf	(Lcd_Set_Cursor@b),f
  2111  0173  0AF6               	movlw	low(01h)
  2112  0174  3001               	fcall	_Lcd_Set_Cursor
  2113  0175  160A  118A  27A4  120A  118A  	line	218
  2114                           	
  2115                           l3394:	
  2116  017A                     ;main.c: 218:       Lcd_Write_String(prva);
  2117                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2118  017A  3092               	movwf	(Lcd_Write_String@a)
  2119  017B  00F7               	movlw	(0x1)
  2120  017C  3001               	movwf	(Lcd_Write_String@a+1)
  2121  017D  00F8               	fcall	_Lcd_Write_String
  2122  017E  120A  118A  27BF  120A  118A  	goto	l3396
  2123  0183  2984               	line	220
  2124                           ;main.c: 220:     }
  2125                           	
  2126                           l189:	
  2127  0184                     	line	226
  2128                           	
  2129                           l3396:	
  2130  0184                     ;main.c: 226:       if (mod_2 == 1) {
  2131                           	bsf	status, 5	;RP0=1, select bank3
  2132  0184  1683               	bsf	status, 6	;RP1=1, select bank3
  2133  0185  1703               		decf	((main@mod_2)^0180h),w
  2134  0186  033C               iorwf	((main@mod_2+1)^0180h),w
  2135  0187  043D               	btfss	status,2
  2136  0188  1D03               	goto	u5081
  2137  0189  298B               	goto	u5080
  2138  018A  298C               u5081:
  2139  018B                     	goto	l186
  2140  018B  2894               u5080:
  2141  018C                     	line	227
  2142                           	
  2143                           l3398:	
  2144  018C                     ;main.c: 227:         if((RD0 == 0) && (flag1 == 0)) {
  2145                           	bcf	status, 5	;RP0=0, select bank0
  2146  018C  1283               	bcf	status, 6	;RP1=0, select bank0
  2147  018D  1303               	btfsc	(64/8),(64)&7	;volatile
  2148  018E  1808               	goto	u5091
  2149  018F  2991               	goto	u5090
  2150  0190  2992               u5091:
  2151  0191                     	goto	l3424
  2152  0191  2A24               u5090:
  2153  0192                     	
  2154                           l3400:	
  2155  0192                     	bsf	status, 5	;RP0=1, select bank3
  2156  0192  1683               	bsf	status, 6	;RP1=1, select bank3
  2157  0193  1703               	movf	((main@flag1)^0180h),w
  2158  0194  0842               iorwf	((main@flag1+1)^0180h),w
  2159  0195  0443               	btfss	status,2
  2160  0196  1D03               	goto	u5101
  2161  0197  2999               	goto	u5100
  2162  0198  299A               u5101:
  2163  0199                     	goto	l3424
  2164  0199  2A24               u5100:
  2165  019A                     	line	228
  2166                           	
  2167                           l3402:	
  2168  019A                     ;main.c: 228:             flag1 = 1;
  2169                           	movlw	01h
  2170  019A  3001               	movwf	(main@flag1)^0180h
  2171  019B  00C2               	movlw	0
  2172  019C  3000               	movwf	((main@flag1)^0180h)+1
  2173  019D  00C3               	line	229
  2174                           	
  2175                           l3404:	
  2176  019E                     ;main.c: 229:             rpm_zadato = rpm_zadato + 5;
  2177                           	movf	(main@rpm_zadato)^0180h,w
  2178  019E  0848               	addlw	low(05h)
  2179  019F  3E05               	movwf	(main@rpm_zadato)^0180h
  2180  01A0  00C8               	movf	(main@rpm_zadato+1)^0180h,w
  2181  01A1  0849               	skipnc
  2182  01A2  1803               	addlw	1
  2183  01A3  3E01               	addlw	high(05h)
  2184  01A4  3E00               	movwf	1+(main@rpm_zadato)^0180h
  2185  01A5  00C9               	line	230
  2186                           	
  2187                           l3406:	
  2188  01A6                     ;main.c: 230:             if (rpm_zadato >= 300) {
  2189                           	movf	(main@rpm_zadato+1)^0180h,w
  2190  01A6  0849               	xorlw	80h
  2191  01A7  3A80               	movwf	btemp+1
  2192  01A8  00FF               	movlw	(01h)^80h
  2193  01A9  3081               	subwf	btemp+1,w
  2194  01AA  027F               	skipz
  2195  01AB  1D03               	goto	u5115
  2196  01AC  29AF               	movlw	02Ch
  2197  01AD  302C               	subwf	(main@rpm_zadato)^0180h,w
  2198  01AE  0248               u5115:
  2199  01AF                     
  2200                           	skipc
  2201  01AF  1C03               	goto	u5111
  2202  01B0  29B2               	goto	u5110
  2203  01B1  29B3               u5111:
  2204  01B2                     	goto	l3410
  2205  01B2  29BA               u5110:
  2206  01B3                     	line	231
  2207                           	
  2208                           l3408:	
  2209  01B3                     ;main.c: 231:                 rpm_zadato = 300;
  2210                           	movlw	02Ch
  2211  01B3  302C               	bsf	status, 5	;RP0=1, select bank3
  2212  01B4  1683               	bsf	status, 6	;RP1=1, select bank3
  2213  01B5  1703               	movwf	(main@rpm_zadato)^0180h
  2214  01B6  00C8               	movlw	01h
  2215  01B7  3001               	movwf	((main@rpm_zadato)^0180h)+1
  2216  01B8  00C9               	goto	l3410
  2217  01B9  29BA               	line	232
  2218                           ;main.c: 232:             }
  2219                           	
  2220                           l196:	
  2221  01BA                     	line	233
  2222                           	
  2223                           l3410:	
  2224  01BA                     ;main.c: 233:             Lcd_Clear();
  2225                           	fcall	_Lcd_Clear
  2226  01BA  160A  118A  2578  120A  118A  	line	234
  2227                           	
  2228                           l3412:	
  2229  01BF                     ;main.c: 234:             sprintf(prva, "%d%% Faktor ispune", procenat);
  2230                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2231  01BF  3092               	bcf	status, 5	;RP0=0, select bank0
  2232  01C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2233  01C1  1303               	movwf	(sprintf@sp)
  2234  01C2  00A6               	movlw	(0x1)
  2235  01C3  3001               	movwf	(sprintf@sp+1)
  2236  01C4  00A7               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2237  01C5  300B               	movwf	(??_main+0)+0
  2238  01C6  00EF               	movf	(??_main+0)+0,w
  2239  01C7  086F               	movwf	(sprintf@f)
  2240  01C8  00A8               	bsf	status, 5	;RP0=1, select bank3
  2241  01C9  1683               	bsf	status, 6	;RP1=1, select bank3
  2242  01CA  1703               	movf	(main@procenat+1)^0180h,w
  2243  01CB  084B               	bcf	status, 5	;RP0=0, select bank0
  2244  01CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2245  01CD  1303               	movwf	1+(?_sprintf)+03h
  2246  01CE  00AA               	bsf	status, 5	;RP0=1, select bank3
  2247  01CF  1683               	bsf	status, 6	;RP1=1, select bank3
  2248  01D0  1703               	movf	(main@procenat)^0180h,w
  2249  01D1  084A               	bcf	status, 5	;RP0=0, select bank0
  2250  01D2  1283               	bcf	status, 6	;RP1=0, select bank0
  2251  01D3  1303               	movwf	0+(?_sprintf)+03h
  2252  01D4  00A9               	fcall	_sprintf
  2253  01D5  120A  158A  24E1  120A  118A  	line	235
  2254                           	
  2255                           l3414:	
  2256  01DA                     ;main.c: 235:             Lcd_Set_Cursor(1,1);
  2257                           	clrf	(Lcd_Set_Cursor@b)
  2258  01DA  01F6               	incf	(Lcd_Set_Cursor@b),f
  2259  01DB  0AF6               	movlw	low(01h)
  2260  01DC  3001               	fcall	_Lcd_Set_Cursor
  2261  01DD  160A  118A  27A4  120A  118A  	line	236
  2262                           	
  2263                           l3416:	
  2264  01E2                     ;main.c: 236:             Lcd_Write_String(prva);
  2265                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2266  01E2  3092               	movwf	(Lcd_Write_String@a)
  2267  01E3  00F7               	movlw	(0x1)
  2268  01E4  3001               	movwf	(Lcd_Write_String@a+1)
  2269  01E5  00F8               	fcall	_Lcd_Write_String
  2270  01E6  120A  118A  27BF  120A  118A  	line	237
  2271                           	
  2272                           l3418:	
  2273  01EB                     ;main.c: 237:             sprintf(druga, "%d RPM (%d)",rpm ,rpm_zadato);
  2274                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  2275  01EB  30A6               	bcf	status, 5	;RP0=0, select bank0
  2276  01EC  1283               	bcf	status, 6	;RP1=0, select bank0
  2277  01ED  1303               	movwf	(sprintf@sp)
  2278  01EE  00A6               	movlw	(0x1)
  2279  01EF  3001               	movwf	(sprintf@sp+1)
  2280  01F0  00A7               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2281  01F1  302E               	movwf	(??_main+0)+0
  2282  01F2  00EF               	movf	(??_main+0)+0,w
  2283  01F3  086F               	movwf	(sprintf@f)
  2284  01F4  00A8               	bsf	status, 5	;RP0=1, select bank3
  2285  01F5  1683               	bsf	status, 6	;RP1=1, select bank3
  2286  01F6  1703               	movf	(main@rpm+1)^0180h,w
  2287  01F7  0847               	bcf	status, 5	;RP0=0, select bank0
  2288  01F8  1283               	bcf	status, 6	;RP1=0, select bank0
  2289  01F9  1303               	movwf	1+(?_sprintf)+03h
  2290  01FA  00AA               	bsf	status, 5	;RP0=1, select bank3
  2291  01FB  1683               	bsf	status, 6	;RP1=1, select bank3
  2292  01FC  1703               	movf	(main@rpm)^0180h,w
  2293  01FD  0846               	bcf	status, 5	;RP0=0, select bank0
  2294  01FE  1283               	bcf	status, 6	;RP1=0, select bank0
  2295  01FF  1303               	movwf	0+(?_sprintf)+03h
  2296  0200  00A9               	bsf	status, 5	;RP0=1, select bank3
  2297  0201  1683               	bsf	status, 6	;RP1=1, select bank3
  2298  0202  1703               	movf	(main@rpm_zadato+1)^0180h,w
  2299  0203  0849               	bcf	status, 5	;RP0=0, select bank0
  2300  0204  1283               	bcf	status, 6	;RP1=0, select bank0
  2301  0205  1303               	movwf	1+(?_sprintf)+05h
  2302  0206  00AC               	bsf	status, 5	;RP0=1, select bank3
  2303  0207  1683               	bsf	status, 6	;RP1=1, select bank3
  2304  0208  1703               	movf	(main@rpm_zadato)^0180h,w
  2305  0209  0848               	bcf	status, 5	;RP0=0, select bank0
  2306  020A  1283               	bcf	status, 6	;RP1=0, select bank0
  2307  020B  1303               	movwf	0+(?_sprintf)+05h
  2308  020C  00AB               	fcall	_sprintf
  2309  020D  120A  158A  24E1  120A  118A  	line	238
  2310                           	
  2311                           l3420:	
  2312  0212                     ;main.c: 238:             Lcd_Set_Cursor(2,1);
  2313                           	clrf	(Lcd_Set_Cursor@b)
  2314  0212  01F6               	incf	(Lcd_Set_Cursor@b),f
  2315  0213  0AF6               	movlw	low(02h)
  2316  0214  3002               	fcall	_Lcd_Set_Cursor
  2317  0215  160A  118A  27A4  120A  118A  	line	239
  2318                           	
  2319                           l3422:	
  2320  021A                     ;main.c: 239:             Lcd_Write_String(druga);
  2321                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  2322  021A  30A6               	movwf	(Lcd_Write_String@a)
  2323  021B  00F7               	movlw	(0x1)
  2324  021C  3001               	movwf	(Lcd_Write_String@a+1)
  2325  021D  00F8               	fcall	_Lcd_Write_String
  2326  021E  120A  118A  27BF  120A  118A  	goto	l3424
  2327  0223  2A24               	line	240
  2328                           ;main.c: 240:         }
  2329                           	
  2330                           l195:	
  2331  0224                     	line	241
  2332                           	
  2333                           l3424:	
  2334  0224                     ;main.c: 241:         if ((RD0 =! 0) && (flag1 == 1)) {
  2335                           	bcf	status, 5	;RP0=0, select bank0
  2336  0224  1283               	bcf	status, 6	;RP1=0, select bank0
  2337  0225  1303               	bsf	(64/8),(64)&7	;volatile
  2338  0226  1408               	btfss	(64/8),(64)&7	;volatile
  2339  0227  1C08               	goto	u5121
  2340  0228  2A2A               	goto	u5120
  2341  0229  2A2B               u5121:
  2342  022A                     	goto	l3430
  2343  022A  2A36               u5120:
  2344  022B                     	
  2345                           l3426:	
  2346  022B                     	bsf	status, 5	;RP0=1, select bank3
  2347  022B  1683               	bsf	status, 6	;RP1=1, select bank3
  2348  022C  1703               		decf	((main@flag1)^0180h),w
  2349  022D  0342               iorwf	((main@flag1+1)^0180h),w
  2350  022E  0443               	btfss	status,2
  2351  022F  1D03               	goto	u5131
  2352  0230  2A32               	goto	u5130
  2353  0231  2A33               u5131:
  2354  0232                     	goto	l3430
  2355  0232  2A36               u5130:
  2356  0233                     	line	242
  2357                           	
  2358                           l3428:	
  2359  0233                     ;main.c: 242:             flag1 = 0;
  2360                           	clrf	(main@flag1)^0180h
  2361  0233  01C2               	clrf	(main@flag1+1)^0180h
  2362  0234  01C3               	goto	l3430
  2363  0235  2A36               	line	243
  2364                           ;main.c: 243:         }
  2365                           	
  2366                           l197:	
  2367  0236                     	line	244
  2368                           	
  2369                           l3430:	
  2370  0236                     ;main.c: 244:         if((RD1 == 0) && (flag2 == 0)) {
  2371                           	bcf	status, 5	;RP0=0, select bank0
  2372  0236  1283               	bcf	status, 6	;RP1=0, select bank0
  2373  0237  1303               	btfsc	(65/8),(65)&7	;volatile
  2374  0238  1888               	goto	u5141
  2375  0239  2A3B               	goto	u5140
  2376  023A  2A3C               u5141:
  2377  023B                     	goto	l3456
  2378  023B  2ACC               u5140:
  2379  023C                     	
  2380                           l3432:	
  2381  023C                     	bsf	status, 5	;RP0=1, select bank3
  2382  023C  1683               	bsf	status, 6	;RP1=1, select bank3
  2383  023D  1703               	movf	((main@flag2)^0180h),w
  2384  023E  0844               iorwf	((main@flag2+1)^0180h),w
  2385  023F  0445               	btfss	status,2
  2386  0240  1D03               	goto	u5151
  2387  0241  2A43               	goto	u5150
  2388  0242  2A44               u5151:
  2389  0243                     	goto	l3456
  2390  0243  2ACC               u5150:
  2391  0244                     	line	245
  2392                           	
  2393                           l3434:	
  2394  0244                     ;main.c: 245:             flag2 = 1;
  2395                           	movlw	01h
  2396  0244  3001               	movwf	(main@flag2)^0180h
  2397  0245  00C4               	movlw	0
  2398  0246  3000               	movwf	((main@flag2)^0180h)+1
  2399  0247  00C5               	line	246
  2400                           	
  2401                           l3436:	
  2402  0248                     ;main.c: 246:             rpm_zadato = rpm_zadato - 5;
  2403                           	movf	(main@rpm_zadato)^0180h,w
  2404  0248  0848               	addlw	low(-5)
  2405  0249  3EFB               	movwf	(main@rpm_zadato)^0180h
  2406  024A  00C8               	movf	(main@rpm_zadato+1)^0180h,w
  2407  024B  0849               	skipnc
  2408  024C  1803               	addlw	1
  2409  024D  3E01               	addlw	high(-5)
  2410  024E  3EFF               	movwf	1+(main@rpm_zadato)^0180h
  2411  024F  00C9               	line	247
  2412                           	
  2413                           l3438:	
  2414  0250                     ;main.c: 247:             if (rpm_zadato <= 0) {
  2415                           	movf	(main@rpm_zadato+1)^0180h,w
  2416  0250  0849               	xorlw	80h
  2417  0251  3A80               	movwf	btemp+1
  2418  0252  00FF               	movlw	(0)^80h
  2419  0253  3080               	subwf	btemp+1,w
  2420  0254  027F               	skipz
  2421  0255  1D03               	goto	u5165
  2422  0256  2A59               	movlw	01h
  2423  0257  3001               	subwf	(main@rpm_zadato)^0180h,w
  2424  0258  0248               u5165:
  2425  0259                     
  2426                           	skipnc
  2427  0259  1803               	goto	u5161
  2428  025A  2A5C               	goto	u5160
  2429  025B  2A5D               u5161:
  2430  025C                     	goto	l3442
  2431  025C  2A62               u5160:
  2432  025D                     	line	248
  2433                           	
  2434                           l3440:	
  2435  025D                     ;main.c: 248:                 rpm_zadato = 0;
  2436                           	bsf	status, 5	;RP0=1, select bank3
  2437  025D  1683               	bsf	status, 6	;RP1=1, select bank3
  2438  025E  1703               	clrf	(main@rpm_zadato)^0180h
  2439  025F  01C8               	clrf	(main@rpm_zadato+1)^0180h
  2440  0260  01C9               	goto	l3442
  2441  0261  2A62               	line	249
  2442                           ;main.c: 249:             }
  2443                           	
  2444                           l199:	
  2445  0262                     	line	250
  2446                           	
  2447                           l3442:	
  2448  0262                     ;main.c: 250:             Lcd_Clear();
  2449                           	fcall	_Lcd_Clear
  2450  0262  160A  118A  2578  120A  118A  	line	251
  2451                           	
  2452                           l3444:	
  2453  0267                     ;main.c: 251:             sprintf(prva, "%d%% Faktor ispune", procenat);
  2454                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2455  0267  3092               	bcf	status, 5	;RP0=0, select bank0
  2456  0268  1283               	bcf	status, 6	;RP1=0, select bank0
  2457  0269  1303               	movwf	(sprintf@sp)
  2458  026A  00A6               	movlw	(0x1)
  2459  026B  3001               	movwf	(sprintf@sp+1)
  2460  026C  00A7               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2461  026D  300B               	movwf	(??_main+0)+0
  2462  026E  00EF               	movf	(??_main+0)+0,w
  2463  026F  086F               	movwf	(sprintf@f)
  2464  0270  00A8               	bsf	status, 5	;RP0=1, select bank3
  2465  0271  1683               	bsf	status, 6	;RP1=1, select bank3
  2466  0272  1703               	movf	(main@procenat+1)^0180h,w
  2467  0273  084B               	bcf	status, 5	;RP0=0, select bank0
  2468  0274  1283               	bcf	status, 6	;RP1=0, select bank0
  2469  0275  1303               	movwf	1+(?_sprintf)+03h
  2470  0276  00AA               	bsf	status, 5	;RP0=1, select bank3
  2471  0277  1683               	bsf	status, 6	;RP1=1, select bank3
  2472  0278  1703               	movf	(main@procenat)^0180h,w
  2473  0279  084A               	bcf	status, 5	;RP0=0, select bank0
  2474  027A  1283               	bcf	status, 6	;RP1=0, select bank0
  2475  027B  1303               	movwf	0+(?_sprintf)+03h
  2476  027C  00A9               	fcall	_sprintf
  2477  027D  120A  158A  24E1  120A  118A  	line	252
  2478                           	
  2479                           l3446:	
  2480  0282                     ;main.c: 252:             Lcd_Set_Cursor(1,1);
  2481                           	clrf	(Lcd_Set_Cursor@b)
  2482  0282  01F6               	incf	(Lcd_Set_Cursor@b),f
  2483  0283  0AF6               	movlw	low(01h)
  2484  0284  3001               	fcall	_Lcd_Set_Cursor
  2485  0285  160A  118A  27A4  120A  118A  	line	253
  2486                           	
  2487                           l3448:	
  2488  028A                     ;main.c: 253:             Lcd_Write_String(prva);
  2489                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2490  028A  3092               	movwf	(Lcd_Write_String@a)
  2491  028B  00F7               	movlw	(0x1)
  2492  028C  3001               	movwf	(Lcd_Write_String@a+1)
  2493  028D  00F8               	fcall	_Lcd_Write_String
  2494  028E  120A  118A  27BF  120A  118A  	line	254
  2495                           	
  2496                           l3450:	
  2497  0293                     ;main.c: 254:             sprintf(druga, "%d RPM (%d)",rpm ,rpm_zadato);
  2498                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  2499  0293  30A6               	bcf	status, 5	;RP0=0, select bank0
  2500  0294  1283               	bcf	status, 6	;RP1=0, select bank0
  2501  0295  1303               	movwf	(sprintf@sp)
  2502  0296  00A6               	movlw	(0x1)
  2503  0297  3001               	movwf	(sprintf@sp+1)
  2504  0298  00A7               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  2505  0299  302E               	movwf	(??_main+0)+0
  2506  029A  00EF               	movf	(??_main+0)+0,w
  2507  029B  086F               	movwf	(sprintf@f)
  2508  029C  00A8               	bsf	status, 5	;RP0=1, select bank3
  2509  029D  1683               	bsf	status, 6	;RP1=1, select bank3
  2510  029E  1703               	movf	(main@rpm+1)^0180h,w
  2511  029F  0847               	bcf	status, 5	;RP0=0, select bank0
  2512  02A0  1283               	bcf	status, 6	;RP1=0, select bank0
  2513  02A1  1303               	movwf	1+(?_sprintf)+03h
  2514  02A2  00AA               	bsf	status, 5	;RP0=1, select bank3
  2515  02A3  1683               	bsf	status, 6	;RP1=1, select bank3
  2516  02A4  1703               	movf	(main@rpm)^0180h,w
  2517  02A5  0846               	bcf	status, 5	;RP0=0, select bank0
  2518  02A6  1283               	bcf	status, 6	;RP1=0, select bank0
  2519  02A7  1303               	movwf	0+(?_sprintf)+03h
  2520  02A8  00A9               	bsf	status, 5	;RP0=1, select bank3
  2521  02A9  1683               	bsf	status, 6	;RP1=1, select bank3
  2522  02AA  1703               	movf	(main@rpm_zadato+1)^0180h,w
  2523  02AB  0849               	bcf	status, 5	;RP0=0, select bank0
  2524  02AC  1283               	bcf	status, 6	;RP1=0, select bank0
  2525  02AD  1303               	movwf	1+(?_sprintf)+05h
  2526  02AE  00AC               	bsf	status, 5	;RP0=1, select bank3
  2527  02AF  1683               	bsf	status, 6	;RP1=1, select bank3
  2528  02B0  1703               	movf	(main@rpm_zadato)^0180h,w
  2529  02B1  0848               	bcf	status, 5	;RP0=0, select bank0
  2530  02B2  1283               	bcf	status, 6	;RP1=0, select bank0
  2531  02B3  1303               	movwf	0+(?_sprintf)+05h
  2532  02B4  00AB               	fcall	_sprintf
  2533  02B5  120A  158A  24E1  120A  118A  	line	255
  2534                           	
  2535                           l3452:	
  2536  02BA                     ;main.c: 255:             Lcd_Set_Cursor(2,1);
  2537                           	clrf	(Lcd_Set_Cursor@b)
  2538  02BA  01F6               	incf	(Lcd_Set_Cursor@b),f
  2539  02BB  0AF6               	movlw	low(02h)
  2540  02BC  3002               	fcall	_Lcd_Set_Cursor
  2541  02BD  160A  118A  27A4  120A  118A  	line	256
  2542                           	
  2543                           l3454:	
  2544  02C2                     ;main.c: 256:             Lcd_Write_String(druga);
  2545                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  2546  02C2  30A6               	movwf	(Lcd_Write_String@a)
  2547  02C3  00F7               	movlw	(0x1)
  2548  02C4  3001               	movwf	(Lcd_Write_String@a+1)
  2549  02C5  00F8               	fcall	_Lcd_Write_String
  2550  02C6  120A  118A  27BF  120A  118A  	goto	l3456
  2551  02CB  2ACC               	line	257
  2552                           ;main.c: 257:         }
  2553                           	
  2554                           l198:	
  2555  02CC                     	line	258
  2556                           	
  2557                           l3456:	
  2558  02CC                     ;main.c: 258:         if ((RD1 =! 0) && (flag2 == 1)) {
  2559                           	bcf	status, 5	;RP0=0, select bank0
  2560  02CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2561  02CD  1303               	bsf	(65/8),(65)&7	;volatile
  2562  02CE  1488               	btfss	(65/8),(65)&7	;volatile
  2563  02CF  1C88               	goto	u5171
  2564  02D0  2AD2               	goto	u5170
  2565  02D1  2AD3               u5171:
  2566  02D2                     	goto	l3462
  2567  02D2  2ADE               u5170:
  2568  02D3                     	
  2569                           l3458:	
  2570  02D3                     	bsf	status, 5	;RP0=1, select bank3
  2571  02D3  1683               	bsf	status, 6	;RP1=1, select bank3
  2572  02D4  1703               		decf	((main@flag2)^0180h),w
  2573  02D5  0344               iorwf	((main@flag2+1)^0180h),w
  2574  02D6  0445               	btfss	status,2
  2575  02D7  1D03               	goto	u5181
  2576  02D8  2ADA               	goto	u5180
  2577  02D9  2ADB               u5181:
  2578  02DA                     	goto	l3462
  2579  02DA  2ADE               u5180:
  2580  02DB                     	line	259
  2581                           	
  2582                           l3460:	
  2583  02DB                     ;main.c: 259:             flag2 = 0;
  2584                           	clrf	(main@flag2)^0180h
  2585  02DB  01C4               	clrf	(main@flag2+1)^0180h
  2586  02DC  01C5               	goto	l3462
  2587  02DD  2ADE               	line	260
  2588                           ;main.c: 260:         }
  2589                           	
  2590                           l200:	
  2591  02DE                     	line	265
  2592                           	
  2593                           l3462:	
  2594  02DE                     ;main.c: 265:        if (sekunda == 1) {
  2595                           	bsf	status, 5	;RP0=1, select bank3
  2596  02DE  1683               	bsf	status, 6	;RP1=1, select bank3
  2597  02DF  1703               		decf	((_sekunda)^0180h),w
  2598  02E0  034C               iorwf	((_sekunda+1)^0180h),w
  2599  02E1  044D               	btfss	status,2
  2600  02E2  1D03               	goto	u5191
  2601  02E3  2AE5               	goto	u5190
  2602  02E4  2AE6               u5191:
  2603  02E5                     	goto	l186
  2604  02E5  2894               u5190:
  2605  02E6                     	line	266
  2606                           	
  2607                           l3464:	
  2608  02E6                     ;main.c: 266:           sekunda = 0;
  2609                           	clrf	(_sekunda)^0180h
  2610  02E6  01CC               	clrf	(_sekunda+1)^0180h
  2611  02E7  01CD               	line	268
  2612                           	
  2613                           l3466:	
  2614  02E8                     ;main.c: 268:           rpm = cnt*60/20;
  2615                           	movlw	014h
  2616  02E8  3014               	bcf	status, 5	;RP0=0, select bank0
  2617  02E9  1283               	bcf	status, 6	;RP1=0, select bank0
  2618  02EA  1303               	movwf	(___awdiv@divisor)
  2619  02EB  00A0               	movlw	0
  2620  02EC  3000               	movwf	((___awdiv@divisor))+1
  2621  02ED  00A1               	bsf	status, 5	;RP0=1, select bank3
  2622  02EE  1683               	bsf	status, 6	;RP1=1, select bank3
  2623  02EF  1703               	movf	(main@cnt+1)^0180h,w
  2624  02F0  0841               	movwf	(___wmul@multiplier+1)
  2625  02F1  00F3               	movf	(main@cnt)^0180h,w
  2626  02F2  0840               	movwf	(___wmul@multiplier)
  2627  02F3  00F2               	movlw	03Ch
  2628  02F4  303C               	movwf	(___wmul@multiplicand)
  2629  02F5  00F4               	movlw	0
  2630  02F6  3000               	movwf	((___wmul@multiplicand))+1
  2631  02F7  00F5               	fcall	___wmul
  2632  02F8  160A  118A  25C2  120A  118A  	movf	(1+(?___wmul)),w
  2633  02FD  0873               	bcf	status, 5	;RP0=0, select bank0
  2634  02FE  1283               	bcf	status, 6	;RP1=0, select bank0
  2635  02FF  1303               	movwf	(___awdiv@dividend+1)
  2636  0300  00A3               	movf	(0+(?___wmul)),w
  2637  0301  0872               	movwf	(___awdiv@dividend)
  2638  0302  00A2               	fcall	___awdiv
  2639  0303  120A  158A  209E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2640  0308  1283               	bcf	status, 6	;RP1=0, select bank0
  2641  0309  1303               	movf	(1+(?___awdiv)),w
  2642  030A  0821               	bsf	status, 5	;RP0=1, select bank3
  2643  030B  1683               	bsf	status, 6	;RP1=1, select bank3
  2644  030C  1703               	movwf	(main@rpm+1)^0180h
  2645  030D  00C7               	bcf	status, 5	;RP0=0, select bank0
  2646  030E  1283               	bcf	status, 6	;RP1=0, select bank0
  2647  030F  1303               	movf	(0+(?___awdiv)),w
  2648  0310  0820               	bsf	status, 5	;RP0=1, select bank3
  2649  0311  1683               	bsf	status, 6	;RP1=1, select bank3
  2650  0312  1703               	movwf	(main@rpm)^0180h
  2651  0313  00C6               	line	269
  2652                           	
  2653                           l3468:	
  2654  0314                     ;main.c: 269:           if (rpm_zadato > rpm) {
  2655                           	movf	(main@rpm+1)^0180h,w
  2656  0314  0847               	xorlw	80h
  2657  0315  3A80               	bcf	status, 5	;RP0=0, select bank0
  2658  0316  1283               	bcf	status, 6	;RP1=0, select bank0
  2659  0317  1303               	movwf	(??_main+0)+0
  2660  0318  00EF               	bsf	status, 5	;RP0=1, select bank3
  2661  0319  1683               	bsf	status, 6	;RP1=1, select bank3
  2662  031A  1703               	movf	(main@rpm_zadato+1)^0180h,w
  2663  031B  0849               	xorlw	80h
  2664  031C  3A80               	bcf	status, 5	;RP0=0, select bank0
  2665  031D  1283               	bcf	status, 6	;RP1=0, select bank0
  2666  031E  1303               	subwf	(??_main+0)+0,w
  2667  031F  026F               	skipz
  2668  0320  1D03               	goto	u5205
  2669  0321  2B26               	bsf	status, 5	;RP0=1, select bank3
  2670  0322  1683               	bsf	status, 6	;RP1=1, select bank3
  2671  0323  1703               	movf	(main@rpm_zadato)^0180h,w
  2672  0324  0848               	subwf	(main@rpm)^0180h,w
  2673  0325  0246               u5205:
  2674  0326                     
  2675                           	skipnc
  2676  0326  1803               	goto	u5201
  2677  0327  2B29               	goto	u5200
  2678  0328  2B2A               u5201:
  2679  0329                     	goto	l202
  2680  0329  2B32               u5200:
  2681  032A                     	line	270
  2682                           	
  2683                           l3470:	
  2684  032A                     ;main.c: 270:               procenat++;
  2685                           	movlw	01h
  2686  032A  3001               	bsf	status, 5	;RP0=1, select bank3
  2687  032B  1683               	bsf	status, 6	;RP1=1, select bank3
  2688  032C  1703               	addwf	(main@procenat)^0180h,f
  2689  032D  07CA               	skipnc
  2690  032E  1803               	incf	(main@procenat+1)^0180h,f
  2691  032F  0ACB               	movlw	0
  2692  0330  3000               	addwf	(main@procenat+1)^0180h,f
  2693  0331  07CB               	line	272
  2694                           ;main.c: 272:           }
  2695                           	
  2696                           l202:	
  2697  0332                     	line	273
  2698                           ;main.c: 273:           if (rpm_zadato < rpm) {
  2699                           	bsf	status, 5	;RP0=1, select bank3
  2700  0332  1683               	bsf	status, 6	;RP1=1, select bank3
  2701  0333  1703               	movf	(main@rpm_zadato+1)^0180h,w
  2702  0334  0849               	xorlw	80h
  2703  0335  3A80               	bcf	status, 5	;RP0=0, select bank0
  2704  0336  1283               	bcf	status, 6	;RP1=0, select bank0
  2705  0337  1303               	movwf	(??_main+0)+0
  2706  0338  00EF               	bsf	status, 5	;RP0=1, select bank3
  2707  0339  1683               	bsf	status, 6	;RP1=1, select bank3
  2708  033A  1703               	movf	(main@rpm+1)^0180h,w
  2709  033B  0847               	xorlw	80h
  2710  033C  3A80               	bcf	status, 5	;RP0=0, select bank0
  2711  033D  1283               	bcf	status, 6	;RP1=0, select bank0
  2712  033E  1303               	subwf	(??_main+0)+0,w
  2713  033F  026F               	skipz
  2714  0340  1D03               	goto	u5215
  2715  0341  2B46               	bsf	status, 5	;RP0=1, select bank3
  2716  0342  1683               	bsf	status, 6	;RP1=1, select bank3
  2717  0343  1703               	movf	(main@rpm)^0180h,w
  2718  0344  0846               	subwf	(main@rpm_zadato)^0180h,w
  2719  0345  0248               u5215:
  2720  0346                     
  2721                           	skipnc
  2722  0346  1803               	goto	u5211
  2723  0347  2B49               	goto	u5210
  2724  0348  2B4A               u5211:
  2725  0349                     	goto	l3474
  2726  0349  2B53               u5210:
  2727  034A                     	line	274
  2728                           	
  2729                           l3472:	
  2730  034A                     ;main.c: 274:               procenat--;
  2731                           	movlw	0FFh
  2732  034A  30FF               	bsf	status, 5	;RP0=1, select bank3
  2733  034B  1683               	bsf	status, 6	;RP1=1, select bank3
  2734  034C  1703               	addwf	(main@procenat)^0180h,f
  2735  034D  07CA               	skipnc
  2736  034E  1803               	incf	(main@procenat+1)^0180h,f
  2737  034F  0ACB               	movlw	0FFh
  2738  0350  30FF               	addwf	(main@procenat+1)^0180h,f
  2739  0351  07CB               	goto	l3474
  2740  0352  2B53               	line	276
  2741                           ;main.c: 276:               }
  2742                           	
  2743                           l203:	
  2744  0353                     	line	277
  2745                           	
  2746                           l3474:	
  2747  0353                     ;main.c: 277:          if (procenat >= 100) {
  2748                           	bsf	status, 5	;RP0=1, select bank3
  2749  0353  1683               	bsf	status, 6	;RP1=1, select bank3
  2750  0354  1703               	movf	(main@procenat+1)^0180h,w
  2751  0355  084B               	xorlw	80h
  2752  0356  3A80               	movwf	btemp+1
  2753  0357  00FF               	movlw	(0)^80h
  2754  0358  3080               	subwf	btemp+1,w
  2755  0359  027F               	skipz
  2756  035A  1D03               	goto	u5225
  2757  035B  2B5E               	movlw	064h
  2758  035C  3064               	subwf	(main@procenat)^0180h,w
  2759  035D  024A               u5225:
  2760  035E                     
  2761                           	skipc
  2762  035E  1C03               	goto	u5221
  2763  035F  2B61               	goto	u5220
  2764  0360  2B62               u5221:
  2765  0361                     	goto	l3478
  2766  0361  2B69               u5220:
  2767  0362                     	line	278
  2768                           	
  2769                           l3476:	
  2770  0362                     ;main.c: 278:             procenat = 100;
  2771                           	movlw	064h
  2772  0362  3064               	bsf	status, 5	;RP0=1, select bank3
  2773  0363  1683               	bsf	status, 6	;RP1=1, select bank3
  2774  0364  1703               	movwf	(main@procenat)^0180h
  2775  0365  00CA               	movlw	0
  2776  0366  3000               	movwf	((main@procenat)^0180h)+1
  2777  0367  00CB               	goto	l3478
  2778  0368  2B69               	line	279
  2779                           ;main.c: 279:          }
  2780                           	
  2781                           l204:	
  2782  0369                     	line	281
  2783                           	
  2784                           l3478:	
  2785  0369                     ;main.c: 281:         PWM1_procenat(procenat);
  2786                           	bsf	status, 5	;RP0=1, select bank3
  2787  0369  1683               	bsf	status, 6	;RP1=1, select bank3
  2788  036A  1703               	movf	(main@procenat+1)^0180h,w
  2789  036B  084B               	bsf	status, 5	;RP0=1, select bank1
  2790  036C  1683               	bcf	status, 6	;RP1=0, select bank1
  2791  036D  1303               	movwf	(PWM1_procenat@i+1)^080h
  2792  036E  00B0               	bsf	status, 5	;RP0=1, select bank3
  2793  036F  1683               	bsf	status, 6	;RP1=1, select bank3
  2794  0370  1703               	movf	(main@procenat)^0180h,w
  2795  0371  084A               	bsf	status, 5	;RP0=1, select bank1
  2796  0372  1683               	bcf	status, 6	;RP1=0, select bank1
  2797  0373  1303               	movwf	(PWM1_procenat@i)^080h
  2798  0374  00AF               	fcall	_PWM1_procenat
  2799  0375  120A  158A  2111  120A  118A  	line	282
  2800                           	
  2801                           l3480:	
  2802  037A                     ;main.c: 282:         Lcd_Clear();
  2803                           	fcall	_Lcd_Clear
  2804  037A  160A  118A  2578  120A  118A  	line	285
  2805                           	
  2806                           l3482:	
  2807  037F                     ;main.c: 285:         sprintf(prva, "%d%% Faktor ispune", procenat);
  2808                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2809  037F  3092               	bcf	status, 5	;RP0=0, select bank0
  2810  0380  1283               	bcf	status, 6	;RP1=0, select bank0
  2811  0381  1303               	movwf	(sprintf@sp)
  2812  0382  00A6               	movlw	(0x1)
  2813  0383  3001               	movwf	(sprintf@sp+1)
  2814  0384  00A7               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  2815  0385  300B               	movwf	(??_main+0)+0
  2816  0386  00EF               	movf	(??_main+0)+0,w
  2817  0387  086F               	movwf	(sprintf@f)
  2818  0388  00A8               	bsf	status, 5	;RP0=1, select bank3
  2819  0389  1683               	bsf	status, 6	;RP1=1, select bank3
  2820  038A  1703               	movf	(main@procenat+1)^0180h,w
  2821  038B  084B               	bcf	status, 5	;RP0=0, select bank0
  2822  038C  1283               	bcf	status, 6	;RP1=0, select bank0
  2823  038D  1303               	movwf	1+(?_sprintf)+03h
  2824  038E  00AA               	bsf	status, 5	;RP0=1, select bank3
  2825  038F  1683               	bsf	status, 6	;RP1=1, select bank3
  2826  0390  1703               	movf	(main@procenat)^0180h,w
  2827  0391  084A               	bcf	status, 5	;RP0=0, select bank0
  2828  0392  1283               	bcf	status, 6	;RP1=0, select bank0
  2829  0393  1303               	movwf	0+(?_sprintf)+03h
  2830  0394  00A9               	fcall	_sprintf
  2831  0395  120A  158A  24E1  120A  118A  	line	286
  2832                           	
  2833                           l3484:	
  2834  039A                     ;main.c: 286:         Lcd_Set_Cursor(1,1);
  2835                           	clrf	(Lcd_Set_Cursor@b)
  2836  039A  01F6               	incf	(Lcd_Set_Cursor@b),f
  2837  039B  0AF6               	movlw	low(01h)
  2838  039C  3001               	fcall	_Lcd_Set_Cursor
  2839  039D  160A  118A  27A4  120A  118A  	line	287
  2840                           	
  2841                           l3486:	
  2842  03A2                     ;main.c: 287:         Lcd_Write_String(prva);
  2843                           	movlw	(low(main@prva|((0x1)<<8))&0ffh)
  2844  03A2  3092               	movwf	(Lcd_Write_String@a)
  2845  03A3  00F7               	movlw	(0x1)
  2846  03A4  3001               	movwf	(Lcd_Write_String@a+1)
  2847  03A5  00F8               	fcall	_Lcd_Write_String
  2848  03A6  120A  118A  27BF  120A  118A  	line	290
  2849                           	
  2850                           l3488:	
  2851  03AB                     ;main.c: 290:         if (rpm >= 300) {
  2852                           	bsf	status, 5	;RP0=1, select bank3
  2853  03AB  1683               	bsf	status, 6	;RP1=1, select bank3
  2854  03AC  1703               	movf	(main@rpm+1)^0180h,w
  2855  03AD  0847               	xorlw	80h
  2856  03AE  3A80               	movwf	btemp+1
  2857  03AF  00FF               	movlw	(01h)^80h
  2858  03B0  3081               	subwf	btemp+1,w
  2859  03B1  027F               	skipz
  2860  03B2  1D03               	goto	u5235
  2861  03B3  2BB6               	movlw	02Ch
  2862  03B4  302C               	subwf	(main@rpm)^0180h,w
  2863  03B5  0246               u5235:
  2864  03B6                     
  2865                           	skipc
  2866  03B6  1C03               	goto	u5231
  2867  03B7  2BB9               	goto	u5230
  2868  03B8  2BBA               u5231:
  2869  03B9                     	goto	l3498
  2870  03B9  2BF7               u5230:
  2871  03BA                     	line	291
  2872                           	
  2873                           l3490:	
  2874  03BA                     ;main.c: 291:         sprintf(druga, "%d RPM MAX (%d)",rpm ,rpm_zadato);
  2875                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  2876  03BA  30A6               	bcf	status, 5	;RP0=0, select bank0
  2877  03BB  1283               	bcf	status, 6	;RP1=0, select bank0
  2878  03BC  1303               	movwf	(sprintf@sp)
  2879  03BD  00A6               	movlw	(0x1)
  2880  03BE  3001               	movwf	(sprintf@sp+1)
  2881  03BF  00A7               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  2882  03C0  301E               	movwf	(??_main+0)+0
  2883  03C1  00EF               	movf	(??_main+0)+0,w
  2884  03C2  086F               	movwf	(sprintf@f)
  2885  03C3  00A8               	bsf	status, 5	;RP0=1, select bank3
  2886  03C4  1683               	bsf	status, 6	;RP1=1, select bank3
  2887  03C5  1703               	movf	(main@rpm+1)^0180h,w
  2888  03C6  0847               	bcf	status, 5	;RP0=0, select bank0
  2889  03C7  1283               	bcf	status, 6	;RP1=0, select bank0
  2890  03C8  1303               	movwf	1+(?_sprintf)+03h
  2891  03C9  00AA               	bsf	status, 5	;RP0=1, select bank3
  2892  03CA  1683               	bsf	status, 6	;RP1=1, select bank3
  2893  03CB  1703               	movf	(main@rpm)^0180h,w
  2894  03CC  0846               	bcf	status, 5	;RP0=0, select bank0
  2895  03CD  1283               	bcf	status, 6	;RP1=0, select bank0
  2896  03CE  1303               	movwf	0+(?_sprintf)+03h
  2897  03CF  00A9               	bsf	status, 5	;RP0=1, select bank3
  2898  03D0  1683               	bsf	status, 6	;RP1=1, select bank3
  2899  03D1  1703               	movf	(main@rpm_zadato+1)^0180h,w
  2900  03D2  0849               	bcf	status, 5	;RP0=0, select bank0
  2901  03D3  1283               	bcf	status, 6	;RP1=0, select bank0
  2902  03D4  1303               	movwf	1+(?_sprintf)+05h
  2903  03D5  00AC               	bsf	status, 5	;RP0=1, select bank3
  2904  03D6  1683               	bsf	status, 6	;RP1=1, select bank3
  2905  03D7  1703               	movf	(main@rpm_zadato)^0180h,w
  2906  03D8  0848               	bcf	status, 5	;RP0=0, select bank0
  2907  03D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2908  03DA  1303               	movwf	0+(?_sprintf)+05h
  2909  03DB  00AB               	fcall	_sprintf
  2910  03DC  120A  158A  24E1  120A  118A  	line	292
  2911                           	
  2912                           l3492:	
  2913  03E1                     ;main.c: 292:         Lcd_Set_Cursor(2,1);
  2914                           	clrf	(Lcd_Set_Cursor@b)
  2915  03E1  01F6               	incf	(Lcd_Set_Cursor@b),f
  2916  03E2  0AF6               	movlw	low(02h)
  2917  03E3  3002               	fcall	_Lcd_Set_Cursor
  2918  03E4  160A  118A  27A4  120A  118A  	line	293
  2919                           	
  2920                           l3494:	
  2921  03E9                     ;main.c: 293:         Lcd_Write_String(druga);
  2922                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  2923  03E9  30A6               	movwf	(Lcd_Write_String@a)
  2924  03EA  00F7               	movlw	(0x1)
  2925  03EB  3001               	movwf	(Lcd_Write_String@a+1)
  2926  03EC  00F8               	fcall	_Lcd_Write_String
  2927  03ED  120A  118A  27BF  120A  118A  	line	294
  2928                           	
  2929                           l3496:	
  2930  03F2                     ;main.c: 294:         cnt = 0;
  2931                           	bsf	status, 5	;RP0=1, select bank3
  2932  03F2  1683               	bsf	status, 6	;RP1=1, select bank3
  2933  03F3  1703               	clrf	(main@cnt)^0180h
  2934  03F4  01C0               	clrf	(main@cnt+1)^0180h
  2935  03F5  01C1               	line	295
  2936                           ;main.c: 295:         } else if (rpm < 300){
  2937                           	goto	l186
  2938  03F6  2894               	
  2939                           l205:	
  2940  03F7                     	
  2941                           l3498:	
  2942  03F7                     	bsf	status, 5	;RP0=1, select bank3
  2943  03F7  1683               	bsf	status, 6	;RP1=1, select bank3
  2944  03F8  1703               	movf	(main@rpm+1)^0180h,w
  2945  03F9  0847               	xorlw	80h
  2946  03FA  3A80               	movwf	btemp+1
  2947  03FB  00FF               	movlw	(01h)^80h
  2948  03FC  3081               	subwf	btemp+1,w
  2949  03FD  027F               	skipz
  2950  03FE  1D03               	goto	u5245
  2951  03FF  2C02               	movlw	02Ch
  2952  0400  302C               	subwf	(main@rpm)^0180h,w
  2953  0401  0246               u5245:
  2954  0402                     
  2955                           	skipnc
  2956  0402  1803               	goto	u5241
  2957  0403  2C05               	goto	u5240
  2958  0404  2C06               u5241:
  2959  0405                     	goto	l186
  2960  0405  2894               u5240:
  2961  0406                     	line	296
  2962                           	
  2963                           l3500:	
  2964  0406                     ;main.c: 296:         sprintf(druga, "%d RPM (%d)",rpm ,rpm_zadato);
  2965                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  2966  0406  30A6               	bcf	status, 5	;RP0=0, select bank0
  2967  0407  1283               	bcf	status, 6	;RP1=0, select bank0
  2968  0408  1303               	movwf	(sprintf@sp)
  2969  0409  00A6               	movlw	(0x1)
  2970  040A  3001               	movwf	(sprintf@sp+1)
  2971  040B  00A7               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  2972  040C  302E               	movwf	(??_main+0)+0
  2973  040D  00EF               	movf	(??_main+0)+0,w
  2974  040E  086F               	movwf	(sprintf@f)
  2975  040F  00A8               	bsf	status, 5	;RP0=1, select bank3
  2976  0410  1683               	bsf	status, 6	;RP1=1, select bank3
  2977  0411  1703               	movf	(main@rpm+1)^0180h,w
  2978  0412  0847               	bcf	status, 5	;RP0=0, select bank0
  2979  0413  1283               	bcf	status, 6	;RP1=0, select bank0
  2980  0414  1303               	movwf	1+(?_sprintf)+03h
  2981  0415  00AA               	bsf	status, 5	;RP0=1, select bank3
  2982  0416  1683               	bsf	status, 6	;RP1=1, select bank3
  2983  0417  1703               	movf	(main@rpm)^0180h,w
  2984  0418  0846               	bcf	status, 5	;RP0=0, select bank0
  2985  0419  1283               	bcf	status, 6	;RP1=0, select bank0
  2986  041A  1303               	movwf	0+(?_sprintf)+03h
  2987  041B  00A9               	bsf	status, 5	;RP0=1, select bank3
  2988  041C  1683               	bsf	status, 6	;RP1=1, select bank3
  2989  041D  1703               	movf	(main@rpm_zadato+1)^0180h,w
  2990  041E  0849               	bcf	status, 5	;RP0=0, select bank0
  2991  041F  1283               	bcf	status, 6	;RP1=0, select bank0
  2992  0420  1303               	movwf	1+(?_sprintf)+05h
  2993  0421  00AC               	bsf	status, 5	;RP0=1, select bank3
  2994  0422  1683               	bsf	status, 6	;RP1=1, select bank3
  2995  0423  1703               	movf	(main@rpm_zadato)^0180h,w
  2996  0424  0848               	bcf	status, 5	;RP0=0, select bank0
  2997  0425  1283               	bcf	status, 6	;RP1=0, select bank0
  2998  0426  1303               	movwf	0+(?_sprintf)+05h
  2999  0427  00AB               	fcall	_sprintf
  3000  0428  120A  158A  24E1  120A  118A  	line	297
  3001                           	
  3002                           l3502:	
  3003  042D                     ;main.c: 297:         Lcd_Set_Cursor(2,1);
  3004                           	clrf	(Lcd_Set_Cursor@b)
  3005  042D  01F6               	incf	(Lcd_Set_Cursor@b),f
  3006  042E  0AF6               	movlw	low(02h)
  3007  042F  3002               	fcall	_Lcd_Set_Cursor
  3008  0430  160A  118A  27A4  120A  118A  	line	298
  3009                           	
  3010                           l3504:	
  3011  0435                     ;main.c: 298:         Lcd_Write_String(druga);
  3012                           	movlw	(low(main@druga|((0x1)<<8))&0ffh)
  3013  0435  30A6               	movwf	(Lcd_Write_String@a)
  3014  0436  00F7               	movlw	(0x1)
  3015  0437  3001               	movwf	(Lcd_Write_String@a+1)
  3016  0438  00F8               	fcall	_Lcd_Write_String
  3017  0439  120A  118A  27BF  120A  118A  	line	299
  3018                           	
  3019                           l3506:	
  3020  043E                     ;main.c: 299:         cnt = 0;
  3021                           	bsf	status, 5	;RP0=1, select bank3
  3022  043E  1683               	bsf	status, 6	;RP1=1, select bank3
  3023  043F  1703               	clrf	(main@cnt)^0180h
  3024  0440  01C0               	clrf	(main@cnt+1)^0180h
  3025  0441  01C1               	goto	l186
  3026  0442  2894               	line	300
  3027                           ;main.c: 300:         }
  3028                           	
  3029                           l207:	
  3030  0443                     	goto	l186
  3031  0443  2894               	
  3032                           l206:	
  3033  0444                     	goto	l186
  3034  0444  2894               	line	302
  3035                           ;main.c: 302:       }
  3036                           	
  3037                           l201:	
  3038  0445                     	goto	l186
  3039  0445  2894               	line	306
  3040                           ;main.c: 306:         }
  3041                           	
  3042                           l194:	
  3043  0446                     	line	313
  3044                           ;main.c: 313:   }while(1);
  3045                           	goto	l186
  3046  0446  2894               	
  3047                           l208:	
  3048  0447                     	line	314
  3049                           	
  3050                           l209:	
  3051  0447                     	global	start
  3052                           	ljmp	start
  3053  0447  120A  118A  280C   	opt stack 0
  3054                           GLOBAL	__end_of_main
  3055                           	__end_of_main:
  3056  044A                     	signat	_main,89
  3057                           	global	_sprintf
  3058                           
  3059 ;; *************** function _sprintf *****************
  3060 ;; Defined at:
  3061 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  sp              2    6[BANK0 ] PTR unsigned char 
  3064 ;;		 -> main@druga(20), main@prva(20), Druga_kolona@s(20), 
  3065 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  3066 ;;		 -> STR_9(12), STR_8(16), STR_7(19), STR_6(12), 
  3067 ;;		 -> STR_5(19), STR_4(12), STR_3(19), STR_2(19), 
  3068 ;;		 -> STR_1(3), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  tmpval          4    0        struct .
  3071 ;;  val             2   19[BANK0 ] unsigned int 
  3072 ;;  cp              2    0        PTR const unsigned char 
  3073 ;;  len             2    0        unsigned int 
  3074 ;;  c               1   21[BANK0 ] unsigned char 
  3075 ;;  prec            1   18[BANK0 ] char 
  3076 ;;  flag            1   17[BANK0 ] unsigned char 
  3077 ;;  ap              1   16[BANK0 ] PTR void [1]
  3078 ;;		 -> ?_sprintf(2), 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  2    6[BANK0 ] int 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       7       0       0       0
  3089 ;;      Locals:         0       6       0       0       0
  3090 ;;      Temps:          0       3       0       0       0
  3091 ;;      Totals:         0      16       0       0       0
  3092 ;;Total ram usage:       16 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    2
  3095 ;; This function calls:
  3096 ;;		___lwdiv
  3097 ;;		___lwmod
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;;		_Druga_kolona
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3104                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  3105                           	line	500
  3106                           global __ptext1
  3107                           __ptext1:	;psect for function _sprintf
  3108  0CE1                     psect	text1
  3109                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  3110                           	line	500
  3111                           	global	__size_of_sprintf
  3112                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3113  0116                     	
  3114                           _sprintf:	
  3115  0CE1                     ;incstack = 0
  3116                           	opt	stack 5
  3117                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3118                           	line	545
  3119                           	
  3120                           l3162:	
  3121  0CE1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  3122                           	movlw	(low(?_sprintf|((0x0)<<8)+03h))&0ffh
  3123  0CE1  3029               	bcf	status, 5	;RP0=0, select bank0
  3124  0CE2  1283               	bcf	status, 6	;RP1=0, select bank0
  3125  0CE3  1303               	movwf	(??_sprintf+0)+0
  3126  0CE4  00AD               	movf	(??_sprintf+0)+0,w
  3127  0CE5  082D               	movwf	(sprintf@ap)
  3128  0CE6  00B0               	line	548
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  3130                           	goto	l3218
  3131  0CE7  2DDB               	
  3132                           l301:	
  3133  0CE8                     	line	550
  3134                           	
  3135                           l3164:	
  3136  0CE8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  3137                           		movlw	37
  3138  0CE8  3025               	xorwf	((sprintf@c)),w
  3139  0CE9  0635               	btfsc	status,2
  3140  0CEA  1903               	goto	u4761
  3141  0CEB  2CED               	goto	u4760
  3142  0CEC  2CEE               u4761:
  3143  0CED                     	goto	l3170
  3144  0CED  2CFC               u4760:
  3145  0CEE                     	line	553
  3146                           	
  3147                           l3166:	
  3148  0CEE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  3149                           	movf	(sprintf@c),w
  3150  0CEE  0835               	movwf	(??_sprintf+0)+0
  3151  0CEF  00AD               	movf	(sprintf@sp),w
  3152  0CF0  0826               	movwf	fsr0
  3153  0CF1  0084               	bsf	status,7
  3154  0CF2  1783               	btfss	(sprintf@sp+1),0
  3155  0CF3  1C27               	bcf	status,7
  3156  0CF4  1383               	movf	(??_sprintf+0)+0,w
  3157  0CF5  082D               	movwf	indf
  3158  0CF6  0080               	
  3159                           l3168:	
  3160  0CF7                     	movlw	01h
  3161  0CF7  3001               	addwf	(sprintf@sp),f
  3162  0CF8  07A6               	skipnc
  3163  0CF9  1803               	incf	(sprintf@sp+1),f
  3164  0CFA  0AA7               	line	554
  3165                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  3166                           	goto	l3218
  3167  0CFB  2DDB               	line	555
  3168                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  3169                           	
  3170                           l302:	
  3171  0CFC                     	line	560
  3172                           	
  3173                           l3170:	
  3174  0CFC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  3175                           	clrf	(sprintf@flag)
  3176  0CFC  01B1               	line	654
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  3178                           	goto	l3178
  3179  0CFD  2D10               	line	656
  3180                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  3181                           	
  3182                           l304:	
  3183  0CFE                     	line	657
  3184                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  3185                           	goto	l3220
  3186  0CFE  2DEF               	line	716
  3187                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  3188                           	
  3189                           l306:	
  3190  0CFF                     	goto	l3180
  3191  0CFF  2D2D               	line	717
  3192                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  3193                           	
  3194                           l307:	
  3195  0D00                     	line	718
  3196                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  3197                           	goto	l3180
  3198  0D00  2D2D               	line	821
  3199                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  3200                           	
  3201                           l309:	
  3202  0D01                     	line	828
  3203                           	
  3204                           l3172:	
  3205  0D01                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 828:    ((*
                                 sp++ = (c)));
  3206                           	movf	(sprintf@c),w
  3207  0D01  0835               	movwf	(??_sprintf+0)+0
  3208  0D02  00AD               	movf	(sprintf@sp),w
  3209  0D03  0826               	movwf	fsr0
  3210  0D04  0084               	bsf	status,7
  3211  0D05  1783               	btfss	(sprintf@sp+1),0
  3212  0D06  1C27               	bcf	status,7
  3213  0D07  1383               	movf	(??_sprintf+0)+0,w
  3214  0D08  082D               	movwf	indf
  3215  0D09  0080               	
  3216                           l3174:	
  3217  0D0A                     	movlw	01h
  3218  0D0A  3001               	addwf	(sprintf@sp),f
  3219  0D0B  07A6               	skipnc
  3220  0D0C  1803               	incf	(sprintf@sp+1),f
  3221  0D0D  0AA7               	line	829
  3222                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 829:    con
                                 tinue;
  3223                           	goto	l3218
  3224  0D0E  2DDB               	line	841
  3225                           	
  3226                           l3176:	
  3227  0D0F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  3228                           	goto	l3180
  3229  0D0F  2D2D               	
  3230                           l303:	
  3231  0D10                     	
  3232                           l3178:	
  3233  0D10                     	movlw	01h
  3234  0D10  3001               	addwf	(sprintf@f),f
  3235  0D11  07A8               	movlw	-01h
  3236  0D12  30FF               	addwf	(sprintf@f),w
  3237  0D13  0728               	movwf	fsr0
  3238  0D14  0084               	fcall	stringdir
  3239  0D15  160A  118A  2000  120A  158A  	movwf	(sprintf@c)
  3240  0D1A  00B5               	movwf	(??_sprintf+0)+0
  3241  0D1B  00AD               	clrf	(??_sprintf+0)+0+1
  3242  0D1C  01AE               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3243                           ; Switch size 1, requested type "space"
  3244                           ; Number of cases is 1, Range of values is 0 to 0
  3245                           ; switch strategies available:
  3246                           ; Name         Instructions Cycles
  3247                           ; simple_byte            4     3 (average)
  3248                           ; direct_byte           11     8 (fixed)
  3249                           ; jumptable            260     6 (fixed)
  3250                           ;	Chosen strategy is simple_byte
  3251                           
  3252                           	movf 1+(??_sprintf+0)+0,w
  3253  0D1D  082E               	opt asmopt_push
  3254                           	opt asmopt_off
  3255                           	xorlw	0^0	; case 0
  3256  0D1E  3A00               	skipnz
  3257  0D1F  1903               	goto	l3528
  3258  0D20  2D22               	goto	l3172
  3259  0D21  2D01               	opt asmopt_pop
  3260                           	
  3261                           l3528:	
  3262  0D22                     ; Switch size 1, requested type "space"
  3263                           ; Number of cases is 3, Range of values is 0 to 105
  3264                           ; switch strategies available:
  3265                           ; Name         Instructions Cycles
  3266                           ; simple_byte           10     6 (average)
  3267                           ; jumptable            260     6 (fixed)
  3268                           ;	Chosen strategy is simple_byte
  3269                           
  3270                           	movf 0+(??_sprintf+0)+0,w
  3271  0D22  082D               	opt asmopt_push
  3272                           	opt asmopt_off
  3273                           	xorlw	0^0	; case 0
  3274  0D23  3A00               	skipnz
  3275  0D24  1903               	goto	l3220
  3276  0D25  2DEF               	xorlw	100^0	; case 100
  3277  0D26  3A64               	skipnz
  3278  0D27  1903               	goto	l3180
  3279  0D28  2D2D               	xorlw	105^100	; case 105
  3280  0D29  3A0D               	skipnz
  3281  0D2A  1903               	goto	l3180
  3282  0D2B  2D2D               	goto	l3172
  3283  0D2C  2D01               	opt asmopt_pop
  3284                           
  3285                           	
  3286                           l308:	
  3287  0D2D                     	line	1278
  3288                           	
  3289                           l3180:	
  3290  0D2D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3291                           	movf	(sprintf@ap),w
  3292  0D2D  0830               	movwf	fsr0
  3293  0D2E  0084               	bcf	status, 7	;select IRP bank0
  3294  0D2F  1383               	movf	indf,w
  3295  0D30  0800               	movwf	(sprintf@val)
  3296  0D31  00B3               	incf	fsr0,f
  3297  0D32  0A84               	movf	indf,w
  3298  0D33  0800               	movwf	(sprintf@val+1)
  3299  0D34  00B4               	
  3300                           l3182:	
  3301  0D35                     	movlw	low(02h)
  3302  0D35  3002               	movwf	(??_sprintf+0)+0
  3303  0D36  00AD               	movf	(??_sprintf+0)+0,w
  3304  0D37  082D               	addwf	(sprintf@ap),f
  3305  0D38  07B0               	line	1280
  3306                           	
  3307                           l3184:	
  3308  0D39                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  3309                           	btfss	(sprintf@val+1),7
  3310  0D39  1FB4               	goto	u4771
  3311  0D3A  2D3C               	goto	u4770
  3312  0D3B  2D3D               u4771:
  3313  0D3C                     	goto	l3190
  3314  0D3C  2D47               u4770:
  3315  0D3D                     	line	1281
  3316                           	
  3317                           l3186:	
  3318  0D3D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  3319                           	movlw	low(03h)
  3320  0D3D  3003               	movwf	(??_sprintf+0)+0
  3321  0D3E  00AD               	movf	(??_sprintf+0)+0,w
  3322  0D3F  082D               	iorwf	(sprintf@flag),f
  3323  0D40  04B1               	line	1282
  3324                           	
  3325                           l3188:	
  3326  0D41                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  3327                           	comf	(sprintf@val),f
  3328  0D41  09B3               	comf	(sprintf@val+1),f
  3329  0D42  09B4               	incf	(sprintf@val),f
  3330  0D43  0AB3               	skipnz
  3331  0D44  1903               	incf	(sprintf@val+1),f
  3332  0D45  0AB4               	goto	l3190
  3333  0D46  2D47               	line	1283
  3334                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  3335                           	
  3336                           l310:	
  3337  0D47                     	line	1324
  3338                           	
  3339                           l3190:	
  3340  0D47                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3341                           	clrf	(sprintf@c)
  3342  0D47  01B5               	incf	(sprintf@c),f
  3343  0D48  0AB5               	
  3344                           l3192:	
  3345  0D49                     		movlw	5
  3346  0D49  3005               	xorwf	((sprintf@c)),w
  3347  0D4A  0635               	btfss	status,2
  3348  0D4B  1D03               	goto	u4781
  3349  0D4C  2D4E               	goto	u4780
  3350  0D4D  2D4F               u4781:
  3351  0D4E                     	goto	l3196
  3352  0D4E  2D51               u4780:
  3353  0D4F                     	goto	l3202
  3354  0D4F  2D79               	
  3355                           l3194:	
  3356  0D50                     	goto	l3202
  3357  0D50  2D79               	
  3358                           l311:	
  3359  0D51                     	line	1325
  3360                           	
  3361                           l3196:	
  3362  0D51                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  3363                           	movf	(sprintf@c),w
  3364  0D51  0835               	movwf	(??_sprintf+0)+0
  3365  0D52  00AD               	addwf	(??_sprintf+0)+0,w
  3366  0D53  072D               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3367  0D54  3E01               	movwf	fsr0
  3368  0D55  0084               	fcall	stringdir
  3369  0D56  160A  118A  2000  120A  158A  	movwf	(??_sprintf+1)+0
  3370  0D5B  00AE               	fcall	stringdir
  3371  0D5C  160A  118A  2000  120A  158A  	movwf	(??_sprintf+1)+0+1
  3372  0D61  00AF               	movf	1+(??_sprintf+1)+0,w
  3373  0D62  082F               	subwf	(sprintf@val+1),w
  3374  0D63  0234               	skipz
  3375  0D64  1D03               	goto	u4795
  3376  0D65  2D68               	movf	0+(??_sprintf+1)+0,w
  3377  0D66  082E               	subwf	(sprintf@val),w
  3378  0D67  0233               u4795:
  3379  0D68                     	skipnc
  3380  0D68  1803               	goto	u4791
  3381  0D69  2D6B               	goto	u4790
  3382  0D6A  2D6C               u4791:
  3383  0D6B                     	goto	l3200
  3384  0D6B  2D6E               u4790:
  3385  0D6C                     	goto	l3202
  3386  0D6C  2D79               	line	1326
  3387                           	
  3388                           l3198:	
  3389  0D6D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  3390                           	goto	l3202
  3391  0D6D  2D79               	
  3392                           l313:	
  3393  0D6E                     	
  3394                           l3200:	
  3395  0D6E                     	movlw	low(01h)
  3396  0D6E  3001               	movwf	(??_sprintf+0)+0
  3397  0D6F  00AD               	movf	(??_sprintf+0)+0,w
  3398  0D70  082D               	addwf	(sprintf@c),f
  3399  0D71  07B5               		movlw	5
  3400  0D72  3005               	xorwf	((sprintf@c)),w
  3401  0D73  0635               	btfss	status,2
  3402  0D74  1D03               	goto	u4801
  3403  0D75  2D77               	goto	u4800
  3404  0D76  2D78               u4801:
  3405  0D77                     	goto	l3196
  3406  0D77  2D51               u4800:
  3407  0D78                     	goto	l3202
  3408  0D78  2D79               	
  3409                           l312:	
  3410  0D79                     	line	1457
  3411                           	
  3412                           l3202:	
  3413  0D79                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  3414                           	movf	(sprintf@flag),w
  3415  0D79  0831               	andlw	03h
  3416  0D7A  3903               	btfsc	status,2
  3417  0D7B  1903               	goto	u4811
  3418  0D7C  2D7E               	goto	u4810
  3419  0D7D  2D7F               u4811:
  3420  0D7E                     	goto	l3208
  3421  0D7E  2D8D               u4810:
  3422  0D7F                     	line	1458
  3423                           	
  3424                           l3204:	
  3425  0D7F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  3426                           	movlw	low(02Dh)
  3427  0D7F  302D               	movwf	(??_sprintf+0)+0
  3428  0D80  00AD               	movf	(sprintf@sp),w
  3429  0D81  0826               	movwf	fsr0
  3430  0D82  0084               	bsf	status,7
  3431  0D83  1783               	btfss	(sprintf@sp+1),0
  3432  0D84  1C27               	bcf	status,7
  3433  0D85  1383               	movf	(??_sprintf+0)+0,w
  3434  0D86  082D               	movwf	indf
  3435  0D87  0080               	
  3436                           l3206:	
  3437  0D88                     	movlw	01h
  3438  0D88  3001               	addwf	(sprintf@sp),f
  3439  0D89  07A6               	skipnc
  3440  0D8A  1803               	incf	(sprintf@sp+1),f
  3441  0D8B  0AA7               	goto	l3208
  3442  0D8C  2D8D               	
  3443                           l314:	
  3444  0D8D                     	line	1491
  3445                           	
  3446                           l3208:	
  3447  0D8D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  3448                           	movf	(sprintf@c),w
  3449  0D8D  0835               	movwf	(??_sprintf+0)+0
  3450  0D8E  00AD               	movf	(??_sprintf+0)+0,w
  3451  0D8F  082D               	movwf	(sprintf@prec)
  3452  0D90  00B2               	line	1493
  3453                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3454                           	goto	l3216
  3455  0D91  2DD0               	
  3456                           l316:	
  3457  0D92                     	line	1508
  3458                           	
  3459                           l3210:	
  3460  0D92                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  3461                           	movlw	0Ah
  3462  0D92  300A               	movwf	(___lwmod@divisor)
  3463  0D93  00A0               	movlw	0
  3464  0D94  3000               	movwf	((___lwmod@divisor))+1
  3465  0D95  00A1               	movf	(sprintf@prec),w
  3466  0D96  0832               	movwf	(??_sprintf+0)+0
  3467  0D97  00AD               	addwf	(??_sprintf+0)+0,w
  3468  0D98  072D               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3469  0D99  3E01               	movwf	fsr0
  3470  0D9A  0084               	fcall	stringdir
  3471  0D9B  160A  118A  2000  120A  158A  	movwf	(___lwdiv@divisor)
  3472  0DA0  00F2               	fcall	stringdir
  3473  0DA1  160A  118A  2000  120A  158A  	movwf	(___lwdiv@divisor+1)
  3474  0DA6  00F3               	movf	(sprintf@val+1),w
  3475  0DA7  0834               	movwf	(___lwdiv@dividend+1)
  3476  0DA8  00F5               	movf	(sprintf@val),w
  3477  0DA9  0833               	movwf	(___lwdiv@dividend)
  3478  0DAA  00F4               	fcall	___lwdiv
  3479  0DAB  160A  118A  26BB  120A  158A  	movf	(1+(?___lwdiv)),w
  3480  0DB0  0873               	bcf	status, 5	;RP0=0, select bank0
  3481  0DB1  1283               	bcf	status, 6	;RP1=0, select bank0
  3482  0DB2  1303               	movwf	(___lwmod@dividend+1)
  3483  0DB3  00A3               	movf	(0+(?___lwdiv)),w
  3484  0DB4  0872               	movwf	(___lwmod@dividend)
  3485  0DB5  00A2               	fcall	___lwmod
  3486  0DB6  160A  118A  2678  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  3487  0DBB  1283               	bcf	status, 6	;RP1=0, select bank0
  3488  0DBC  1303               	movf	(0+(?___lwmod)),w
  3489  0DBD  0820               	addlw	030h
  3490  0DBE  3E30               	movwf	(??_sprintf+1)+0
  3491  0DBF  00AE               	movf	(??_sprintf+1)+0,w
  3492  0DC0  082E               	movwf	(sprintf@c)
  3493  0DC1  00B5               	line	1543
  3494                           	
  3495                           l3212:	
  3496  0DC2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  3497                           	movf	(sprintf@c),w
  3498  0DC2  0835               	movwf	(??_sprintf+0)+0
  3499  0DC3  00AD               	movf	(sprintf@sp),w
  3500  0DC4  0826               	movwf	fsr0
  3501  0DC5  0084               	bsf	status,7
  3502  0DC6  1783               	btfss	(sprintf@sp+1),0
  3503  0DC7  1C27               	bcf	status,7
  3504  0DC8  1383               	movf	(??_sprintf+0)+0,w
  3505  0DC9  082D               	movwf	indf
  3506  0DCA  0080               	
  3507                           l3214:	
  3508  0DCB                     	movlw	01h
  3509  0DCB  3001               	addwf	(sprintf@sp),f
  3510  0DCC  07A6               	skipnc
  3511  0DCD  1803               	incf	(sprintf@sp+1),f
  3512  0DCE  0AA7               	goto	l3216
  3513  0DCF  2DD0               	line	1544
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  3515                           	
  3516                           l315:	
  3517  0DD0                     	line	1493
  3518                           	
  3519                           l3216:	
  3520  0DD0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3521                           	movlw	low(-1)
  3522  0DD0  30FF               	movwf	(??_sprintf+0)+0
  3523  0DD1  00AD               	movf	(??_sprintf+0)+0,w
  3524  0DD2  082D               	addwf	(sprintf@prec),f
  3525  0DD3  07B2               		incf	(((sprintf@prec))),w
  3526  0DD4  0A32               	btfss	status,2
  3527  0DD5  1D03               	goto	u4821
  3528  0DD6  2DD8               	goto	u4820
  3529  0DD7  2DD9               u4821:
  3530  0DD8                     	goto	l3210
  3531  0DD8  2D92               u4820:
  3532  0DD9                     	goto	l3218
  3533  0DD9  2DDB               	
  3534                           l317:	
  3535  0DDA                     	goto	l3218
  3536  0DDA  2DDB               	line	1552
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  3538                           	
  3539                           l300:	
  3540  0DDB                     	line	548
  3541                           	
  3542                           l3218:	
  3543  0DDB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  3544                           	movlw	01h
  3545  0DDB  3001               	addwf	(sprintf@f),f
  3546  0DDC  07A8               	movlw	-01h
  3547  0DDD  30FF               	addwf	(sprintf@f),w
  3548  0DDE  0728               	movwf	fsr0
  3549  0DDF  0084               	fcall	stringdir
  3550  0DE0  160A  118A  2000  120A  158A  	movwf	(??_sprintf+0)+0
  3551  0DE5  00AD               	movf	(??_sprintf+0)+0,w
  3552  0DE6  082D               	movwf	(sprintf@c)
  3553  0DE7  00B5               	movf	(((sprintf@c))),w
  3554  0DE8  0835               	btfss	status,2
  3555  0DE9  1D03               	goto	u4831
  3556  0DEA  2DEC               	goto	u4830
  3557  0DEB  2DED               u4831:
  3558  0DEC                     	goto	l3164
  3559  0DEC  2CE8               u4830:
  3560  0DED                     	goto	l3220
  3561  0DED  2DEF               	
  3562                           l318:	
  3563  0DEE                     	goto	l3220
  3564  0DEE  2DEF               	line	1554
  3565                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  3566                           	
  3567                           l305:	
  3568  0DEF                     	line	1557
  3569                           	
  3570                           l3220:	
  3571  0DEF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  3572                           	movf	(sprintf@sp),w
  3573  0DEF  0826               	movwf	fsr0
  3574  0DF0  0084               	bsf	status,7
  3575  0DF1  1783               	btfss	(sprintf@sp+1),0
  3576  0DF2  1C27               	bcf	status,7
  3577  0DF3  1383               	clrf	indf
  3578  0DF4  0180               	goto	l319
  3579  0DF5  2DF6               	line	1559
  3580                           	
  3581                           l3222:	
  3582  0DF6                     	line	1560
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  3584                           	
  3585                           l319:	
  3586  0DF6                     	return
  3587  0DF6  0008               	opt stack 0
  3588                           GLOBAL	__end_of_sprintf
  3589                           	__end_of_sprintf:
  3590  0DF7                     	signat	_sprintf,4698
  3591                           	global	___lwmod
  3592                           
  3593 ;; *************** function ___lwmod *****************
  3594 ;; Defined at:
  3595 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  divisor         2    0[BANK0 ] unsigned int 
  3598 ;;  dividend        2    2[BANK0 ] unsigned int 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  counter         1    5[BANK0 ] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2    0[BANK0 ] unsigned int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3610 ;;      Params:         0       4       0       0       0
  3611 ;;      Locals:         0       1       0       0       0
  3612 ;;      Temps:          0       1       0       0       0
  3613 ;;      Totals:         0       6       0       0       0
  3614 ;;Total ram usage:        6 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    1
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_sprintf
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           psect	text2,local,class=CODE,delta=2,merge=1,group=1
  3624                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3625                           	line	5
  3626                           global __ptext2
  3627                           __ptext2:	;psect for function ___lwmod
  3628  1678                     psect	text2
  3629                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3630                           	line	5
  3631                           	global	__size_of___lwmod
  3632                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3633  0043                     	
  3634                           ___lwmod:	
  3635  1678                     ;incstack = 0
  3636                           	opt	stack 5
  3637                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3638                           	line	12
  3639                           	
  3640                           l3072:	
  3641  1678                     	bcf	status, 5	;RP0=0, select bank0
  3642  1678  1283               	bcf	status, 6	;RP1=0, select bank0
  3643  1679  1303               	movf	((___lwmod@divisor)),w
  3644  167A  0820               iorwf	((___lwmod@divisor+1)),w
  3645  167B  0421               	btfsc	status,2
  3646  167C  1903               	goto	u4561
  3647  167D  2E7F               	goto	u4560
  3648  167E  2E80               u4561:
  3649  167F                     	goto	l3090
  3650  167F  2EB5               u4560:
  3651  1680                     	line	13
  3652                           	
  3653                           l3074:	
  3654  1680                     	clrf	(___lwmod@counter)
  3655  1680  01A5               	incf	(___lwmod@counter),f
  3656  1681  0AA5               	line	14
  3657                           	goto	l3080
  3658  1682  2E8F               	
  3659                           l600:	
  3660  1683                     	line	15
  3661                           	
  3662                           l3076:	
  3663  1683                     	movlw	01h
  3664  1683  3001               	
  3665                           u4575:
  3666  1684                     	clrc
  3667  1684  1003               	rlf	(___lwmod@divisor),f
  3668  1685  0DA0               	rlf	(___lwmod@divisor+1),f
  3669  1686  0DA1               	addlw	-1
  3670  1687  3EFF               	skipz
  3671  1688  1D03               	goto	u4575
  3672  1689  2E84               	line	16
  3673                           	
  3674                           l3078:	
  3675  168A                     	movlw	low(01h)
  3676  168A  3001               	movwf	(??___lwmod+0)+0
  3677  168B  00A4               	movf	(??___lwmod+0)+0,w
  3678  168C  0824               	addwf	(___lwmod@counter),f
  3679  168D  07A5               	goto	l3080
  3680  168E  2E8F               	line	17
  3681                           	
  3682                           l599:	
  3683  168F                     	line	14
  3684                           	
  3685                           l3080:	
  3686  168F                     	btfss	(___lwmod@divisor+1),(15)&7
  3687  168F  1FA1               	goto	u4581
  3688  1690  2E92               	goto	u4580
  3689  1691  2E93               u4581:
  3690  1692                     	goto	l3076
  3691  1692  2E83               u4580:
  3692  1693                     	goto	l3082
  3693  1693  2E95               	
  3694                           l601:	
  3695  1694                     	goto	l3082
  3696  1694  2E95               	line	18
  3697                           	
  3698                           l602:	
  3699  1695                     	line	19
  3700                           	
  3701                           l3082:	
  3702  1695                     	movf	(___lwmod@divisor+1),w
  3703  1695  0821               	subwf	(___lwmod@dividend+1),w
  3704  1696  0223               	skipz
  3705  1697  1D03               	goto	u4595
  3706  1698  2E9B               	movf	(___lwmod@divisor),w
  3707  1699  0820               	subwf	(___lwmod@dividend),w
  3708  169A  0222               u4595:
  3709  169B                     	skipc
  3710  169B  1C03               	goto	u4591
  3711  169C  2E9E               	goto	u4590
  3712  169D  2E9F               u4591:
  3713  169E                     	goto	l3086
  3714  169E  2EA6               u4590:
  3715  169F                     	line	20
  3716                           	
  3717                           l3084:	
  3718  169F                     	movf	(___lwmod@divisor),w
  3719  169F  0820               	subwf	(___lwmod@dividend),f
  3720  16A0  02A2               	movf	(___lwmod@divisor+1),w
  3721  16A1  0821               	skipc
  3722  16A2  1C03               	decf	(___lwmod@dividend+1),f
  3723  16A3  03A3               	subwf	(___lwmod@dividend+1),f
  3724  16A4  02A3               	goto	l3086
  3725  16A5  2EA6               	
  3726                           l603:	
  3727  16A6                     	line	21
  3728                           	
  3729                           l3086:	
  3730  16A6                     	movlw	01h
  3731  16A6  3001               	
  3732                           u4605:
  3733  16A7                     	clrc
  3734  16A7  1003               	rrf	(___lwmod@divisor+1),f
  3735  16A8  0CA1               	rrf	(___lwmod@divisor),f
  3736  16A9  0CA0               	addlw	-1
  3737  16AA  3EFF               	skipz
  3738  16AB  1D03               	goto	u4605
  3739  16AC  2EA7               	line	22
  3740                           	
  3741                           l3088:	
  3742  16AD                     	movlw	01h
  3743  16AD  3001               	subwf	(___lwmod@counter),f
  3744  16AE  02A5               	btfss	status,2
  3745  16AF  1D03               	goto	u4611
  3746  16B0  2EB2               	goto	u4610
  3747  16B1  2EB3               u4611:
  3748  16B2                     	goto	l3082
  3749  16B2  2E95               u4610:
  3750  16B3                     	goto	l3090
  3751  16B3  2EB5               	
  3752                           l604:	
  3753  16B4                     	goto	l3090
  3754  16B4  2EB5               	line	23
  3755                           	
  3756                           l598:	
  3757  16B5                     	line	24
  3758                           	
  3759                           l3090:	
  3760  16B5                     	movf	(___lwmod@dividend+1),w
  3761  16B5  0823               	movwf	(?___lwmod+1)
  3762  16B6  00A1               	movf	(___lwmod@dividend),w
  3763  16B7  0822               	movwf	(?___lwmod)
  3764  16B8  00A0               	goto	l605
  3765  16B9  2EBA               	
  3766                           l3092:	
  3767  16BA                     	line	25
  3768                           	
  3769                           l605:	
  3770  16BA                     	return
  3771  16BA  0008               	opt stack 0
  3772                           GLOBAL	__end_of___lwmod
  3773                           	__end_of___lwmod:
  3774  16BB                     	signat	___lwmod,8314
  3775                           	global	___lwdiv
  3776                           
  3777 ;; *************** function ___lwdiv *****************
  3778 ;; Defined at:
  3779 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  divisor         2    2[COMMON] unsigned int 
  3782 ;;  dividend        2    4[COMMON] unsigned int 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  quotient        2    7[COMMON] unsigned int 
  3785 ;;  counter         1    9[COMMON] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  2    2[COMMON] unsigned int 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         4       0       0       0       0
  3796 ;;      Locals:         3       0       0       0       0
  3797 ;;      Temps:          1       0       0       0       0
  3798 ;;      Totals:         8       0       0       0       0
  3799 ;;Total ram usage:        8 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_sprintf
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  3809                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3810                           	line	5
  3811                           global __ptext3
  3812                           __ptext3:	;psect for function ___lwdiv
  3813  16BB                     psect	text3
  3814                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3815                           	line	5
  3816                           	global	__size_of___lwdiv
  3817                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3818  004B                     	
  3819                           ___lwdiv:	
  3820  16BB                     ;incstack = 0
  3821                           	opt	stack 5
  3822                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3823                           	line	13
  3824                           	
  3825                           l2272:	
  3826  16BB                     	clrf	(___lwdiv@quotient)
  3827  16BB  01F7               	clrf	(___lwdiv@quotient+1)
  3828  16BC  01F8               	line	14
  3829                           	
  3830                           l2274:	
  3831  16BD                     	movf	((___lwdiv@divisor)),w
  3832  16BD  0872               iorwf	((___lwdiv@divisor+1)),w
  3833  16BE  0473               	btfsc	status,2
  3834  16BF  1903               	goto	u3051
  3835  16C0  2EC2               	goto	u3050
  3836  16C1  2EC3               u3051:
  3837  16C2                     	goto	l2294
  3838  16C2  2F00               u3050:
  3839  16C3                     	line	15
  3840                           	
  3841                           l2276:	
  3842  16C3                     	clrf	(___lwdiv@counter)
  3843  16C3  01F9               	incf	(___lwdiv@counter),f
  3844  16C4  0AF9               	line	16
  3845                           	goto	l2282
  3846  16C5  2ED2               	
  3847                           l590:	
  3848  16C6                     	line	17
  3849                           	
  3850                           l2278:	
  3851  16C6                     	movlw	01h
  3852  16C6  3001               	
  3853                           u3065:
  3854  16C7                     	clrc
  3855  16C7  1003               	rlf	(___lwdiv@divisor),f
  3856  16C8  0DF2               	rlf	(___lwdiv@divisor+1),f
  3857  16C9  0DF3               	addlw	-1
  3858  16CA  3EFF               	skipz
  3859  16CB  1D03               	goto	u3065
  3860  16CC  2EC7               	line	18
  3861                           	
  3862                           l2280:	
  3863  16CD                     	movlw	low(01h)
  3864  16CD  3001               	movwf	(??___lwdiv+0)+0
  3865  16CE  00F6               	movf	(??___lwdiv+0)+0,w
  3866  16CF  0876               	addwf	(___lwdiv@counter),f
  3867  16D0  07F9               	goto	l2282
  3868  16D1  2ED2               	line	19
  3869                           	
  3870                           l589:	
  3871  16D2                     	line	16
  3872                           	
  3873                           l2282:	
  3874  16D2                     	btfss	(___lwdiv@divisor+1),(15)&7
  3875  16D2  1FF3               	goto	u3071
  3876  16D3  2ED5               	goto	u3070
  3877  16D4  2ED6               u3071:
  3878  16D5                     	goto	l2278
  3879  16D5  2EC6               u3070:
  3880  16D6                     	goto	l2284
  3881  16D6  2ED8               	
  3882                           l591:	
  3883  16D7                     	goto	l2284
  3884  16D7  2ED8               	line	20
  3885                           	
  3886                           l592:	
  3887  16D8                     	line	21
  3888                           	
  3889                           l2284:	
  3890  16D8                     	movlw	01h
  3891  16D8  3001               	
  3892                           u3085:
  3893  16D9                     	clrc
  3894  16D9  1003               	rlf	(___lwdiv@quotient),f
  3895  16DA  0DF7               	rlf	(___lwdiv@quotient+1),f
  3896  16DB  0DF8               	addlw	-1
  3897  16DC  3EFF               	skipz
  3898  16DD  1D03               	goto	u3085
  3899  16DE  2ED9               	line	22
  3900                           	movf	(___lwdiv@divisor+1),w
  3901  16DF  0873               	subwf	(___lwdiv@dividend+1),w
  3902  16E0  0275               	skipz
  3903  16E1  1D03               	goto	u3095
  3904  16E2  2EE5               	movf	(___lwdiv@divisor),w
  3905  16E3  0872               	subwf	(___lwdiv@dividend),w
  3906  16E4  0274               u3095:
  3907  16E5                     	skipc
  3908  16E5  1C03               	goto	u3091
  3909  16E6  2EE8               	goto	u3090
  3910  16E7  2EE9               u3091:
  3911  16E8                     	goto	l2290
  3912  16E8  2EF1               u3090:
  3913  16E9                     	line	23
  3914                           	
  3915                           l2286:	
  3916  16E9                     	movf	(___lwdiv@divisor),w
  3917  16E9  0872               	subwf	(___lwdiv@dividend),f
  3918  16EA  02F4               	movf	(___lwdiv@divisor+1),w
  3919  16EB  0873               	skipc
  3920  16EC  1C03               	decf	(___lwdiv@dividend+1),f
  3921  16ED  03F5               	subwf	(___lwdiv@dividend+1),f
  3922  16EE  02F5               	line	24
  3923                           	
  3924                           l2288:	
  3925  16EF                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3926  16EF  1477               	goto	l2290
  3927  16F0  2EF1               	line	25
  3928                           	
  3929                           l593:	
  3930  16F1                     	line	26
  3931                           	
  3932                           l2290:	
  3933  16F1                     	movlw	01h
  3934  16F1  3001               	
  3935                           u3105:
  3936  16F2                     	clrc
  3937  16F2  1003               	rrf	(___lwdiv@divisor+1),f
  3938  16F3  0CF3               	rrf	(___lwdiv@divisor),f
  3939  16F4  0CF2               	addlw	-1
  3940  16F5  3EFF               	skipz
  3941  16F6  1D03               	goto	u3105
  3942  16F7  2EF2               	line	27
  3943                           	
  3944                           l2292:	
  3945  16F8                     	movlw	01h
  3946  16F8  3001               	subwf	(___lwdiv@counter),f
  3947  16F9  02F9               	btfss	status,2
  3948  16FA  1D03               	goto	u3111
  3949  16FB  2EFD               	goto	u3110
  3950  16FC  2EFE               u3111:
  3951  16FD                     	goto	l2284
  3952  16FD  2ED8               u3110:
  3953  16FE                     	goto	l2294
  3954  16FE  2F00               	
  3955                           l594:	
  3956  16FF                     	goto	l2294
  3957  16FF  2F00               	line	28
  3958                           	
  3959                           l588:	
  3960  1700                     	line	29
  3961                           	
  3962                           l2294:	
  3963  1700                     	movf	(___lwdiv@quotient+1),w
  3964  1700  0878               	movwf	(?___lwdiv+1)
  3965  1701  00F3               	movf	(___lwdiv@quotient),w
  3966  1702  0877               	movwf	(?___lwdiv)
  3967  1703  00F2               	goto	l595
  3968  1704  2F05               	
  3969                           l2296:	
  3970  1705                     	line	30
  3971                           	
  3972                           l595:	
  3973  1705                     	return
  3974  1705  0008               	opt stack 0
  3975                           GLOBAL	__end_of___lwdiv
  3976                           	__end_of___lwdiv:
  3977  1706                     	signat	___lwdiv,8314
  3978                           	global	___wmul
  3979                           
  3980 ;; *************** function ___wmul *****************
  3981 ;; Defined at:
  3982 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  multiplier      2    2[COMMON] unsigned int 
  3985 ;;  multiplicand    2    4[COMMON] unsigned int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  product         2    6[COMMON] unsigned int 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  2    2[COMMON] unsigned int 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3997 ;;      Params:         4       0       0       0       0
  3998 ;;      Locals:         2       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0
  4000 ;;      Totals:         6       0       0       0       0
  4001 ;;Total ram usage:        6 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  4011                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4012                           	line	15
  4013                           global __ptext4
  4014                           __ptext4:	;psect for function ___wmul
  4015  15C2                     psect	text4
  4016                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4017                           	line	15
  4018                           	global	__size_of___wmul
  4019                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4020  0028                     	
  4021                           ___wmul:	
  4022  15C2                     ;incstack = 0
  4023                           	opt	stack 6
  4024                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4025                           	line	43
  4026                           	
  4027                           l2460:	
  4028  15C2                     	clrf	(___wmul@product)
  4029  15C2  01F6               	clrf	(___wmul@product+1)
  4030  15C3  01F7               	goto	l2462
  4031  15C4  2DC5               	line	44
  4032                           	
  4033                           l322:	
  4034  15C5                     	line	45
  4035                           	
  4036                           l2462:	
  4037  15C5                     	btfss	(___wmul@multiplier),(0)&7
  4038  15C5  1C72               	goto	u3401
  4039  15C6  2DC8               	goto	u3400
  4040  15C7  2DC9               u3401:
  4041  15C8                     	goto	l323
  4042  15C8  2DCF               u3400:
  4043  15C9                     	line	46
  4044                           	
  4045                           l2464:	
  4046  15C9                     	movf	(___wmul@multiplicand),w
  4047  15C9  0874               	addwf	(___wmul@product),f
  4048  15CA  07F6               	skipnc
  4049  15CB  1803               	incf	(___wmul@product+1),f
  4050  15CC  0AF7               	movf	(___wmul@multiplicand+1),w
  4051  15CD  0875               	addwf	(___wmul@product+1),f
  4052  15CE  07F7               	
  4053                           l323:	
  4054  15CF                     	line	47
  4055                           	movlw	01h
  4056  15CF  3001               	
  4057                           u3415:
  4058  15D0                     	clrc
  4059  15D0  1003               	rlf	(___wmul@multiplicand),f
  4060  15D1  0DF4               	rlf	(___wmul@multiplicand+1),f
  4061  15D2  0DF5               	addlw	-1
  4062  15D3  3EFF               	skipz
  4063  15D4  1D03               	goto	u3415
  4064  15D5  2DD0               	line	48
  4065                           	
  4066                           l2466:	
  4067  15D6                     	movlw	01h
  4068  15D6  3001               	
  4069                           u3425:
  4070  15D7                     	clrc
  4071  15D7  1003               	rrf	(___wmul@multiplier+1),f
  4072  15D8  0CF3               	rrf	(___wmul@multiplier),f
  4073  15D9  0CF2               	addlw	-1
  4074  15DA  3EFF               	skipz
  4075  15DB  1D03               	goto	u3425
  4076  15DC  2DD7               	line	49
  4077                           	
  4078                           l2468:	
  4079  15DD                     	movf	((___wmul@multiplier)),w
  4080  15DD  0872               iorwf	((___wmul@multiplier+1)),w
  4081  15DE  0473               	btfss	status,2
  4082  15DF  1D03               	goto	u3431
  4083  15E0  2DE2               	goto	u3430
  4084  15E1  2DE3               u3431:
  4085  15E2                     	goto	l2462
  4086  15E2  2DC5               u3430:
  4087  15E3                     	goto	l2470
  4088  15E3  2DE4               	
  4089                           l324:	
  4090  15E4                     	line	52
  4091                           	
  4092                           l2470:	
  4093  15E4                     	movf	(___wmul@product+1),w
  4094  15E4  0877               	movwf	(?___wmul+1)
  4095  15E5  00F3               	movf	(___wmul@product),w
  4096  15E6  0876               	movwf	(?___wmul)
  4097  15E7  00F2               	goto	l325
  4098  15E8  2DE9               	
  4099                           l2472:	
  4100  15E9                     	line	53
  4101                           	
  4102                           l325:	
  4103  15E9                     	return
  4104  15E9  0008               	opt stack 0
  4105                           GLOBAL	__end_of___wmul
  4106                           	__end_of___wmul:
  4107  15EA                     	signat	___wmul,8314
  4108                           	global	___awdiv
  4109                           
  4110 ;; *************** function ___awdiv *****************
  4111 ;; Defined at:
  4112 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  divisor         2    0[BANK0 ] int 
  4115 ;;  dividend        2    2[BANK0 ] int 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  quotient        2    6[BANK0 ] int 
  4118 ;;  sign            1    5[BANK0 ] unsigned char 
  4119 ;;  counter         1    4[BANK0 ] unsigned char 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  2    0[BANK0 ] int 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4129 ;;      Params:         0       4       0       0       0
  4130 ;;      Locals:         0       4       0       0       0
  4131 ;;      Temps:          1       0       0       0       0
  4132 ;;      Totals:         1       8       0       0       0
  4133 ;;Total ram usage:        9 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  4143                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4144                           	line	5
  4145                           global __ptext5
  4146                           __ptext5:	;psect for function ___awdiv
  4147  089E                     psect	text5
  4148                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4149                           	line	5
  4150                           	global	__size_of___awdiv
  4151                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4152  0073                     	
  4153                           ___awdiv:	
  4154  089E                     ;incstack = 0
  4155                           	opt	stack 6
  4156                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4157                           	line	13
  4158                           	
  4159                           l3228:	
  4160  089E                     	bcf	status, 5	;RP0=0, select bank0
  4161  089E  1283               	bcf	status, 6	;RP1=0, select bank0
  4162  089F  1303               	clrf	(___awdiv@sign)
  4163  08A0  01A5               	line	14
  4164                           	
  4165                           l3230:	
  4166  08A1                     	btfss	(___awdiv@divisor+1),7
  4167  08A1  1FA1               	goto	u4841
  4168  08A2  28A4               	goto	u4840
  4169  08A3  28A5               u4841:
  4170  08A4                     	goto	l3236
  4171  08A4  28AD               u4840:
  4172  08A5                     	line	15
  4173                           	
  4174                           l3232:	
  4175  08A5                     	comf	(___awdiv@divisor),f
  4176  08A5  09A0               	comf	(___awdiv@divisor+1),f
  4177  08A6  09A1               	incf	(___awdiv@divisor),f
  4178  08A7  0AA0               	skipnz
  4179  08A8  1903               	incf	(___awdiv@divisor+1),f
  4180  08A9  0AA1               	line	16
  4181                           	
  4182                           l3234:	
  4183  08AA                     	clrf	(___awdiv@sign)
  4184  08AA  01A5               	incf	(___awdiv@sign),f
  4185  08AB  0AA5               	goto	l3236
  4186  08AC  28AD               	line	17
  4187                           	
  4188                           l466:	
  4189  08AD                     	line	18
  4190                           	
  4191                           l3236:	
  4192  08AD                     	btfss	(___awdiv@dividend+1),7
  4193  08AD  1FA3               	goto	u4851
  4194  08AE  28B0               	goto	u4850
  4195  08AF  28B1               u4851:
  4196  08B0                     	goto	l3242
  4197  08B0  28BB               u4850:
  4198  08B1                     	line	19
  4199                           	
  4200                           l3238:	
  4201  08B1                     	comf	(___awdiv@dividend),f
  4202  08B1  09A2               	comf	(___awdiv@dividend+1),f
  4203  08B2  09A3               	incf	(___awdiv@dividend),f
  4204  08B3  0AA2               	skipnz
  4205  08B4  1903               	incf	(___awdiv@dividend+1),f
  4206  08B5  0AA3               	line	20
  4207                           	
  4208                           l3240:	
  4209  08B6                     	movlw	low(01h)
  4210  08B6  3001               	movwf	(??___awdiv+0)+0
  4211  08B7  00F8               	movf	(??___awdiv+0)+0,w
  4212  08B8  0878               	xorwf	(___awdiv@sign),f
  4213  08B9  06A5               	goto	l3242
  4214  08BA  28BB               	line	21
  4215                           	
  4216                           l467:	
  4217  08BB                     	line	22
  4218                           	
  4219                           l3242:	
  4220  08BB                     	clrf	(___awdiv@quotient)
  4221  08BB  01A6               	clrf	(___awdiv@quotient+1)
  4222  08BC  01A7               	line	23
  4223                           	
  4224                           l3244:	
  4225  08BD                     	movf	((___awdiv@divisor)),w
  4226  08BD  0820               iorwf	((___awdiv@divisor+1)),w
  4227  08BE  0421               	btfsc	status,2
  4228  08BF  1903               	goto	u4861
  4229  08C0  28C2               	goto	u4860
  4230  08C1  28C3               u4861:
  4231  08C2                     	goto	l3264
  4232  08C2  2900               u4860:
  4233  08C3                     	line	24
  4234                           	
  4235                           l3246:	
  4236  08C3                     	clrf	(___awdiv@counter)
  4237  08C3  01A4               	incf	(___awdiv@counter),f
  4238  08C4  0AA4               	line	25
  4239                           	goto	l3252
  4240  08C5  28D2               	
  4241                           l470:	
  4242  08C6                     	line	26
  4243                           	
  4244                           l3248:	
  4245  08C6                     	movlw	01h
  4246  08C6  3001               	
  4247                           u4875:
  4248  08C7                     	clrc
  4249  08C7  1003               	rlf	(___awdiv@divisor),f
  4250  08C8  0DA0               	rlf	(___awdiv@divisor+1),f
  4251  08C9  0DA1               	addlw	-1
  4252  08CA  3EFF               	skipz
  4253  08CB  1D03               	goto	u4875
  4254  08CC  28C7               	line	27
  4255                           	
  4256                           l3250:	
  4257  08CD                     	movlw	low(01h)
  4258  08CD  3001               	movwf	(??___awdiv+0)+0
  4259  08CE  00F8               	movf	(??___awdiv+0)+0,w
  4260  08CF  0878               	addwf	(___awdiv@counter),f
  4261  08D0  07A4               	goto	l3252
  4262  08D1  28D2               	line	28
  4263                           	
  4264                           l469:	
  4265  08D2                     	line	25
  4266                           	
  4267                           l3252:	
  4268  08D2                     	btfss	(___awdiv@divisor+1),(15)&7
  4269  08D2  1FA1               	goto	u4881
  4270  08D3  28D5               	goto	u4880
  4271  08D4  28D6               u4881:
  4272  08D5                     	goto	l3248
  4273  08D5  28C6               u4880:
  4274  08D6                     	goto	l3254
  4275  08D6  28D8               	
  4276                           l471:	
  4277  08D7                     	goto	l3254
  4278  08D7  28D8               	line	29
  4279                           	
  4280                           l472:	
  4281  08D8                     	line	30
  4282                           	
  4283                           l3254:	
  4284  08D8                     	movlw	01h
  4285  08D8  3001               	
  4286                           u4895:
  4287  08D9                     	clrc
  4288  08D9  1003               	rlf	(___awdiv@quotient),f
  4289  08DA  0DA6               	rlf	(___awdiv@quotient+1),f
  4290  08DB  0DA7               	addlw	-1
  4291  08DC  3EFF               	skipz
  4292  08DD  1D03               	goto	u4895
  4293  08DE  28D9               	line	31
  4294                           	movf	(___awdiv@divisor+1),w
  4295  08DF  0821               	subwf	(___awdiv@dividend+1),w
  4296  08E0  0223               	skipz
  4297  08E1  1D03               	goto	u4905
  4298  08E2  28E5               	movf	(___awdiv@divisor),w
  4299  08E3  0820               	subwf	(___awdiv@dividend),w
  4300  08E4  0222               u4905:
  4301  08E5                     	skipc
  4302  08E5  1C03               	goto	u4901
  4303  08E6  28E8               	goto	u4900
  4304  08E7  28E9               u4901:
  4305  08E8                     	goto	l3260
  4306  08E8  28F1               u4900:
  4307  08E9                     	line	32
  4308                           	
  4309                           l3256:	
  4310  08E9                     	movf	(___awdiv@divisor),w
  4311  08E9  0820               	subwf	(___awdiv@dividend),f
  4312  08EA  02A2               	movf	(___awdiv@divisor+1),w
  4313  08EB  0821               	skipc
  4314  08EC  1C03               	decf	(___awdiv@dividend+1),f
  4315  08ED  03A3               	subwf	(___awdiv@dividend+1),f
  4316  08EE  02A3               	line	33
  4317                           	
  4318                           l3258:	
  4319  08EF                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4320  08EF  1426               	goto	l3260
  4321  08F0  28F1               	line	34
  4322                           	
  4323                           l473:	
  4324  08F1                     	line	35
  4325                           	
  4326                           l3260:	
  4327  08F1                     	movlw	01h
  4328  08F1  3001               	
  4329                           u4915:
  4330  08F2                     	clrc
  4331  08F2  1003               	rrf	(___awdiv@divisor+1),f
  4332  08F3  0CA1               	rrf	(___awdiv@divisor),f
  4333  08F4  0CA0               	addlw	-1
  4334  08F5  3EFF               	skipz
  4335  08F6  1D03               	goto	u4915
  4336  08F7  28F2               	line	36
  4337                           	
  4338                           l3262:	
  4339  08F8                     	movlw	01h
  4340  08F8  3001               	subwf	(___awdiv@counter),f
  4341  08F9  02A4               	btfss	status,2
  4342  08FA  1D03               	goto	u4921
  4343  08FB  28FD               	goto	u4920
  4344  08FC  28FE               u4921:
  4345  08FD                     	goto	l3254
  4346  08FD  28D8               u4920:
  4347  08FE                     	goto	l3264
  4348  08FE  2900               	
  4349                           l474:	
  4350  08FF                     	goto	l3264
  4351  08FF  2900               	line	37
  4352                           	
  4353                           l468:	
  4354  0900                     	line	38
  4355                           	
  4356                           l3264:	
  4357  0900                     	movf	((___awdiv@sign)),w
  4358  0900  0825               	btfsc	status,2
  4359  0901  1903               	goto	u4931
  4360  0902  2904               	goto	u4930
  4361  0903  2905               u4931:
  4362  0904                     	goto	l3268
  4363  0904  290B               u4930:
  4364  0905                     	line	39
  4365                           	
  4366                           l3266:	
  4367  0905                     	comf	(___awdiv@quotient),f
  4368  0905  09A6               	comf	(___awdiv@quotient+1),f
  4369  0906  09A7               	incf	(___awdiv@quotient),f
  4370  0907  0AA6               	skipnz
  4371  0908  1903               	incf	(___awdiv@quotient+1),f
  4372  0909  0AA7               	goto	l3268
  4373  090A  290B               	
  4374                           l475:	
  4375  090B                     	line	40
  4376                           	
  4377                           l3268:	
  4378  090B                     	movf	(___awdiv@quotient+1),w
  4379  090B  0827               	movwf	(?___awdiv+1)
  4380  090C  00A1               	movf	(___awdiv@quotient),w
  4381  090D  0826               	movwf	(?___awdiv)
  4382  090E  00A0               	goto	l476
  4383  090F  2910               	
  4384                           l3270:	
  4385  0910                     	line	41
  4386                           	
  4387                           l476:	
  4388  0910                     	return
  4389  0910  0008               	opt stack 0
  4390                           GLOBAL	__end_of___awdiv
  4391                           	__end_of___awdiv:
  4392  0911                     	signat	___awdiv,8314
  4393                           	global	_PWM2_Start
  4394                           
  4395 ;; *************** function _PWM2_Start *****************
  4396 ;; Defined at:
  4397 ;;		line 67 in file "./pwm.h"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  2  154[None  ] int 
  4404 ;; Registers used:
  4405 ;;		None
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4411 ;;      Params:         0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0
  4414 ;;      Totals:         0       0       0       0       0
  4415 ;;Total ram usage:        0 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4425                           	file	"./pwm.h"
  4426                           	line	67
  4427                           global __ptext6
  4428                           __ptext6:	;psect for function _PWM2_Start
  4429  156D                     psect	text6
  4430                           	file	"./pwm.h"
  4431                           	line	67
  4432                           	global	__size_of_PWM2_Start
  4433                           	__size_of_PWM2_Start	equ	__end_of_PWM2_Start-_PWM2_Start
  4434  000B                     	
  4435                           _PWM2_Start:	
  4436  156D                     ;incstack = 0
  4437                           	opt	stack 6
  4438                           ; Regs used in _PWM2_Start: []
  4439                           	line	69
  4440                           	
  4441                           l2380:	
  4442  156D                     ;./pwm.h: 69:   CCP2M3 = 1;
  4443                           	bcf	status, 5	;RP0=0, select bank0
  4444  156D  1283               	bcf	status, 6	;RP1=0, select bank0
  4445  156E  1303               	bsf	(235/8),(235)&7	;volatile
  4446  156F  159D               	line	70
  4447                           ;./pwm.h: 70:   CCP2M2 = 1;
  4448                           	bsf	(234/8),(234)&7	;volatile
  4449  1570  151D               	line	75
  4450                           ;./pwm.h: 75:     T2CKPS0 = 1;
  4451                           	bsf	(144/8),(144)&7	;volatile
  4452  1571  1412               	line	76
  4453                           ;./pwm.h: 76:     T2CKPS1 = 0;
  4454                           	bcf	(145/8),(145)&7	;volatile
  4455  1572  1092               	line	81
  4456                           ;./pwm.h: 81:     TMR2ON = 1;
  4457                           	bsf	(146/8),(146)&7	;volatile
  4458  1573  1512               	line	82
  4459                           ;./pwm.h: 82:     TRISC1 = 0;
  4460                           	bsf	status, 5	;RP0=1, select bank1
  4461  1574  1683               	bcf	status, 6	;RP1=0, select bank1
  4462  1575  1303               	bcf	(1081/8)^080h,(1081)&7	;volatile
  4463  1576  1087               	line	83
  4464                           	
  4465                           l155:	
  4466  1577                     	return
  4467  1577  0008               	opt stack 0
  4468                           GLOBAL	__end_of_PWM2_Start
  4469                           	__end_of_PWM2_Start:
  4470  1578                     	signat	_PWM2_Start,90
  4471                           	global	_PWM2_Init
  4472                           
  4473 ;; *************** function _PWM2_Init *****************
  4474 ;; Defined at:
  4475 ;;		line 15 in file "./pwm.h"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  fre             4    7[BANK0 ] long 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  2    7[BANK0 ] int 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       4       0       0       0
  4490 ;;      Locals:         0       0       0       0       0
  4491 ;;      Temps:          0       4       0       0       0
  4492 ;;      Totals:         0       8       0       0       0
  4493 ;;Total ram usage:        8 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    2
  4496 ;; This function calls:
  4497 ;;		___aldiv
  4498 ;; This function is called by:
  4499 ;;		_main
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4503                           	line	15
  4504                           global __ptext7
  4505                           __ptext7:	;psect for function _PWM2_Init
  4506  1755                     psect	text7
  4507                           	file	"./pwm.h"
  4508                           	line	15
  4509                           	global	__size_of_PWM2_Init
  4510                           	__size_of_PWM2_Init	equ	__end_of_PWM2_Init-_PWM2_Init
  4511  004F                     	
  4512                           _PWM2_Init:	
  4513  1755                     ;incstack = 0
  4514                           	opt	stack 5
  4515                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
  4516                           	line	17
  4517                           	
  4518                           l3138:	
  4519  1755                     ;./pwm.h: 15: PWM2_Init(long fre);./pwm.h: 16: {;./pwm.h: 17:   PR2 = (20000000/(fre*4*4
                                 )) - 1;
  4520                           	bcf	status, 5	;RP0=0, select bank0
  4521  1755  1283               	bcf	status, 6	;RP1=0, select bank0
  4522  1756  1303               	movf	(PWM2_Init@fre),w
  4523  1757  0827               	movwf	(??_PWM2_Init+0)+0
  4524  1758  00AB               	movf	(PWM2_Init@fre+1),w
  4525  1759  0828               	movwf	((??_PWM2_Init+0)+0+1)
  4526  175A  00AC               	movf	(PWM2_Init@fre+2),w
  4527  175B  0829               	movwf	((??_PWM2_Init+0)+0+2)
  4528  175C  00AD               	movf	(PWM2_Init@fre+3),w
  4529  175D  082A               	movwf	((??_PWM2_Init+0)+0+3)
  4530  175E  00AE               	movlw	02h
  4531  175F  3002               u4715:
  4532  1760                     	clrc
  4533  1760  1003               	rlf	(??_PWM2_Init+0)+0,f
  4534  1761  0DAB               	rlf	(??_PWM2_Init+0)+1,f
  4535  1762  0DAC               	rlf	(??_PWM2_Init+0)+2,f
  4536  1763  0DAD               	rlf	(??_PWM2_Init+0)+3,f
  4537  1764  0DAE               u4710:
  4538  1765                     	addlw	-1
  4539  1765  3EFF               	skipz
  4540  1766  1D03               	goto	u4715
  4541  1767  2F60               	movlw	02h
  4542  1768  3002               u4725:
  4543  1769                     	clrc
  4544  1769  1003               	rlf	(??_PWM2_Init+0)+0,f
  4545  176A  0DAB               	rlf	(??_PWM2_Init+0)+1,f
  4546  176B  0DAC               	rlf	(??_PWM2_Init+0)+2,f
  4547  176C  0DAD               	rlf	(??_PWM2_Init+0)+3,f
  4548  176D  0DAE               u4720:
  4549  176E                     	addlw	-1
  4550  176E  3EFF               	skipz
  4551  176F  1D03               	goto	u4725
  4552  1770  2F69               	movf	3+(??_PWM2_Init+0)+0,w
  4553  1771  082E               	movwf	(___aldiv@divisor+3)
  4554  1772  00F5               	movf	2+(??_PWM2_Init+0)+0,w
  4555  1773  082D               	movwf	(___aldiv@divisor+2)
  4556  1774  00F4               	movf	1+(??_PWM2_Init+0)+0,w
  4557  1775  082C               	movwf	(___aldiv@divisor+1)
  4558  1776  00F3               	movf	0+(??_PWM2_Init+0)+0,w
  4559  1777  082B               	movwf	(___aldiv@divisor)
  4560  1778  00F2               
  4561                           	movlw	01h
  4562  1779  3001               	movwf	(___aldiv@dividend+3)
  4563  177A  00F9               	movlw	031h
  4564  177B  3031               	movwf	(___aldiv@dividend+2)
  4565  177C  00F8               	movlw	02Dh
  4566  177D  302D               	movwf	(___aldiv@dividend+1)
  4567  177E  00F7               	movlw	0
  4568  177F  3000               	movwf	(___aldiv@dividend)
  4569  1780  00F6               
  4570                           	fcall	___aldiv
  4571  1781  120A  158A  2229  160A  118A  	movf	(0+(?___aldiv)),w
  4572  1786  0872               	addlw	0FFh
  4573  1787  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4574  1788  1683               	bcf	status, 6	;RP1=0, select bank1
  4575  1789  1303               	movwf	(146)^080h	;volatile
  4576  178A  0092               	line	18
  4577                           	
  4578                           l3140:	
  4579  178B                     ;./pwm.h: 18:   freq = fre;
  4580                           	bcf	status, 5	;RP0=0, select bank0
  4581  178B  1283               	bcf	status, 6	;RP1=0, select bank0
  4582  178C  1303               	movf	(PWM2_Init@fre+3),w
  4583  178D  082A               	bsf	status, 5	;RP0=1, select bank1
  4584  178E  1683               	bcf	status, 6	;RP1=0, select bank1
  4585  178F  1303               	movwf	(_freq+3)^080h
  4586  1790  00BE               	bcf	status, 5	;RP0=0, select bank0
  4587  1791  1283               	bcf	status, 6	;RP1=0, select bank0
  4588  1792  1303               	movf	(PWM2_Init@fre+2),w
  4589  1793  0829               	bsf	status, 5	;RP0=1, select bank1
  4590  1794  1683               	bcf	status, 6	;RP1=0, select bank1
  4591  1795  1303               	movwf	(_freq+2)^080h
  4592  1796  00BD               	bcf	status, 5	;RP0=0, select bank0
  4593  1797  1283               	bcf	status, 6	;RP1=0, select bank0
  4594  1798  1303               	movf	(PWM2_Init@fre+1),w
  4595  1799  0828               	bsf	status, 5	;RP0=1, select bank1
  4596  179A  1683               	bcf	status, 6	;RP1=0, select bank1
  4597  179B  1303               	movwf	(_freq+1)^080h
  4598  179C  00BC               	bcf	status, 5	;RP0=0, select bank0
  4599  179D  1283               	bcf	status, 6	;RP1=0, select bank0
  4600  179E  1303               	movf	(PWM2_Init@fre),w
  4601  179F  0827               	bsf	status, 5	;RP0=1, select bank1
  4602  17A0  1683               	bcf	status, 6	;RP1=0, select bank1
  4603  17A1  1303               	movwf	(_freq)^080h
  4604  17A2  00BB               
  4605                           	line	19
  4606                           	
  4607                           l138:	
  4608  17A3                     	return
  4609  17A3  0008               	opt stack 0
  4610                           GLOBAL	__end_of_PWM2_Init
  4611                           	__end_of_PWM2_Init:
  4612  17A4                     	signat	_PWM2_Init,4218
  4613                           	global	_PWM2_Duty
  4614                           
  4615 ;; *************** function _PWM2_Duty *****************
  4616 ;; Defined at:
  4617 ;;		line 32 in file "./pwm.h"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  duty            2   11[BANK1 ] unsigned int 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  2   11[BANK1 ] int 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4631 ;;      Params:         0       0       2       0       0
  4632 ;;      Locals:         0       0       0       0       0
  4633 ;;      Temps:          0       0       2       0       0
  4634 ;;      Totals:         0       0       4       0       0
  4635 ;;Total ram usage:        4 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    3
  4638 ;; This function calls:
  4639 ;;		_PWM_Max_Duty
  4640 ;;		___fldiv
  4641 ;;		___flmul
  4642 ;;		___fltol
  4643 ;;		___xxtofl
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4649                           	line	32
  4650                           global __ptext8
  4651                           __ptext8:	;psect for function _PWM2_Duty
  4652  0B76                     psect	text8
  4653                           	file	"./pwm.h"
  4654                           	line	32
  4655                           	global	__size_of_PWM2_Duty
  4656                           	__size_of_PWM2_Duty	equ	__end_of_PWM2_Duty-_PWM2_Duty
  4657  00A7                     	
  4658                           _PWM2_Duty:	
  4659  0B76                     ;incstack = 0
  4660                           	opt	stack 4
  4661                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4662                           	line	34
  4663                           	
  4664                           l3142:	
  4665  0B76                     ;./pwm.h: 32: PWM2_Duty(unsigned int duty);./pwm.h: 33: {;./pwm.h: 34:   if(duty<1024)
  4666                           	movlw	04h
  4667  0B76  3004               	bsf	status, 5	;RP0=1, select bank1
  4668  0B77  1683               	bcf	status, 6	;RP1=0, select bank1
  4669  0B78  1303               	subwf	(PWM2_Duty@duty+1)^080h,w
  4670  0B79  022C               	movlw	0
  4671  0B7A  3000               	skipnz
  4672  0B7B  1903               	subwf	(PWM2_Duty@duty)^080h,w
  4673  0B7C  022B               	skipnc
  4674  0B7D  1803               	goto	u4731
  4675  0B7E  2B80               	goto	u4730
  4676  0B7F  2B81               u4731:
  4677  0B80                     	goto	l146
  4678  0B80  2C1C               u4730:
  4679  0B81                     	line	36
  4680                           	
  4681                           l3144:	
  4682  0B81                     ;./pwm.h: 35:   {;./pwm.h: 36:     duty = ((float)duty/1023)*PWM_Max_Duty();
  4683                           	movf	(PWM2_Duty@duty)^080h,w
  4684  0B81  082B               	bcf	status, 5	;RP0=0, select bank0
  4685  0B82  1283               	bcf	status, 6	;RP1=0, select bank0
  4686  0B83  1303               	movwf	(___xxtofl@val)
  4687  0B84  00AD               	bsf	status, 5	;RP0=1, select bank1
  4688  0B85  1683               	bcf	status, 6	;RP1=0, select bank1
  4689  0B86  1303               	movf	(PWM2_Duty@duty+1)^080h,w
  4690  0B87  082C               	bcf	status, 5	;RP0=0, select bank0
  4691  0B88  1283               	bcf	status, 6	;RP1=0, select bank0
  4692  0B89  1303               	movwf	((___xxtofl@val))+1
  4693  0B8A  00AE               	clrf	2+((___xxtofl@val))
  4694  0B8B  01AF               	clrf	3+((___xxtofl@val))
  4695  0B8C  01B0               	movlw	low(0)
  4696  0B8D  3000               	fcall	___xxtofl
  4697  0B8E  120A  158A  241D  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4698  0B93  1283               	bcf	status, 6	;RP1=0, select bank0
  4699  0B94  1303               	movf	(3+(?___xxtofl)),w
  4700  0B95  0830               	movwf	(___fldiv@b+3)
  4701  0B96  00C2               	movf	(2+(?___xxtofl)),w
  4702  0B97  082F               	movwf	(___fldiv@b+2)
  4703  0B98  00C1               	movf	(1+(?___xxtofl)),w
  4704  0B99  082E               	movwf	(___fldiv@b+1)
  4705  0B9A  00C0               	movf	(0+(?___xxtofl)),w
  4706  0B9B  082D               	movwf	(___fldiv@b)
  4707  0B9C  00BF               
  4708                           	movlw	0x44
  4709  0B9D  3044               	movwf	(___fldiv@a+3)
  4710  0B9E  00BE               	movlw	0x7f
  4711  0B9F  307F               	movwf	(___fldiv@a+2)
  4712  0BA0  00BD               	movlw	0xc0
  4713  0BA1  30C0               	movwf	(___fldiv@a+1)
  4714  0BA2  00BC               	movlw	0x0
  4715  0BA3  3000               	movwf	(___fldiv@a)
  4716  0BA4  00BB               
  4717                           	fcall	___fldiv
  4718  0BA5  120A  158A  25F7  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4719  0BAA  1283               	bcf	status, 6	;RP1=0, select bank0
  4720  0BAB  1303               	movf	(3+(?___fldiv)),w
  4721  0BAC  083E               	movwf	(___flmul@a+3)
  4722  0BAD  00DC               	movf	(2+(?___fldiv)),w
  4723  0BAE  083D               	movwf	(___flmul@a+2)
  4724  0BAF  00DB               	movf	(1+(?___fldiv)),w
  4725  0BB0  083C               	movwf	(___flmul@a+1)
  4726  0BB1  00DA               	movf	(0+(?___fldiv)),w
  4727  0BB2  083B               	movwf	(___flmul@a)
  4728  0BB3  00D9               
  4729                           	fcall	_PWM_Max_Duty
  4730  0BB4  120A  158A  2002  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4731  0BB9  1283               	bcf	status, 6	;RP1=0, select bank0
  4732  0BBA  1303               	movf	(0+(?_PWM_Max_Duty)),w
  4733  0BBB  0827               	movwf	(___xxtofl@val)
  4734  0BBC  00AD               	movf	(1+(?_PWM_Max_Duty)),w
  4735  0BBD  0828               	movwf	(___xxtofl@val+1)
  4736  0BBE  00AE               	movlw	0
  4737  0BBF  3000               	btfsc	(___xxtofl@val+1),7
  4738  0BC0  1BAE               	movlw	255
  4739  0BC1  30FF               	movwf	(___xxtofl@val+2)
  4740  0BC2  00AF               	movwf	(___xxtofl@val+3)
  4741  0BC3  00B0               	movlw	low(01h)
  4742  0BC4  3001               	fcall	___xxtofl
  4743  0BC5  120A  158A  241D  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4744  0BCA  1283               	bcf	status, 6	;RP1=0, select bank0
  4745  0BCB  1303               	movf	(3+(?___xxtofl)),w
  4746  0BCC  0830               	movwf	(___flmul@b+3)
  4747  0BCD  00D8               	movf	(2+(?___xxtofl)),w
  4748  0BCE  082F               	movwf	(___flmul@b+2)
  4749  0BCF  00D7               	movf	(1+(?___xxtofl)),w
  4750  0BD0  082E               	movwf	(___flmul@b+1)
  4751  0BD1  00D6               	movf	(0+(?___xxtofl)),w
  4752  0BD2  082D               	movwf	(___flmul@b)
  4753  0BD3  00D5               
  4754                           	fcall	___flmul
  4755  0BD4  120A  118A  244A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4756  0BD9  1283               	bcf	status, 6	;RP1=0, select bank0
  4757  0BDA  1303               	movf	(3+(?___flmul)),w
  4758  0BDB  0858               	bsf	status, 5	;RP0=1, select bank1
  4759  0BDC  1683               	bcf	status, 6	;RP1=0, select bank1
  4760  0BDD  1303               	movwf	(___fltol@f1+3)^080h
  4761  0BDE  00A3               	bcf	status, 5	;RP0=0, select bank0
  4762  0BDF  1283               	bcf	status, 6	;RP1=0, select bank0
  4763  0BE0  1303               	movf	(2+(?___flmul)),w
  4764  0BE1  0857               	bsf	status, 5	;RP0=1, select bank1
  4765  0BE2  1683               	bcf	status, 6	;RP1=0, select bank1
  4766  0BE3  1303               	movwf	(___fltol@f1+2)^080h
  4767  0BE4  00A2               	bcf	status, 5	;RP0=0, select bank0
  4768  0BE5  1283               	bcf	status, 6	;RP1=0, select bank0
  4769  0BE6  1303               	movf	(1+(?___flmul)),w
  4770  0BE7  0856               	bsf	status, 5	;RP0=1, select bank1
  4771  0BE8  1683               	bcf	status, 6	;RP1=0, select bank1
  4772  0BE9  1303               	movwf	(___fltol@f1+1)^080h
  4773  0BEA  00A1               	bcf	status, 5	;RP0=0, select bank0
  4774  0BEB  1283               	bcf	status, 6	;RP1=0, select bank0
  4775  0BEC  1303               	movf	(0+(?___flmul)),w
  4776  0BED  0855               	bsf	status, 5	;RP0=1, select bank1
  4777  0BEE  1683               	bcf	status, 6	;RP1=0, select bank1
  4778  0BEF  1303               	movwf	(___fltol@f1)^080h
  4779  0BF0  00A0               
  4780                           	fcall	___fltol
  4781  0BF1  120A  158A  218D  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  4782  0BF6  1683               	bcf	status, 6	;RP1=0, select bank1
  4783  0BF7  1303               	movf	(1+(?___fltol))^080h,w
  4784  0BF8  0821               	movwf	(PWM2_Duty@duty+1)^080h
  4785  0BF9  00AC               	movf	(0+(?___fltol))^080h,w
  4786  0BFA  0820               	movwf	(PWM2_Duty@duty)^080h
  4787  0BFB  00AB               	line	37
  4788                           	
  4789                           l3146:	
  4790  0BFC                     ;./pwm.h: 37:     CCP2X = duty & 2;
  4791                           	bcf	status, 5	;RP0=0, select bank0
  4792  0BFC  1283               	bcf	status, 6	;RP1=0, select bank0
  4793  0BFD  1303               	bcf	(237/8),(237)&7	;volatile
  4794  0BFE  129D               	line	38
  4795                           	
  4796                           l3148:	
  4797  0BFF                     ;./pwm.h: 38:     CCP2Y = duty & 1;
  4798                           	bsf	status, 5	;RP0=1, select bank1
  4799  0BFF  1683               	bcf	status, 6	;RP1=0, select bank1
  4800  0C00  1303               	btfsc	(PWM2_Duty@duty)^080h,0
  4801  0C01  182B               	goto	u4741
  4802  0C02  2C04               	goto	u4740
  4803  0C03  2C08               	
  4804                           u4741:
  4805  0C04                     	bcf	status, 5	;RP0=0, select bank0
  4806  0C04  1283               	bcf	status, 6	;RP1=0, select bank0
  4807  0C05  1303               	bsf	(236/8),(236)&7	;volatile
  4808  0C06  161D               	goto	u4754
  4809  0C07  2C0B               u4740:
  4810  0C08                     	bcf	status, 5	;RP0=0, select bank0
  4811  0C08  1283               	bcf	status, 6	;RP1=0, select bank0
  4812  0C09  1303               	bcf	(236/8),(236)&7	;volatile
  4813  0C0A  121D               u4754:
  4814  0C0B                     	line	39
  4815                           	
  4816                           l3150:	
  4817  0C0B                     ;./pwm.h: 39:     CCPR2L = duty>>2;
  4818                           	bsf	status, 5	;RP0=1, select bank1
  4819  0C0B  1683               	bcf	status, 6	;RP1=0, select bank1
  4820  0C0C  1303               	movf	(PWM2_Duty@duty+1)^080h,w
  4821  0C0D  082C               	movwf	(??_PWM2_Duty+0)^080h+0+1
  4822  0C0E  00AE               	movf	(PWM2_Duty@duty)^080h,w
  4823  0C0F  082B               	movwf	(??_PWM2_Duty+0)^080h+0
  4824  0C10  00AD               	clrc
  4825  0C11  1003               	rrf	(??_PWM2_Duty+0)^080h+1,f
  4826  0C12  0CAE               	rrf	(??_PWM2_Duty+0)^080h+0,f
  4827  0C13  0CAD               	clrc
  4828  0C14  1003               	rrf	(??_PWM2_Duty+0)^080h+1,f
  4829  0C15  0CAE               	rrf	(??_PWM2_Duty+0)^080h+0,f
  4830  0C16  0CAD               	movf	0+(??_PWM2_Duty+0)^080h+0,w
  4831  0C17  082D               	bcf	status, 5	;RP0=0, select bank0
  4832  0C18  1283               	bcf	status, 6	;RP1=0, select bank0
  4833  0C19  1303               	movwf	(27)	;volatile
  4834  0C1A  009B               	goto	l146
  4835  0C1B  2C1C               	line	40
  4836                           ;./pwm.h: 40:   }
  4837                           	
  4838                           l145:	
  4839  0C1C                     	line	41
  4840                           	
  4841                           l146:	
  4842  0C1C                     	return
  4843  0C1C  0008               	opt stack 0
  4844                           GLOBAL	__end_of_PWM2_Duty
  4845                           	__end_of_PWM2_Duty:
  4846  0C1D                     	signat	_PWM2_Duty,4218
  4847                           	global	_PWM1_procenat
  4848                           
  4849 ;; *************** function _PWM1_procenat *****************
  4850 ;; Defined at:
  4851 ;;		line 42 in file "main.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  i               2   15[BANK1 ] int 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  procenat        4   21[BANK1 ] float 
  4856 ;;  koef            4   17[BANK1 ] float 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  2   15[BANK1 ] int 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4866 ;;      Params:         0       0       2       0       0
  4867 ;;      Locals:         0       0      10       0       0
  4868 ;;      Temps:          0       0       0       0       0
  4869 ;;      Totals:         0       0      12       0       0
  4870 ;;Total ram usage:       12 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    4
  4873 ;; This function calls:
  4874 ;;		_PWM1_Duty
  4875 ;;		___flmul
  4876 ;;		___fltol
  4877 ;;		___xxtofl
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4883                           	file	"main.c"
  4884                           	line	42
  4885                           global __ptext9
  4886                           __ptext9:	;psect for function _PWM1_procenat
  4887  0911                     psect	text9
  4888                           	file	"main.c"
  4889                           	line	42
  4890                           	global	__size_of_PWM1_procenat
  4891                           	__size_of_PWM1_procenat	equ	__end_of_PWM1_procenat-_PWM1_procenat
  4892  007C                     	
  4893                           _PWM1_procenat:	
  4894  0911                     ;incstack = 0
  4895                           	opt	stack 3
  4896                           ; Regs used in _PWM1_procenat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4897                           	line	47
  4898                           	
  4899                           l3152:	
  4900  0911                     ;main.c: 47:     float koef = 10.23;
  4901                           	movlw	0x41
  4902  0911  3041               	bsf	status, 5	;RP0=1, select bank1
  4903  0912  1683               	bcf	status, 6	;RP1=0, select bank1
  4904  0913  1303               	movwf	(PWM1_procenat@koef+3)^080h
  4905  0914  00B4               	movlw	0x23
  4906  0915  3023               	movwf	(PWM1_procenat@koef+2)^080h
  4907  0916  00B3               	movlw	0xae
  4908  0917  30AE               	movwf	(PWM1_procenat@koef+1)^080h
  4909  0918  00B2               	movlw	0x14
  4910  0919  3014               	movwf	(PWM1_procenat@koef)^080h
  4911  091A  00B1               
  4912                           	line	48
  4913                           	
  4914                           l3154:	
  4915  091B                     ;main.c: 48:     float procenat = koef*i;
  4916                           	movf	(PWM1_procenat@koef+3)^080h,w
  4917  091B  0834               	bcf	status, 5	;RP0=0, select bank0
  4918  091C  1283               	bcf	status, 6	;RP1=0, select bank0
  4919  091D  1303               	movwf	(___flmul@b+3)
  4920  091E  00D8               	bsf	status, 5	;RP0=1, select bank1
  4921  091F  1683               	bcf	status, 6	;RP1=0, select bank1
  4922  0920  1303               	movf	(PWM1_procenat@koef+2)^080h,w
  4923  0921  0833               	bcf	status, 5	;RP0=0, select bank0
  4924  0922  1283               	bcf	status, 6	;RP1=0, select bank0
  4925  0923  1303               	movwf	(___flmul@b+2)
  4926  0924  00D7               	bsf	status, 5	;RP0=1, select bank1
  4927  0925  1683               	bcf	status, 6	;RP1=0, select bank1
  4928  0926  1303               	movf	(PWM1_procenat@koef+1)^080h,w
  4929  0927  0832               	bcf	status, 5	;RP0=0, select bank0
  4930  0928  1283               	bcf	status, 6	;RP1=0, select bank0
  4931  0929  1303               	movwf	(___flmul@b+1)
  4932  092A  00D6               	bsf	status, 5	;RP0=1, select bank1
  4933  092B  1683               	bcf	status, 6	;RP1=0, select bank1
  4934  092C  1303               	movf	(PWM1_procenat@koef)^080h,w
  4935  092D  0831               	bcf	status, 5	;RP0=0, select bank0
  4936  092E  1283               	bcf	status, 6	;RP1=0, select bank0
  4937  092F  1303               	movwf	(___flmul@b)
  4938  0930  00D5               
  4939                           	bsf	status, 5	;RP0=1, select bank1
  4940  0931  1683               	bcf	status, 6	;RP1=0, select bank1
  4941  0932  1303               	movf	(PWM1_procenat@i)^080h,w
  4942  0933  082F               	bcf	status, 5	;RP0=0, select bank0
  4943  0934  1283               	bcf	status, 6	;RP1=0, select bank0
  4944  0935  1303               	movwf	(___xxtofl@val)
  4945  0936  00AD               	bsf	status, 5	;RP0=1, select bank1
  4946  0937  1683               	bcf	status, 6	;RP1=0, select bank1
  4947  0938  1303               	movf	(PWM1_procenat@i+1)^080h,w
  4948  0939  0830               	bcf	status, 5	;RP0=0, select bank0
  4949  093A  1283               	bcf	status, 6	;RP1=0, select bank0
  4950  093B  1303               	movwf	(___xxtofl@val+1)
  4951  093C  00AE               	movlw	0
  4952  093D  3000               	btfsc	(___xxtofl@val+1),7
  4953  093E  1BAE               	movlw	255
  4954  093F  30FF               	movwf	(___xxtofl@val+2)
  4955  0940  00AF               	movwf	(___xxtofl@val+3)
  4956  0941  00B0               	movlw	low(01h)
  4957  0942  3001               	fcall	___xxtofl
  4958  0943  120A  158A  241D  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4959  0948  1283               	bcf	status, 6	;RP1=0, select bank0
  4960  0949  1303               	movf	(3+(?___xxtofl)),w
  4961  094A  0830               	movwf	(___flmul@a+3)
  4962  094B  00DC               	movf	(2+(?___xxtofl)),w
  4963  094C  082F               	movwf	(___flmul@a+2)
  4964  094D  00DB               	movf	(1+(?___xxtofl)),w
  4965  094E  082E               	movwf	(___flmul@a+1)
  4966  094F  00DA               	movf	(0+(?___xxtofl)),w
  4967  0950  082D               	movwf	(___flmul@a)
  4968  0951  00D9               
  4969                           	fcall	___flmul
  4970  0952  120A  118A  244A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4971  0957  1283               	bcf	status, 6	;RP1=0, select bank0
  4972  0958  1303               	movf	(3+(?___flmul)),w
  4973  0959  0858               	bsf	status, 5	;RP0=1, select bank1
  4974  095A  1683               	bcf	status, 6	;RP1=0, select bank1
  4975  095B  1303               	movwf	(PWM1_procenat@procenat+3)^080h
  4976  095C  00B8               	bcf	status, 5	;RP0=0, select bank0
  4977  095D  1283               	bcf	status, 6	;RP1=0, select bank0
  4978  095E  1303               	movf	(2+(?___flmul)),w
  4979  095F  0857               	bsf	status, 5	;RP0=1, select bank1
  4980  0960  1683               	bcf	status, 6	;RP1=0, select bank1
  4981  0961  1303               	movwf	(PWM1_procenat@procenat+2)^080h
  4982  0962  00B7               	bcf	status, 5	;RP0=0, select bank0
  4983  0963  1283               	bcf	status, 6	;RP1=0, select bank0
  4984  0964  1303               	movf	(1+(?___flmul)),w
  4985  0965  0856               	bsf	status, 5	;RP0=1, select bank1
  4986  0966  1683               	bcf	status, 6	;RP1=0, select bank1
  4987  0967  1303               	movwf	(PWM1_procenat@procenat+1)^080h
  4988  0968  00B6               	bcf	status, 5	;RP0=0, select bank0
  4989  0969  1283               	bcf	status, 6	;RP1=0, select bank0
  4990  096A  1303               	movf	(0+(?___flmul)),w
  4991  096B  0855               	bsf	status, 5	;RP0=1, select bank1
  4992  096C  1683               	bcf	status, 6	;RP1=0, select bank1
  4993  096D  1303               	movwf	(PWM1_procenat@procenat)^080h
  4994  096E  00B5               
  4995                           	line	55
  4996                           	
  4997                           l3156:	
  4998  096F                     ;main.c: 55:     return PWM1_Duty(procenat);;	Return value of _PWM1_procenat is never us
                                 ed
  4999                           	movf	(PWM1_procenat@procenat+3)^080h,w
  5000  096F  0838               	movwf	(___fltol@f1+3)^080h
  5001  0970  00A3               	movf	(PWM1_procenat@procenat+2)^080h,w
  5002  0971  0837               	movwf	(___fltol@f1+2)^080h
  5003  0972  00A2               	movf	(PWM1_procenat@procenat+1)^080h,w
  5004  0973  0836               	movwf	(___fltol@f1+1)^080h
  5005  0974  00A1               	movf	(PWM1_procenat@procenat)^080h,w
  5006  0975  0835               	movwf	(___fltol@f1)^080h
  5007  0976  00A0               
  5008                           	fcall	___fltol
  5009  0977  120A  158A  218D  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5010  097C  1683               	bcf	status, 6	;RP1=0, select bank1
  5011  097D  1303               	movf	(1+(?___fltol))^080h,w
  5012  097E  0821               	movwf	(_PWM1_procenat$918+1)^080h
  5013  097F  00BA               	movf	(0+(?___fltol))^080h,w
  5014  0980  0820               	movwf	(_PWM1_procenat$918)^080h
  5015  0981  00B9               	
  5016                           l3158:	
  5017  0982                     ;main.c: 55:     return PWM1_Duty(procenat);;	Return value of _PWM1_procenat is never us
                                 ed
  5018                           	movf	(_PWM1_procenat$918+1)^080h,w
  5019  0982  083A               	movwf	(PWM1_Duty@duty+1)^080h
  5020  0983  00AC               	movf	(_PWM1_procenat$918)^080h,w
  5021  0984  0839               	movwf	(PWM1_Duty@duty)^080h
  5022  0985  00AB               	fcall	_PWM1_Duty
  5023  0986  120A  158A  22CF  120A  158A  	goto	l167
  5024  098B  298C               	
  5025                           l3160:	
  5026  098C                     	line	56
  5027                           	
  5028                           l167:	
  5029  098C                     	return
  5030  098C  0008               	opt stack 0
  5031                           GLOBAL	__end_of_PWM1_procenat
  5032                           	__end_of_PWM1_procenat:
  5033  098D                     	signat	_PWM1_procenat,4218
  5034                           	global	_PWM1_Duty
  5035                           
  5036 ;; *************** function _PWM1_Duty *****************
  5037 ;; Defined at:
  5038 ;;		line 21 in file "./pwm.h"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  duty            2   11[BANK1 ] unsigned int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2   11[BANK1 ] int 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5052 ;;      Params:         0       0       2       0       0
  5053 ;;      Locals:         0       0       0       0       0
  5054 ;;      Temps:          0       0       2       0       0
  5055 ;;      Totals:         0       0       4       0       0
  5056 ;;Total ram usage:        4 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    3
  5059 ;; This function calls:
  5060 ;;		_PWM_Max_Duty
  5061 ;;		___fldiv
  5062 ;;		___flmul
  5063 ;;		___fltol
  5064 ;;		___xxtofl
  5065 ;; This function is called by:
  5066 ;;		_PWM1_procenat
  5067 ;;		_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5071                           	file	"./pwm.h"
  5072                           	line	21
  5073                           global __ptext10
  5074                           __ptext10:	;psect for function _PWM1_Duty
  5075  0ACF                     psect	text10
  5076                           	file	"./pwm.h"
  5077                           	line	21
  5078                           	global	__size_of_PWM1_Duty
  5079                           	__size_of_PWM1_Duty	equ	__end_of_PWM1_Duty-_PWM1_Duty
  5080  00A7                     	
  5081                           _PWM1_Duty:	
  5082  0ACF                     ;incstack = 0
  5083                           	opt	stack 3
  5084                           ; Regs used in _PWM1_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5085                           	line	23
  5086                           	
  5087                           l3062:	
  5088  0ACF                     ;./pwm.h: 21: PWM1_Duty(unsigned int duty);./pwm.h: 22: {;./pwm.h: 23:   if(duty<1024)
  5089                           	movlw	04h
  5090  0ACF  3004               	bsf	status, 5	;RP0=1, select bank1
  5091  0AD0  1683               	bcf	status, 6	;RP1=0, select bank1
  5092  0AD1  1303               	subwf	(PWM1_Duty@duty+1)^080h,w
  5093  0AD2  022C               	movlw	0
  5094  0AD3  3000               	skipnz
  5095  0AD4  1903               	subwf	(PWM1_Duty@duty)^080h,w
  5096  0AD5  022B               	skipnc
  5097  0AD6  1803               	goto	u4531
  5098  0AD7  2AD9               	goto	u4530
  5099  0AD8  2ADA               u4531:
  5100  0AD9                     	goto	l142
  5101  0AD9  2B75               u4530:
  5102  0ADA                     	line	25
  5103                           	
  5104                           l3064:	
  5105  0ADA                     ;./pwm.h: 24:   {;./pwm.h: 25:     duty = ((float)duty/1023)*PWM_Max_Duty();
  5106                           	movf	(PWM1_Duty@duty)^080h,w
  5107  0ADA  082B               	bcf	status, 5	;RP0=0, select bank0
  5108  0ADB  1283               	bcf	status, 6	;RP1=0, select bank0
  5109  0ADC  1303               	movwf	(___xxtofl@val)
  5110  0ADD  00AD               	bsf	status, 5	;RP0=1, select bank1
  5111  0ADE  1683               	bcf	status, 6	;RP1=0, select bank1
  5112  0ADF  1303               	movf	(PWM1_Duty@duty+1)^080h,w
  5113  0AE0  082C               	bcf	status, 5	;RP0=0, select bank0
  5114  0AE1  1283               	bcf	status, 6	;RP1=0, select bank0
  5115  0AE2  1303               	movwf	((___xxtofl@val))+1
  5116  0AE3  00AE               	clrf	2+((___xxtofl@val))
  5117  0AE4  01AF               	clrf	3+((___xxtofl@val))
  5118  0AE5  01B0               	movlw	low(0)
  5119  0AE6  3000               	fcall	___xxtofl
  5120  0AE7  120A  158A  241D  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5121  0AEC  1283               	bcf	status, 6	;RP1=0, select bank0
  5122  0AED  1303               	movf	(3+(?___xxtofl)),w
  5123  0AEE  0830               	movwf	(___fldiv@b+3)
  5124  0AEF  00C2               	movf	(2+(?___xxtofl)),w
  5125  0AF0  082F               	movwf	(___fldiv@b+2)
  5126  0AF1  00C1               	movf	(1+(?___xxtofl)),w
  5127  0AF2  082E               	movwf	(___fldiv@b+1)
  5128  0AF3  00C0               	movf	(0+(?___xxtofl)),w
  5129  0AF4  082D               	movwf	(___fldiv@b)
  5130  0AF5  00BF               
  5131                           	movlw	0x44
  5132  0AF6  3044               	movwf	(___fldiv@a+3)
  5133  0AF7  00BE               	movlw	0x7f
  5134  0AF8  307F               	movwf	(___fldiv@a+2)
  5135  0AF9  00BD               	movlw	0xc0
  5136  0AFA  30C0               	movwf	(___fldiv@a+1)
  5137  0AFB  00BC               	movlw	0x0
  5138  0AFC  3000               	movwf	(___fldiv@a)
  5139  0AFD  00BB               
  5140                           	fcall	___fldiv
  5141  0AFE  120A  158A  25F7  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5142  0B03  1283               	bcf	status, 6	;RP1=0, select bank0
  5143  0B04  1303               	movf	(3+(?___fldiv)),w
  5144  0B05  083E               	movwf	(___flmul@a+3)
  5145  0B06  00DC               	movf	(2+(?___fldiv)),w
  5146  0B07  083D               	movwf	(___flmul@a+2)
  5147  0B08  00DB               	movf	(1+(?___fldiv)),w
  5148  0B09  083C               	movwf	(___flmul@a+1)
  5149  0B0A  00DA               	movf	(0+(?___fldiv)),w
  5150  0B0B  083B               	movwf	(___flmul@a)
  5151  0B0C  00D9               
  5152                           	fcall	_PWM_Max_Duty
  5153  0B0D  120A  158A  2002  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5154  0B12  1283               	bcf	status, 6	;RP1=0, select bank0
  5155  0B13  1303               	movf	(0+(?_PWM_Max_Duty)),w
  5156  0B14  0827               	movwf	(___xxtofl@val)
  5157  0B15  00AD               	movf	(1+(?_PWM_Max_Duty)),w
  5158  0B16  0828               	movwf	(___xxtofl@val+1)
  5159  0B17  00AE               	movlw	0
  5160  0B18  3000               	btfsc	(___xxtofl@val+1),7
  5161  0B19  1BAE               	movlw	255
  5162  0B1A  30FF               	movwf	(___xxtofl@val+2)
  5163  0B1B  00AF               	movwf	(___xxtofl@val+3)
  5164  0B1C  00B0               	movlw	low(01h)
  5165  0B1D  3001               	fcall	___xxtofl
  5166  0B1E  120A  158A  241D  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5167  0B23  1283               	bcf	status, 6	;RP1=0, select bank0
  5168  0B24  1303               	movf	(3+(?___xxtofl)),w
  5169  0B25  0830               	movwf	(___flmul@b+3)
  5170  0B26  00D8               	movf	(2+(?___xxtofl)),w
  5171  0B27  082F               	movwf	(___flmul@b+2)
  5172  0B28  00D7               	movf	(1+(?___xxtofl)),w
  5173  0B29  082E               	movwf	(___flmul@b+1)
  5174  0B2A  00D6               	movf	(0+(?___xxtofl)),w
  5175  0B2B  082D               	movwf	(___flmul@b)
  5176  0B2C  00D5               
  5177                           	fcall	___flmul
  5178  0B2D  120A  118A  244A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5179  0B32  1283               	bcf	status, 6	;RP1=0, select bank0
  5180  0B33  1303               	movf	(3+(?___flmul)),w
  5181  0B34  0858               	bsf	status, 5	;RP0=1, select bank1
  5182  0B35  1683               	bcf	status, 6	;RP1=0, select bank1
  5183  0B36  1303               	movwf	(___fltol@f1+3)^080h
  5184  0B37  00A3               	bcf	status, 5	;RP0=0, select bank0
  5185  0B38  1283               	bcf	status, 6	;RP1=0, select bank0
  5186  0B39  1303               	movf	(2+(?___flmul)),w
  5187  0B3A  0857               	bsf	status, 5	;RP0=1, select bank1
  5188  0B3B  1683               	bcf	status, 6	;RP1=0, select bank1
  5189  0B3C  1303               	movwf	(___fltol@f1+2)^080h
  5190  0B3D  00A2               	bcf	status, 5	;RP0=0, select bank0
  5191  0B3E  1283               	bcf	status, 6	;RP1=0, select bank0
  5192  0B3F  1303               	movf	(1+(?___flmul)),w
  5193  0B40  0856               	bsf	status, 5	;RP0=1, select bank1
  5194  0B41  1683               	bcf	status, 6	;RP1=0, select bank1
  5195  0B42  1303               	movwf	(___fltol@f1+1)^080h
  5196  0B43  00A1               	bcf	status, 5	;RP0=0, select bank0
  5197  0B44  1283               	bcf	status, 6	;RP1=0, select bank0
  5198  0B45  1303               	movf	(0+(?___flmul)),w
  5199  0B46  0855               	bsf	status, 5	;RP0=1, select bank1
  5200  0B47  1683               	bcf	status, 6	;RP1=0, select bank1
  5201  0B48  1303               	movwf	(___fltol@f1)^080h
  5202  0B49  00A0               
  5203                           	fcall	___fltol
  5204  0B4A  120A  158A  218D  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5205  0B4F  1683               	bcf	status, 6	;RP1=0, select bank1
  5206  0B50  1303               	movf	(1+(?___fltol))^080h,w
  5207  0B51  0821               	movwf	(PWM1_Duty@duty+1)^080h
  5208  0B52  00AC               	movf	(0+(?___fltol))^080h,w
  5209  0B53  0820               	movwf	(PWM1_Duty@duty)^080h
  5210  0B54  00AB               	line	26
  5211                           	
  5212                           l3066:	
  5213  0B55                     ;./pwm.h: 26:     CCP1X = duty & 2;
  5214                           	bcf	status, 5	;RP0=0, select bank0
  5215  0B55  1283               	bcf	status, 6	;RP1=0, select bank0
  5216  0B56  1303               	bcf	(189/8),(189)&7	;volatile
  5217  0B57  1297               	line	27
  5218                           	
  5219                           l3068:	
  5220  0B58                     ;./pwm.h: 27:     CCP1Y = duty & 1;
  5221                           	bsf	status, 5	;RP0=1, select bank1
  5222  0B58  1683               	bcf	status, 6	;RP1=0, select bank1
  5223  0B59  1303               	btfsc	(PWM1_Duty@duty)^080h,0
  5224  0B5A  182B               	goto	u4541
  5225  0B5B  2B5D               	goto	u4540
  5226  0B5C  2B61               	
  5227                           u4541:
  5228  0B5D                     	bcf	status, 5	;RP0=0, select bank0
  5229  0B5D  1283               	bcf	status, 6	;RP1=0, select bank0
  5230  0B5E  1303               	bsf	(188/8),(188)&7	;volatile
  5231  0B5F  1617               	goto	u4554
  5232  0B60  2B64               u4540:
  5233  0B61                     	bcf	status, 5	;RP0=0, select bank0
  5234  0B61  1283               	bcf	status, 6	;RP1=0, select bank0
  5235  0B62  1303               	bcf	(188/8),(188)&7	;volatile
  5236  0B63  1217               u4554:
  5237  0B64                     	line	28
  5238                           	
  5239                           l3070:	
  5240  0B64                     ;./pwm.h: 28:     CCPR1L = duty>>2;
  5241                           	bsf	status, 5	;RP0=1, select bank1
  5242  0B64  1683               	bcf	status, 6	;RP1=0, select bank1
  5243  0B65  1303               	movf	(PWM1_Duty@duty+1)^080h,w
  5244  0B66  082C               	movwf	(??_PWM1_Duty+0)^080h+0+1
  5245  0B67  00AE               	movf	(PWM1_Duty@duty)^080h,w
  5246  0B68  082B               	movwf	(??_PWM1_Duty+0)^080h+0
  5247  0B69  00AD               	clrc
  5248  0B6A  1003               	rrf	(??_PWM1_Duty+0)^080h+1,f
  5249  0B6B  0CAE               	rrf	(??_PWM1_Duty+0)^080h+0,f
  5250  0B6C  0CAD               	clrc
  5251  0B6D  1003               	rrf	(??_PWM1_Duty+0)^080h+1,f
  5252  0B6E  0CAE               	rrf	(??_PWM1_Duty+0)^080h+0,f
  5253  0B6F  0CAD               	movf	0+(??_PWM1_Duty+0)^080h+0,w
  5254  0B70  082D               	bcf	status, 5	;RP0=0, select bank0
  5255  0B71  1283               	bcf	status, 6	;RP1=0, select bank0
  5256  0B72  1303               	movwf	(21)	;volatile
  5257  0B73  0095               	goto	l142
  5258  0B74  2B75               	line	29
  5259                           ;./pwm.h: 29:   }
  5260                           	
  5261                           l141:	
  5262  0B75                     	line	30
  5263                           	
  5264                           l142:	
  5265  0B75                     	return
  5266  0B75  0008               	opt stack 0
  5267                           GLOBAL	__end_of_PWM1_Duty
  5268                           	__end_of_PWM1_Duty:
  5269  0B76                     	signat	_PWM1_Duty,4218
  5270                           	global	___xxtofl
  5271                           
  5272 ;; *************** function ___xxtofl *****************
  5273 ;; Defined at:
  5274 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  sign            1    wreg     unsigned char 
  5277 ;;  val             4   13[BANK0 ] long 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  sign            1   21[BANK0 ] unsigned char 
  5280 ;;  arg             4   23[BANK0 ] unsigned long 
  5281 ;;  exp             1   22[BANK0 ] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  4   13[BANK0 ] unsigned char 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5291 ;;      Params:         0       4       0       0       0
  5292 ;;      Locals:         0       6       0       0       0
  5293 ;;      Temps:          0       4       0       0       0
  5294 ;;      Totals:         0      14       0       0       0
  5295 ;;Total ram usage:       14 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    1
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_PWM1_Duty
  5302 ;;		_PWM2_Duty
  5303 ;;		_PWM1_procenat
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  5307                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  5308                           	line	10
  5309                           global __ptext11
  5310                           __ptext11:	;psect for function ___xxtofl
  5311  0C1D                     psect	text11
  5312                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  5313                           	line	10
  5314                           	global	__size_of___xxtofl
  5315                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  5316  00C4                     	
  5317                           ___xxtofl:	
  5318  0C1D                     ;incstack = 0
  5319                           	opt	stack 5
  5320                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5321                           ;___xxtofl@sign stored from wreg
  5322                           	bcf	status, 5	;RP0=0, select bank0
  5323  0C1D  1283               	bcf	status, 6	;RP1=0, select bank0
  5324  0C1E  1303               	movwf	(___xxtofl@sign)
  5325  0C1F  00B5               	line	15
  5326                           	
  5327                           l2188:	
  5328  0C20                     	movf	((___xxtofl@sign)),w
  5329  0C20  0835               	btfsc	status,2
  5330  0C21  1903               	goto	u2871
  5331  0C22  2C24               	goto	u2870
  5332  0C23  2C25               u2871:
  5333  0C24                     	goto	l2194
  5334  0C24  2C39               u2870:
  5335  0C25                     	
  5336                           l2190:	
  5337  0C25                     	btfss	(___xxtofl@val+3),7
  5338  0C25  1FB0               	goto	u2881
  5339  0C26  2C28               	goto	u2880
  5340  0C27  2C29               u2881:
  5341  0C28                     	goto	l2194
  5342  0C28  2C39               u2880:
  5343  0C29                     	line	16
  5344                           	
  5345                           l2192:	
  5346  0C29                     	comf	(___xxtofl@val)+0,w
  5347  0C29  092D               	movwf	(___xxtofl@arg)
  5348  0C2A  00B7               	comf	(___xxtofl@val)+1,w
  5349  0C2B  092E               	movwf	(___xxtofl@arg+1)
  5350  0C2C  00B8               	comf	(___xxtofl@val)+2,w
  5351  0C2D  092F               	movwf	(___xxtofl@arg+2)
  5352  0C2E  00B9               	comf	(___xxtofl@val)+3,w
  5353  0C2F  0930               	movwf	(___xxtofl@arg+3)
  5354  0C30  00BA               	incf	(___xxtofl@arg),f
  5355  0C31  0AB7               	skipnz
  5356  0C32  1903               	incf	(___xxtofl@arg+1),f
  5357  0C33  0AB8               	skipnz
  5358  0C34  1903               	incf	(___xxtofl@arg+2),f
  5359  0C35  0AB9               	skipnz
  5360  0C36  1903               	incf	(___xxtofl@arg+3),f
  5361  0C37  0ABA               	line	17
  5362                           	goto	l731
  5363  0C38  2C41               	line	18
  5364                           	
  5365                           l730:	
  5366  0C39                     	line	19
  5367                           	
  5368                           l2194:	
  5369  0C39                     	movf	(___xxtofl@val+3),w
  5370  0C39  0830               	movwf	(___xxtofl@arg+3)
  5371  0C3A  00BA               	movf	(___xxtofl@val+2),w
  5372  0C3B  082F               	movwf	(___xxtofl@arg+2)
  5373  0C3C  00B9               	movf	(___xxtofl@val+1),w
  5374  0C3D  082E               	movwf	(___xxtofl@arg+1)
  5375  0C3E  00B8               	movf	(___xxtofl@val),w
  5376  0C3F  082D               	movwf	(___xxtofl@arg)
  5377  0C40  00B7               
  5378                           	line	20
  5379                           	
  5380                           l731:	
  5381  0C41                     	line	21
  5382                           	movf	(___xxtofl@val+3),w
  5383  0C41  0830               	iorwf	(___xxtofl@val+2),w
  5384  0C42  042F               	iorwf	(___xxtofl@val+1),w
  5385  0C43  042E               	iorwf	(___xxtofl@val),w
  5386  0C44  042D               	skipz
  5387  0C45  1D03               	goto	u2891
  5388  0C46  2C48               	goto	u2890
  5389  0C47  2C49               u2891:
  5390  0C48                     	goto	l2200
  5391  0C48  2C53               u2890:
  5392  0C49                     	line	22
  5393                           	
  5394                           l2196:	
  5395  0C49                     	movlw	0x0
  5396  0C49  3000               	movwf	(?___xxtofl+3)
  5397  0C4A  00B0               	movlw	0x0
  5398  0C4B  3000               	movwf	(?___xxtofl+2)
  5399  0C4C  00AF               	movlw	0x0
  5400  0C4D  3000               	movwf	(?___xxtofl+1)
  5401  0C4E  00AE               	movlw	0x0
  5402  0C4F  3000               	movwf	(?___xxtofl)
  5403  0C50  00AD               
  5404                           	goto	l733
  5405  0C51  2CE0               	
  5406                           l2198:	
  5407  0C52                     	goto	l733
  5408  0C52  2CE0               	
  5409                           l732:	
  5410  0C53                     	line	23
  5411                           	
  5412                           l2200:	
  5413  0C53                     	movlw	low(096h)
  5414  0C53  3096               	movwf	(??___xxtofl+0)+0
  5415  0C54  00B1               	movf	(??___xxtofl+0)+0,w
  5416  0C55  0831               	movwf	(___xxtofl@exp)
  5417  0C56  00B6               	line	24
  5418                           	goto	l2204
  5419  0C57  2C66               	
  5420                           l735:	
  5421  0C58                     	line	25
  5422                           	
  5423                           l2202:	
  5424  0C58                     	movlw	low(01h)
  5425  0C58  3001               	movwf	(??___xxtofl+0)+0
  5426  0C59  00B1               	movf	(??___xxtofl+0)+0,w
  5427  0C5A  0831               	addwf	(___xxtofl@exp),f
  5428  0C5B  07B6               	line	26
  5429                           	movlw	01h
  5430  0C5C  3001               u2905:
  5431  0C5D                     	clrc
  5432  0C5D  1003               	rrf	(___xxtofl@arg+3),f
  5433  0C5E  0CBA               	rrf	(___xxtofl@arg+2),f
  5434  0C5F  0CB9               	rrf	(___xxtofl@arg+1),f
  5435  0C60  0CB8               	rrf	(___xxtofl@arg),f
  5436  0C61  0CB7               	addlw	-1
  5437  0C62  3EFF               	skipz
  5438  0C63  1D03               	goto	u2905
  5439  0C64  2C5D               
  5440                           	goto	l2204
  5441  0C65  2C66               	line	27
  5442                           	
  5443                           l734:	
  5444  0C66                     	line	24
  5445                           	
  5446                           l2204:	
  5447  0C66                     	movlw	high highword(0FE000000h)
  5448  0C66  30FE               	andwf	(___xxtofl@arg+3),w
  5449  0C67  053A               	btfss	status,2
  5450  0C68  1D03               	goto	u2911
  5451  0C69  2C6B               	goto	u2910
  5452  0C6A  2C6C               u2911:
  5453  0C6B                     	goto	l2202
  5454  0C6B  2C58               u2910:
  5455  0C6C                     	goto	l737
  5456  0C6C  2C89               	
  5457                           l736:	
  5458  0C6D                     	line	28
  5459                           	goto	l737
  5460  0C6D  2C89               	
  5461                           l738:	
  5462  0C6E                     	line	29
  5463                           	
  5464                           l2206:	
  5465  0C6E                     	movlw	low(01h)
  5466  0C6E  3001               	movwf	(??___xxtofl+0)+0
  5467  0C6F  00B1               	movf	(??___xxtofl+0)+0,w
  5468  0C70  0831               	addwf	(___xxtofl@exp),f
  5469  0C71  07B6               	line	30
  5470                           	
  5471                           l2208:	
  5472  0C72                     	movlw	01h
  5473  0C72  3001               	addwf	(___xxtofl@arg),f
  5474  0C73  07B7               	movlw	0
  5475  0C74  3000               	skipnc
  5476  0C75  1803               movlw 1
  5477  0C76  3001               	addwf	(___xxtofl@arg+1),f
  5478  0C77  07B8               	movlw	0
  5479  0C78  3000               	skipnc
  5480  0C79  1803               movlw 1
  5481  0C7A  3001               	addwf	(___xxtofl@arg+2),f
  5482  0C7B  07B9               	movlw	0
  5483  0C7C  3000               	skipnc
  5484  0C7D  1803               movlw 1
  5485  0C7E  3001               	addwf	(___xxtofl@arg+3),f
  5486  0C7F  07BA               	line	31
  5487                           	
  5488                           l2210:	
  5489  0C80                     	movlw	01h
  5490  0C80  3001               u2925:
  5491  0C81                     	clrc
  5492  0C81  1003               	rrf	(___xxtofl@arg+3),f
  5493  0C82  0CBA               	rrf	(___xxtofl@arg+2),f
  5494  0C83  0CB9               	rrf	(___xxtofl@arg+1),f
  5495  0C84  0CB8               	rrf	(___xxtofl@arg),f
  5496  0C85  0CB7               	addlw	-1
  5497  0C86  3EFF               	skipz
  5498  0C87  1D03               	goto	u2925
  5499  0C88  2C81               
  5500                           	line	32
  5501                           	
  5502                           l737:	
  5503  0C89                     	line	28
  5504                           	movlw	high highword(0FF000000h)
  5505  0C89  30FF               	andwf	(___xxtofl@arg+3),w
  5506  0C8A  053A               	btfss	status,2
  5507  0C8B  1D03               	goto	u2931
  5508  0C8C  2C8E               	goto	u2930
  5509  0C8D  2C8F               u2931:
  5510  0C8E                     	goto	l2206
  5511  0C8E  2C6E               u2930:
  5512  0C8F                     	goto	l2214
  5513  0C8F  2C9D               	
  5514                           l739:	
  5515  0C90                     	line	33
  5516                           	goto	l2214
  5517  0C90  2C9D               	
  5518                           l741:	
  5519  0C91                     	line	34
  5520                           	
  5521                           l2212:	
  5522  0C91                     	movlw	01h
  5523  0C91  3001               	subwf	(___xxtofl@exp),f
  5524  0C92  02B6               	line	35
  5525                           	movlw	01h
  5526  0C93  3001               	movwf	(??___xxtofl+0)+0
  5527  0C94  00B1               u2945:
  5528  0C95                     	clrc
  5529  0C95  1003               	rlf	(___xxtofl@arg),f
  5530  0C96  0DB7               	rlf	(___xxtofl@arg+1),f
  5531  0C97  0DB8               	rlf	(___xxtofl@arg+2),f
  5532  0C98  0DB9               	rlf	(___xxtofl@arg+3),f
  5533  0C99  0DBA               	decfsz	(??___xxtofl+0)+0
  5534  0C9A  0BB1               	goto	u2945
  5535  0C9B  2C95               	goto	l2214
  5536  0C9C  2C9D               	line	36
  5537                           	
  5538                           l740:	
  5539  0C9D                     	line	33
  5540                           	
  5541                           l2214:	
  5542  0C9D                     	btfsc	(___xxtofl@arg+2),(23)&7
  5543  0C9D  1BB9               	goto	u2951
  5544  0C9E  2CA0               	goto	u2950
  5545  0C9F  2CA1               u2951:
  5546  0CA0                     	goto	l744
  5547  0CA0  2CA8               u2950:
  5548  0CA1                     	
  5549                           l2216:	
  5550  0CA1                     	movlw	low(02h)
  5551  0CA1  3002               	subwf	(___xxtofl@exp),w
  5552  0CA2  0236               	skipnc
  5553  0CA3  1803               	goto	u2961
  5554  0CA4  2CA6               	goto	u2960
  5555  0CA5  2CA7               u2961:
  5556  0CA6                     	goto	l2212
  5557  0CA6  2C91               u2960:
  5558  0CA7                     	goto	l744
  5559  0CA7  2CA8               	
  5560                           l743:	
  5561  0CA8                     	
  5562                           l744:	
  5563  0CA8                     	line	37
  5564                           	btfsc	(___xxtofl@exp),(0)&7
  5565  0CA8  1836               	goto	u2971
  5566  0CA9  2CAB               	goto	u2970
  5567  0CAA  2CAC               u2971:
  5568  0CAB                     	goto	l745
  5569  0CAB  2CB4               u2970:
  5570  0CAC                     	line	38
  5571                           	
  5572                           l2218:	
  5573  0CAC                     	movlw	0FFh
  5574  0CAC  30FF               	andwf	(___xxtofl@arg),f
  5575  0CAD  05B7               	movlw	0FFh
  5576  0CAE  30FF               	andwf	(___xxtofl@arg+1),f
  5577  0CAF  05B8               	movlw	07Fh
  5578  0CB0  307F               	andwf	(___xxtofl@arg+2),f
  5579  0CB1  05B9               	movlw	0FFh
  5580  0CB2  30FF               	andwf	(___xxtofl@arg+3),f
  5581  0CB3  05BA               	
  5582                           l745:	
  5583  0CB4                     	line	39
  5584                           	clrc
  5585  0CB4  1003               	rrf	(___xxtofl@exp),f
  5586  0CB5  0CB6               
  5587                           	line	40
  5588                           	
  5589                           l2220:	
  5590  0CB6                     	movf	(___xxtofl@exp),w
  5591  0CB6  0836               	movwf	(??___xxtofl+0)+0
  5592  0CB7  00B1               	clrf	(??___xxtofl+0)+0+1
  5593  0CB8  01B2               	clrf	(??___xxtofl+0)+0+2
  5594  0CB9  01B3               	clrf	(??___xxtofl+0)+0+3
  5595  0CBA  01B4               	movlw	018h
  5596  0CBB  3018               u2985:
  5597  0CBC                     	clrc
  5598  0CBC  1003               	rlf	(??___xxtofl+0)+0,f
  5599  0CBD  0DB1               	rlf	(??___xxtofl+0)+1,f
  5600  0CBE  0DB2               	rlf	(??___xxtofl+0)+2,f
  5601  0CBF  0DB3               	rlf	(??___xxtofl+0)+3,f
  5602  0CC0  0DB4               u2980:
  5603  0CC1                     	addlw	-1
  5604  0CC1  3EFF               	skipz
  5605  0CC2  1D03               	goto	u2985
  5606  0CC3  2CBC               	movf	0+(??___xxtofl+0)+0,w
  5607  0CC4  0831               	iorwf	(___xxtofl@arg),f
  5608  0CC5  04B7               	movf	1+(??___xxtofl+0)+0,w
  5609  0CC6  0832               	iorwf	(___xxtofl@arg+1),f
  5610  0CC7  04B8               	movf	2+(??___xxtofl+0)+0,w
  5611  0CC8  0833               	iorwf	(___xxtofl@arg+2),f
  5612  0CC9  04B9               	movf	3+(??___xxtofl+0)+0,w
  5613  0CCA  0834               	iorwf	(___xxtofl@arg+3),f
  5614  0CCB  04BA               	line	41
  5615                           	
  5616                           l2222:	
  5617  0CCC                     	movf	((___xxtofl@sign)),w
  5618  0CCC  0835               	btfsc	status,2
  5619  0CCD  1903               	goto	u2991
  5620  0CCE  2CD0               	goto	u2990
  5621  0CCF  2CD1               u2991:
  5622  0CD0                     	goto	l2228
  5623  0CD0  2CD7               u2990:
  5624  0CD1                     	
  5625                           l2224:	
  5626  0CD1                     	btfss	(___xxtofl@val+3),7
  5627  0CD1  1FB0               	goto	u3001
  5628  0CD2  2CD4               	goto	u3000
  5629  0CD3  2CD5               u3001:
  5630  0CD4                     	goto	l2228
  5631  0CD4  2CD7               u3000:
  5632  0CD5                     	line	42
  5633                           	
  5634                           l2226:	
  5635  0CD5                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  5636  0CD5  17BA               	goto	l2228
  5637  0CD6  2CD7               	
  5638                           l746:	
  5639  0CD7                     	line	43
  5640                           	
  5641                           l2228:	
  5642  0CD7                     	movf	(___xxtofl@arg+3),w
  5643  0CD7  083A               	movwf	(?___xxtofl+3)
  5644  0CD8  00B0               	movf	(___xxtofl@arg+2),w
  5645  0CD9  0839               	movwf	(?___xxtofl+2)
  5646  0CDA  00AF               	movf	(___xxtofl@arg+1),w
  5647  0CDB  0838               	movwf	(?___xxtofl+1)
  5648  0CDC  00AE               	movf	(___xxtofl@arg),w
  5649  0CDD  0837               	movwf	(?___xxtofl)
  5650  0CDE  00AD               
  5651                           	goto	l733
  5652  0CDF  2CE0               	
  5653                           l2230:	
  5654  0CE0                     	line	44
  5655                           	
  5656                           l733:	
  5657  0CE0                     	return
  5658  0CE0  0008               	opt stack 0
  5659                           GLOBAL	__end_of___xxtofl
  5660                           	__end_of___xxtofl:
  5661  0CE1                     	signat	___xxtofl,8316
  5662                           	global	___fltol
  5663                           
  5664 ;; *************** function ___fltol *****************
  5665 ;; Defined at:
  5666 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  f1              4    0[BANK1 ] unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  exp1            1   10[BANK1 ] unsigned char 
  5671 ;;  sign1           1    9[BANK1 ] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  4    0[BANK1 ] long 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5681 ;;      Params:         0       0       4       0       0
  5682 ;;      Locals:         0       0       2       0       0
  5683 ;;      Temps:          0       0       5       0       0
  5684 ;;      Totals:         0       0      11       0       0
  5685 ;;Total ram usage:       11 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_PWM1_Duty
  5692 ;;		_PWM2_Duty
  5693 ;;		_PWM1_procenat
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  5697                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5698                           	line	43
  5699                           global __ptext12
  5700                           __ptext12:	;psect for function ___fltol
  5701  098D                     psect	text12
  5702                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5703                           	line	43
  5704                           	global	__size_of___fltol
  5705                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  5706  009C                     	
  5707                           ___fltol:	
  5708  098D                     ;incstack = 0
  5709                           	opt	stack 5
  5710                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5711                           	line	47
  5712                           	
  5713                           l2856:	
  5714  098D                     	bsf	status, 5	;RP0=1, select bank1
  5715  098D  1683               	bcf	status, 6	;RP1=0, select bank1
  5716  098E  1303               	movf	(___fltol@f1)^080h,w
  5717  098F  0820               	movwf	(??___fltol+0)^080h+0
  5718  0990  00A4               	movf	(___fltol@f1+1)^080h,w
  5719  0991  0821               	movwf	((??___fltol+0)^080h+0+1)
  5720  0992  00A5               	movf	(___fltol@f1+2)^080h,w
  5721  0993  0822               	movwf	((??___fltol+0)^080h+0+2)
  5722  0994  00A6               	movf	(___fltol@f1+3)^080h,w
  5723  0995  0823               	movwf	((??___fltol+0)^080h+0+3)
  5724  0996  00A7               	clrc
  5725  0997  1003               	rlf	(??___fltol+0)^080h+2,w
  5726  0998  0D26               	rlf	(??___fltol+0)^080h+3,w
  5727  0999  0D27               	movwf	(??___fltol+4)^080h+0
  5728  099A  00A8               	movf	(??___fltol+4)^080h+0,w
  5729  099B  0828               	movwf	(___fltol@exp1)^080h
  5730  099C  00AA               	movf	(((___fltol@exp1)^080h)),w
  5731  099D  082A               	btfss	status,2
  5732  099E  1D03               	goto	u4051
  5733  099F  29A1               	goto	u4050
  5734  09A0  29A2               u4051:
  5735  09A1                     	goto	l2862
  5736  09A1  29AC               u4050:
  5737  09A2                     	line	48
  5738                           	
  5739                           l2858:	
  5740  09A2                     	movlw	high highword(0)
  5741  09A2  3000               	movwf	(?___fltol+3)^080h
  5742  09A3  00A3               	movlw	low highword(0)
  5743  09A4  3000               	movwf	(?___fltol+2)^080h
  5744  09A5  00A2               	movlw	high(0)
  5745  09A6  3000               	movwf	(?___fltol+1)^080h
  5746  09A7  00A1               	movlw	low(0)
  5747  09A8  3000               	movwf	(?___fltol)^080h
  5748  09A9  00A0               
  5749                           	goto	l509
  5750  09AA  2A28               	
  5751                           l2860:	
  5752  09AB                     	goto	l509
  5753  09AB  2A28               	
  5754                           l508:	
  5755  09AC                     	line	49
  5756                           	
  5757                           l2862:	
  5758  09AC                     	movf	(___fltol@f1)^080h,w
  5759  09AC  0820               	movwf	(??___fltol+0)^080h+0
  5760  09AD  00A4               	movf	(___fltol@f1+1)^080h,w
  5761  09AE  0821               	movwf	((??___fltol+0)^080h+0+1)
  5762  09AF  00A5               	movf	(___fltol@f1+2)^080h,w
  5763  09B0  0822               	movwf	((??___fltol+0)^080h+0+2)
  5764  09B1  00A6               	movf	(___fltol@f1+3)^080h,w
  5765  09B2  0823               	movwf	((??___fltol+0)^080h+0+3)
  5766  09B3  00A7               	movlw	01Fh
  5767  09B4  301F               u4065:
  5768  09B5                     	clrc
  5769  09B5  1003               	rrf	(??___fltol+0)^080h+3,f
  5770  09B6  0CA7               	rrf	(??___fltol+0)^080h+2,f
  5771  09B7  0CA6               	rrf	(??___fltol+0)^080h+1,f
  5772  09B8  0CA5               	rrf	(??___fltol+0)^080h+0,f
  5773  09B9  0CA4               u4060:
  5774  09BA                     	addlw	-1
  5775  09BA  3EFF               	skipz
  5776  09BB  1D03               	goto	u4065
  5777  09BC  29B5               	movf	0+(??___fltol+0)^080h+0,w
  5778  09BD  0824               	movwf	(??___fltol+4)^080h+0
  5779  09BE  00A8               	movf	(??___fltol+4)^080h+0,w
  5780  09BF  0828               	movwf	(___fltol@sign1)^080h
  5781  09C0  00A9               	line	50
  5782                           	
  5783                           l2864:	
  5784  09C1                     	bsf	(___fltol@f1)^080h+(23/8),(23)&7
  5785  09C1  17A2               	line	51
  5786                           	
  5787                           l2866:	
  5788  09C2                     	movlw	0FFh
  5789  09C2  30FF               	andwf	(___fltol@f1)^080h,f
  5790  09C3  05A0               	movlw	0FFh
  5791  09C4  30FF               	andwf	(___fltol@f1+1)^080h,f
  5792  09C5  05A1               	movlw	0FFh
  5793  09C6  30FF               	andwf	(___fltol@f1+2)^080h,f
  5794  09C7  05A2               	movlw	0
  5795  09C8  3000               	andwf	(___fltol@f1+3)^080h,f
  5796  09C9  05A3               	line	52
  5797                           	
  5798                           l2868:	
  5799  09CA                     	movlw	096h
  5800  09CA  3096               	subwf	(___fltol@exp1)^080h,f
  5801  09CB  02AA               	line	53
  5802                           	
  5803                           l2870:	
  5804  09CC                     	btfss	(___fltol@exp1)^080h,7
  5805  09CC  1FAA               	goto	u4071
  5806  09CD  29CF               	goto	u4070
  5807  09CE  29D0               u4071:
  5808  09CF                     	goto	l2880
  5809  09CF  29F5               u4070:
  5810  09D0                     	line	54
  5811                           	
  5812                           l2872:	
  5813  09D0                     	movf	(___fltol@exp1)^080h,w
  5814  09D0  082A               	xorlw	80h
  5815  09D1  3A80               	addlw	-((-23)^80h)
  5816  09D2  3E97               	skipnc
  5817  09D3  1803               	goto	u4081
  5818  09D4  29D6               	goto	u4080
  5819  09D5  29D7               u4081:
  5820  09D6                     	goto	l2878
  5821  09D6  29E2               u4080:
  5822  09D7                     	line	55
  5823                           	
  5824                           l2874:	
  5825  09D7                     	movlw	high highword(0)
  5826  09D7  3000               	movwf	(?___fltol+3)^080h
  5827  09D8  00A3               	movlw	low highword(0)
  5828  09D9  3000               	movwf	(?___fltol+2)^080h
  5829  09DA  00A2               	movlw	high(0)
  5830  09DB  3000               	movwf	(?___fltol+1)^080h
  5831  09DC  00A1               	movlw	low(0)
  5832  09DD  3000               	movwf	(?___fltol)^080h
  5833  09DE  00A0               
  5834                           	goto	l509
  5835  09DF  2A28               	
  5836                           l2876:	
  5837  09E0                     	goto	l509
  5838  09E0  2A28               	
  5839                           l511:	
  5840  09E1                     	goto	l2878
  5841  09E1  29E2               	line	56
  5842                           	
  5843                           l512:	
  5844  09E2                     	line	57
  5845                           	
  5846                           l2878:	
  5847  09E2                     	movlw	01h
  5848  09E2  3001               u4095:
  5849  09E3                     	clrc
  5850  09E3  1003               	rrf	(___fltol@f1+3)^080h,f
  5851  09E4  0CA3               	rrf	(___fltol@f1+2)^080h,f
  5852  09E5  0CA2               	rrf	(___fltol@f1+1)^080h,f
  5853  09E6  0CA1               	rrf	(___fltol@f1)^080h,f
  5854  09E7  0CA0               	addlw	-1
  5855  09E8  3EFF               	skipz
  5856  09E9  1D03               	goto	u4095
  5857  09EA  29E3               
  5858                           	line	58
  5859                           	movlw	low(01h)
  5860  09EB  3001               	movwf	(??___fltol+0)^080h+0
  5861  09EC  00A4               	movf	(??___fltol+0)^080h+0,w
  5862  09ED  0824               	addwf	(___fltol@exp1)^080h,f
  5863  09EE  07AA               	btfss	status,2
  5864  09EF  1D03               	goto	u4101
  5865  09F0  29F2               	goto	u4100
  5866  09F1  29F3               u4101:
  5867  09F2                     	goto	l2878
  5868  09F2  29E2               u4100:
  5869  09F3                     	goto	l2888
  5870  09F3  2A18               	
  5871                           l513:	
  5872  09F4                     	line	59
  5873                           	goto	l2888
  5874  09F4  2A18               	
  5875                           l510:	
  5876  09F5                     	line	60
  5877                           	
  5878                           l2880:	
  5879  09F5                     	movlw	low(020h)
  5880  09F5  3020               	subwf	(___fltol@exp1)^080h,w
  5881  09F6  022A               	skipc
  5882  09F7  1C03               	goto	u4111
  5883  09F8  29FA               	goto	u4110
  5884  09F9  29FB               u4111:
  5885  09FA                     	goto	l516
  5886  09FA  2A11               u4110:
  5887  09FB                     	line	61
  5888                           	
  5889                           l2882:	
  5890  09FB                     	movlw	high highword(0)
  5891  09FB  3000               	movwf	(?___fltol+3)^080h
  5892  09FC  00A3               	movlw	low highword(0)
  5893  09FD  3000               	movwf	(?___fltol+2)^080h
  5894  09FE  00A2               	movlw	high(0)
  5895  09FF  3000               	movwf	(?___fltol+1)^080h
  5896  0A00  00A1               	movlw	low(0)
  5897  0A01  3000               	movwf	(?___fltol)^080h
  5898  0A02  00A0               
  5899                           	goto	l509
  5900  0A03  2A28               	
  5901                           l2884:	
  5902  0A04                     	goto	l509
  5903  0A04  2A28               	
  5904                           l515:	
  5905  0A05                     	line	62
  5906                           	goto	l516
  5907  0A05  2A11               	
  5908                           l517:	
  5909  0A06                     	line	63
  5910                           	
  5911                           l2886:	
  5912  0A06                     	movlw	01h
  5913  0A06  3001               	movwf	(??___fltol+0)^080h+0
  5914  0A07  00A4               u4125:
  5915  0A08                     	clrc
  5916  0A08  1003               	rlf	(___fltol@f1)^080h,f
  5917  0A09  0DA0               	rlf	(___fltol@f1+1)^080h,f
  5918  0A0A  0DA1               	rlf	(___fltol@f1+2)^080h,f
  5919  0A0B  0DA2               	rlf	(___fltol@f1+3)^080h,f
  5920  0A0C  0DA3               	decfsz	(??___fltol+0)^080h+0
  5921  0A0D  0BA4               	goto	u4125
  5922  0A0E  2A08               	line	64
  5923                           	movlw	01h
  5924  0A0F  3001               	subwf	(___fltol@exp1)^080h,f
  5925  0A10  02AA               	line	65
  5926                           	
  5927                           l516:	
  5928  0A11                     	line	62
  5929                           	movf	((___fltol@exp1)^080h),w
  5930  0A11  082A               	btfss	status,2
  5931  0A12  1D03               	goto	u4131
  5932  0A13  2A15               	goto	u4130
  5933  0A14  2A16               u4131:
  5934  0A15                     	goto	l2886
  5935  0A15  2A06               u4130:
  5936  0A16                     	goto	l2888
  5937  0A16  2A18               	
  5938                           l518:	
  5939  0A17                     	goto	l2888
  5940  0A17  2A18               	line	66
  5941                           	
  5942                           l514:	
  5943  0A18                     	line	67
  5944                           	
  5945                           l2888:	
  5946  0A18                     	movf	((___fltol@sign1)^080h),w
  5947  0A18  0829               	btfsc	status,2
  5948  0A19  1903               	goto	u4141
  5949  0A1A  2A1C               	goto	u4140
  5950  0A1B  2A1D               u4141:
  5951  0A1C                     	goto	l519
  5952  0A1C  2A28               u4140:
  5953  0A1D                     	line	68
  5954                           	
  5955                           l2890:	
  5956  0A1D                     	comf	(___fltol@f1)^080h,f
  5957  0A1D  09A0               	comf	(___fltol@f1+1)^080h,f
  5958  0A1E  09A1               	comf	(___fltol@f1+2)^080h,f
  5959  0A1F  09A2               	comf	(___fltol@f1+3)^080h,f
  5960  0A20  09A3               	incf	(___fltol@f1)^080h,f
  5961  0A21  0AA0               	skipnz
  5962  0A22  1903               	incf	(___fltol@f1+1)^080h,f
  5963  0A23  0AA1               	skipnz
  5964  0A24  1903               	incf	(___fltol@f1+2)^080h,f
  5965  0A25  0AA2               	skipnz
  5966  0A26  1903               	incf	(___fltol@f1+3)^080h,f
  5967  0A27  0AA3               	
  5968                           l519:	
  5969  0A28                     	line	69
  5970                           	line	70
  5971                           	
  5972                           l509:	
  5973  0A28                     	return
  5974  0A28  0008               	opt stack 0
  5975                           GLOBAL	__end_of___fltol
  5976                           	__end_of___fltol:
  5977  0A29                     	signat	___fltol,4220
  5978                           	global	___flmul
  5979                           
  5980 ;; *************** function ___flmul *****************
  5981 ;; Defined at:
  5982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  b               4   53[BANK0 ] long 
  5985 ;;  a               4   57[BANK0 ] long 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  prod            4   73[BANK0 ] struct .
  5988 ;;  grs             4   68[BANK0 ] unsigned long 
  5989 ;;  temp            2   77[BANK0 ] struct .
  5990 ;;  bexp            1   72[BANK0 ] unsigned char 
  5991 ;;  aexp            1   67[BANK0 ] unsigned char 
  5992 ;;  sign            1   66[BANK0 ] unsigned char 
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  4   53[BANK0 ] unsigned char 
  5995 ;; Registers used:
  5996 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6002 ;;      Params:         0       8       0       0       0
  6003 ;;      Locals:         0      13       0       0       0
  6004 ;;      Temps:          0       5       0       0       0
  6005 ;;      Totals:         0      26       0       0       0
  6006 ;;Total ram usage:       26 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    2
  6009 ;; This function calls:
  6010 ;;		__Umul8_16
  6011 ;; This function is called by:
  6012 ;;		_PWM1_Duty
  6013 ;;		_PWM2_Duty
  6014 ;;		_PWM1_procenat
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           psect	text13,local,class=CODE,delta=2,merge=1,group=1
  6018                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6019                           	line	8
  6020                           global __ptext13
  6021                           __ptext13:	;psect for function ___flmul
  6022  044A                     psect	text13
  6023                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6024                           	line	8
  6025                           	global	__size_of___flmul
  6026                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  6027  0375                     	
  6028                           ___flmul:	
  6029  044A                     ;incstack = 0
  6030                           	opt	stack 4
  6031                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6032                           	line	17
  6033                           	
  6034                           l2892:	
  6035  044A                     	bcf	status, 5	;RP0=0, select bank0
  6036  044A  1283               	bcf	status, 6	;RP1=0, select bank0
  6037  044B  1303               	movf	0+(___flmul@b)+03h,w
  6038  044C  0858               	andlw	080h
  6039  044D  3980               	movwf	(??___flmul+0)+0
  6040  044E  00DD               	movf	(??___flmul+0)+0,w
  6041  044F  085D               	movwf	(___flmul@sign)
  6042  0450  00E2               	line	18
  6043                           	
  6044                           l2894:	
  6045  0451                     	movf	0+(___flmul@b)+03h,w
  6046  0451  0858               	movwf	(??___flmul+0)+0
  6047  0452  00DD               	addwf	(??___flmul+0)+0,w
  6048  0453  075D               	movwf	(??___flmul+1)+0
  6049  0454  00DE               	movf	(??___flmul+1)+0,w
  6050  0455  085E               	movwf	(___flmul@bexp)
  6051  0456  00E8               	line	19
  6052                           	
  6053                           l2896:	
  6054  0457                     	btfss	0+(___flmul@b)+02h,(7)&7
  6055  0457  1FD7               	goto	u4151
  6056  0458  2C5A               	goto	u4150
  6057  0459  2C5B               u4151:
  6058  045A                     	goto	l2900
  6059  045A  2C5D               u4150:
  6060  045B                     	line	20
  6061                           	
  6062                           l2898:	
  6063  045B                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  6064  045B  1468               	goto	l2900
  6065  045C  2C5D               	line	21
  6066                           	
  6067                           l701:	
  6068  045D                     	line	24
  6069                           	
  6070                           l2900:	
  6071  045D                     	movf	((___flmul@bexp)),w
  6072  045D  0868               	btfsc	status,2
  6073  045E  1903               	goto	u4161
  6074  045F  2C61               	goto	u4160
  6075  0460  2C62               u4161:
  6076  0461                     	goto	l2908
  6077  0461  2C72               u4160:
  6078  0462                     	line	26
  6079                           	
  6080                           l2902:	
  6081  0462                     		incf	((___flmul@bexp)),w
  6082  0462  0A68               	btfss	status,2
  6083  0463  1D03               	goto	u4171
  6084  0464  2C66               	goto	u4170
  6085  0465  2C67               u4171:
  6086  0466                     	goto	l2906
  6087  0466  2C70               u4170:
  6088  0467                     	line	28
  6089                           	
  6090                           l2904:	
  6091  0467                     	movlw	0x0
  6092  0467  3000               	movwf	(___flmul@b+3)
  6093  0468  00D8               	movlw	0x0
  6094  0469  3000               	movwf	(___flmul@b+2)
  6095  046A  00D7               	movlw	0x0
  6096  046B  3000               	movwf	(___flmul@b+1)
  6097  046C  00D6               	movlw	0x0
  6098  046D  3000               	movwf	(___flmul@b)
  6099  046E  00D5               
  6100                           	goto	l2906
  6101  046F  2C70               	line	29
  6102                           	
  6103                           l703:	
  6104  0470                     	line	31
  6105                           	
  6106                           l2906:	
  6107  0470                     	bsf	(___flmul@b)+(23/8),(23)&7
  6108  0470  17D7               	line	33
  6109                           	goto	l2910
  6110  0471  2C7B               	line	34
  6111                           	
  6112                           l702:	
  6113  0472                     	line	36
  6114                           	
  6115                           l2908:	
  6116  0472                     	movlw	0x0
  6117  0472  3000               	movwf	(___flmul@b+3)
  6118  0473  00D8               	movlw	0x0
  6119  0474  3000               	movwf	(___flmul@b+2)
  6120  0475  00D7               	movlw	0x0
  6121  0476  3000               	movwf	(___flmul@b+1)
  6122  0477  00D6               	movlw	0x0
  6123  0478  3000               	movwf	(___flmul@b)
  6124  0479  00D5               
  6125                           	goto	l2910
  6126  047A  2C7B               	line	37
  6127                           	
  6128                           l704:	
  6129  047B                     	line	39
  6130                           	
  6131                           l2910:	
  6132  047B                     	movf	0+(___flmul@a)+03h,w
  6133  047B  085C               	andlw	080h
  6134  047C  3980               	movwf	(??___flmul+0)+0
  6135  047D  00DD               	movf	(??___flmul+0)+0,w
  6136  047E  085D               	xorwf	(___flmul@sign),f
  6137  047F  06E2               	line	40
  6138                           	
  6139                           l2912:	
  6140  0480                     	movf	0+(___flmul@a)+03h,w
  6141  0480  085C               	movwf	(??___flmul+0)+0
  6142  0481  00DD               	addwf	(??___flmul+0)+0,w
  6143  0482  075D               	movwf	(??___flmul+1)+0
  6144  0483  00DE               	movf	(??___flmul+1)+0,w
  6145  0484  085E               	movwf	(___flmul@aexp)
  6146  0485  00E3               	line	41
  6147                           	
  6148                           l2914:	
  6149  0486                     	btfss	0+(___flmul@a)+02h,(7)&7
  6150  0486  1FDB               	goto	u4181
  6151  0487  2C89               	goto	u4180
  6152  0488  2C8A               u4181:
  6153  0489                     	goto	l2918
  6154  0489  2C8C               u4180:
  6155  048A                     	line	42
  6156                           	
  6157                           l2916:	
  6158  048A                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  6159  048A  1463               	goto	l2918
  6160  048B  2C8C               	line	43
  6161                           	
  6162                           l705:	
  6163  048C                     	line	45
  6164                           	
  6165                           l2918:	
  6166  048C                     	movf	((___flmul@aexp)),w
  6167  048C  0863               	btfsc	status,2
  6168  048D  1903               	goto	u4191
  6169  048E  2C90               	goto	u4190
  6170  048F  2C91               u4191:
  6171  0490                     	goto	l2926
  6172  0490  2CA1               u4190:
  6173  0491                     	line	48
  6174                           	
  6175                           l2920:	
  6176  0491                     		incf	((___flmul@aexp)),w
  6177  0491  0A63               	btfss	status,2
  6178  0492  1D03               	goto	u4201
  6179  0493  2C95               	goto	u4200
  6180  0494  2C96               u4201:
  6181  0495                     	goto	l2924
  6182  0495  2C9F               u4200:
  6183  0496                     	line	50
  6184                           	
  6185                           l2922:	
  6186  0496                     	movlw	0x0
  6187  0496  3000               	movwf	(___flmul@a+3)
  6188  0497  00DC               	movlw	0x0
  6189  0498  3000               	movwf	(___flmul@a+2)
  6190  0499  00DB               	movlw	0x0
  6191  049A  3000               	movwf	(___flmul@a+1)
  6192  049B  00DA               	movlw	0x0
  6193  049C  3000               	movwf	(___flmul@a)
  6194  049D  00D9               
  6195                           	goto	l2924
  6196  049E  2C9F               	line	51
  6197                           	
  6198                           l707:	
  6199  049F                     	line	53
  6200                           	
  6201                           l2924:	
  6202  049F                     	bsf	(___flmul@a)+(23/8),(23)&7
  6203  049F  17DB               	line	54
  6204                           	goto	l2928
  6205  04A0  2CAA               	line	55
  6206                           	
  6207                           l706:	
  6208  04A1                     	line	57
  6209                           	
  6210                           l2926:	
  6211  04A1                     	movlw	0x0
  6212  04A1  3000               	movwf	(___flmul@a+3)
  6213  04A2  00DC               	movlw	0x0
  6214  04A3  3000               	movwf	(___flmul@a+2)
  6215  04A4  00DB               	movlw	0x0
  6216  04A5  3000               	movwf	(___flmul@a+1)
  6217  04A6  00DA               	movlw	0x0
  6218  04A7  3000               	movwf	(___flmul@a)
  6219  04A8  00D9               
  6220                           	goto	l2928
  6221  04A9  2CAA               	line	58
  6222                           	
  6223                           l708:	
  6224  04AA                     	line	65
  6225                           	
  6226                           l2928:	
  6227  04AA                     	movf	((___flmul@aexp)),w
  6228  04AA  0863               	btfsc	status,2
  6229  04AB  1903               	goto	u4211
  6230  04AC  2CAE               	goto	u4210
  6231  04AD  2CAF               u4211:
  6232  04AE                     	goto	l2932
  6233  04AE  2CB5               u4210:
  6234  04AF                     	
  6235                           l2930:	
  6236  04AF                     	movf	((___flmul@bexp)),w
  6237  04AF  0868               	btfss	status,2
  6238  04B0  1D03               	goto	u4221
  6239  04B1  2CB3               	goto	u4220
  6240  04B2  2CB4               u4221:
  6241  04B3                     	goto	l2936
  6242  04B3  2CBF               u4220:
  6243  04B4                     	goto	l2932
  6244  04B4  2CB5               	
  6245                           l711:	
  6246  04B5                     	line	66
  6247                           	
  6248                           l2932:	
  6249  04B5                     	movlw	0x0
  6250  04B5  3000               	movwf	(?___flmul+3)
  6251  04B6  00D8               	movlw	0x0
  6252  04B7  3000               	movwf	(?___flmul+2)
  6253  04B8  00D7               	movlw	0x0
  6254  04B9  3000               	movwf	(?___flmul+1)
  6255  04BA  00D6               	movlw	0x0
  6256  04BB  3000               	movwf	(?___flmul)
  6257  04BC  00D5               
  6258                           	goto	l712
  6259  04BD  2FBE               	
  6260                           l2934:	
  6261  04BE                     	goto	l712
  6262  04BE  2FBE               	line	67
  6263                           	
  6264                           l709:	
  6265  04BF                     	line	119
  6266                           	
  6267                           l2936:	
  6268  04BF                     	movf	(___flmul@b),w
  6269  04BF  0855               	movwf	(??___flmul+0)+0
  6270  04C0  00DD               	movf	(??___flmul+0)+0,w
  6271  04C1  085D               	movwf	(__Umul8_16@multiplicand)
  6272  04C2  00F2               	movf	0+(___flmul@a)+02h,w
  6273  04C3  085B               	fcall	__Umul8_16
  6274  04C4  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6275  04C9  0873               	bcf	status, 5	;RP0=0, select bank0
  6276  04CA  1283               	bcf	status, 6	;RP1=0, select bank0
  6277  04CB  1303               	movwf	(___flmul@temp+1)
  6278  04CC  00EE               	movf	(0+(?__Umul8_16)),w
  6279  04CD  0872               	movwf	(___flmul@temp)
  6280  04CE  00ED               	line	120
  6281                           	
  6282                           l2938:	
  6283  04CF                     	movf	(___flmul@temp),w
  6284  04CF  086D               	movwf	(??___flmul+0)+0
  6285  04D0  00DD               	clrf	(??___flmul+0)+0+1
  6286  04D1  01DE               	clrf	(??___flmul+0)+0+2
  6287  04D2  01DF               	clrf	(??___flmul+0)+0+3
  6288  04D3  01E0               	movf	3+(??___flmul+0)+0,w
  6289  04D4  0860               	movwf	(___flmul@grs+3)
  6290  04D5  00E7               	movf	2+(??___flmul+0)+0,w
  6291  04D6  085F               	movwf	(___flmul@grs+2)
  6292  04D7  00E6               	movf	1+(??___flmul+0)+0,w
  6293  04D8  085E               	movwf	(___flmul@grs+1)
  6294  04D9  00E5               	movf	0+(??___flmul+0)+0,w
  6295  04DA  085D               	movwf	(___flmul@grs)
  6296  04DB  00E4               
  6297                           	line	121
  6298                           	
  6299                           l2940:	
  6300  04DC                     	movf	0+(___flmul@temp)+01h,w
  6301  04DC  086E               	movwf	(??___flmul+0)+0
  6302  04DD  00DD               	clrf	(??___flmul+0)+0+1
  6303  04DE  01DE               	clrf	(??___flmul+0)+0+2
  6304  04DF  01DF               	clrf	(??___flmul+0)+0+3
  6305  04E0  01E0               	movf	3+(??___flmul+0)+0,w
  6306  04E1  0860               	movwf	(___flmul@prod+3)
  6307  04E2  00EC               	movf	2+(??___flmul+0)+0,w
  6308  04E3  085F               	movwf	(___flmul@prod+2)
  6309  04E4  00EB               	movf	1+(??___flmul+0)+0,w
  6310  04E5  085E               	movwf	(___flmul@prod+1)
  6311  04E6  00EA               	movf	0+(??___flmul+0)+0,w
  6312  04E7  085D               	movwf	(___flmul@prod)
  6313  04E8  00E9               
  6314                           	line	122
  6315                           	movf	0+(___flmul@b)+01h,w
  6316  04E9  0856               	movwf	(??___flmul+0)+0
  6317  04EA  00DD               	movf	(??___flmul+0)+0,w
  6318  04EB  085D               	movwf	(__Umul8_16@multiplicand)
  6319  04EC  00F2               	movf	0+(___flmul@a)+01h,w
  6320  04ED  085A               	fcall	__Umul8_16
  6321  04EE  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6322  04F3  0873               	bcf	status, 5	;RP0=0, select bank0
  6323  04F4  1283               	bcf	status, 6	;RP1=0, select bank0
  6324  04F5  1303               	movwf	(___flmul@temp+1)
  6325  04F6  00EE               	movf	(0+(?__Umul8_16)),w
  6326  04F7  0872               	movwf	(___flmul@temp)
  6327  04F8  00ED               	line	123
  6328                           	
  6329                           l2942:	
  6330  04F9                     	movf	(___flmul@temp),w
  6331  04F9  086D               	movwf	(??___flmul+0)+0
  6332  04FA  00DD               	clrf	(??___flmul+0)+0+1
  6333  04FB  01DE               	clrf	(??___flmul+0)+0+2
  6334  04FC  01DF               	clrf	(??___flmul+0)+0+3
  6335  04FD  01E0               	movf	0+(??___flmul+0)+0,w
  6336  04FE  085D               	addwf	(___flmul@grs),f
  6337  04FF  07E4               	movf	1+(??___flmul+0)+0,w
  6338  0500  085E               	clrz
  6339  0501  1103               	skipnc
  6340  0502  1803               	addlw	1
  6341  0503  3E01               	skipnz
  6342  0504  1903               	goto	u4231
  6343  0505  2D07               	addwf	(___flmul@grs+1),f
  6344  0506  07E5               u4231:
  6345  0507                     	movf	2+(??___flmul+0)+0,w
  6346  0507  085F               	clrz
  6347  0508  1103               	skipnc
  6348  0509  1803               	addlw	1
  6349  050A  3E01               	skipnz
  6350  050B  1903               	goto	u4232
  6351  050C  2D0E               	addwf	(___flmul@grs+2),f
  6352  050D  07E6               u4232:
  6353  050E                     	movf	3+(??___flmul+0)+0,w
  6354  050E  0860               	clrz
  6355  050F  1103               	skipnc
  6356  0510  1803               	addlw	1
  6357  0511  3E01               	skipnz
  6358  0512  1903               	goto	u4233
  6359  0513  2D15               	addwf	(___flmul@grs+3),f
  6360  0514  07E7               u4233:
  6361  0515                     
  6362                           	line	124
  6363                           	
  6364                           l2944:	
  6365  0515                     	movf	0+(___flmul@temp)+01h,w
  6366  0515  086E               	movwf	(??___flmul+0)+0
  6367  0516  00DD               	clrf	(??___flmul+0)+0+1
  6368  0517  01DE               	clrf	(??___flmul+0)+0+2
  6369  0518  01DF               	clrf	(??___flmul+0)+0+3
  6370  0519  01E0               	movf	0+(??___flmul+0)+0,w
  6371  051A  085D               	addwf	(___flmul@prod),f
  6372  051B  07E9               	movf	1+(??___flmul+0)+0,w
  6373  051C  085E               	clrz
  6374  051D  1103               	skipnc
  6375  051E  1803               	addlw	1
  6376  051F  3E01               	skipnz
  6377  0520  1903               	goto	u4241
  6378  0521  2D23               	addwf	(___flmul@prod+1),f
  6379  0522  07EA               u4241:
  6380  0523                     	movf	2+(??___flmul+0)+0,w
  6381  0523  085F               	clrz
  6382  0524  1103               	skipnc
  6383  0525  1803               	addlw	1
  6384  0526  3E01               	skipnz
  6385  0527  1903               	goto	u4242
  6386  0528  2D2A               	addwf	(___flmul@prod+2),f
  6387  0529  07EB               u4242:
  6388  052A                     	movf	3+(??___flmul+0)+0,w
  6389  052A  0860               	clrz
  6390  052B  1103               	skipnc
  6391  052C  1803               	addlw	1
  6392  052D  3E01               	skipnz
  6393  052E  1903               	goto	u4243
  6394  052F  2D31               	addwf	(___flmul@prod+3),f
  6395  0530  07EC               u4243:
  6396  0531                     
  6397                           	line	125
  6398                           	movf	0+(___flmul@b)+02h,w
  6399  0531  0857               	movwf	(??___flmul+0)+0
  6400  0532  00DD               	movf	(??___flmul+0)+0,w
  6401  0533  085D               	movwf	(__Umul8_16@multiplicand)
  6402  0534  00F2               	movf	(___flmul@a),w
  6403  0535  0859               	fcall	__Umul8_16
  6404  0536  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6405  053B  0873               	bcf	status, 5	;RP0=0, select bank0
  6406  053C  1283               	bcf	status, 6	;RP1=0, select bank0
  6407  053D  1303               	movwf	(___flmul@temp+1)
  6408  053E  00EE               	movf	(0+(?__Umul8_16)),w
  6409  053F  0872               	movwf	(___flmul@temp)
  6410  0540  00ED               	line	126
  6411                           	
  6412                           l2946:	
  6413  0541                     	movf	(___flmul@temp),w
  6414  0541  086D               	movwf	(??___flmul+0)+0
  6415  0542  00DD               	clrf	(??___flmul+0)+0+1
  6416  0543  01DE               	clrf	(??___flmul+0)+0+2
  6417  0544  01DF               	clrf	(??___flmul+0)+0+3
  6418  0545  01E0               	movf	0+(??___flmul+0)+0,w
  6419  0546  085D               	addwf	(___flmul@grs),f
  6420  0547  07E4               	movf	1+(??___flmul+0)+0,w
  6421  0548  085E               	clrz
  6422  0549  1103               	skipnc
  6423  054A  1803               	addlw	1
  6424  054B  3E01               	skipnz
  6425  054C  1903               	goto	u4251
  6426  054D  2D4F               	addwf	(___flmul@grs+1),f
  6427  054E  07E5               u4251:
  6428  054F                     	movf	2+(??___flmul+0)+0,w
  6429  054F  085F               	clrz
  6430  0550  1103               	skipnc
  6431  0551  1803               	addlw	1
  6432  0552  3E01               	skipnz
  6433  0553  1903               	goto	u4252
  6434  0554  2D56               	addwf	(___flmul@grs+2),f
  6435  0555  07E6               u4252:
  6436  0556                     	movf	3+(??___flmul+0)+0,w
  6437  0556  0860               	clrz
  6438  0557  1103               	skipnc
  6439  0558  1803               	addlw	1
  6440  0559  3E01               	skipnz
  6441  055A  1903               	goto	u4253
  6442  055B  2D5D               	addwf	(___flmul@grs+3),f
  6443  055C  07E7               u4253:
  6444  055D                     
  6445                           	line	127
  6446                           	
  6447                           l2948:	
  6448  055D                     	movf	0+(___flmul@temp)+01h,w
  6449  055D  086E               	movwf	(??___flmul+0)+0
  6450  055E  00DD               	clrf	(??___flmul+0)+0+1
  6451  055F  01DE               	clrf	(??___flmul+0)+0+2
  6452  0560  01DF               	clrf	(??___flmul+0)+0+3
  6453  0561  01E0               	movf	0+(??___flmul+0)+0,w
  6454  0562  085D               	addwf	(___flmul@prod),f
  6455  0563  07E9               	movf	1+(??___flmul+0)+0,w
  6456  0564  085E               	clrz
  6457  0565  1103               	skipnc
  6458  0566  1803               	addlw	1
  6459  0567  3E01               	skipnz
  6460  0568  1903               	goto	u4261
  6461  0569  2D6B               	addwf	(___flmul@prod+1),f
  6462  056A  07EA               u4261:
  6463  056B                     	movf	2+(??___flmul+0)+0,w
  6464  056B  085F               	clrz
  6465  056C  1103               	skipnc
  6466  056D  1803               	addlw	1
  6467  056E  3E01               	skipnz
  6468  056F  1903               	goto	u4262
  6469  0570  2D72               	addwf	(___flmul@prod+2),f
  6470  0571  07EB               u4262:
  6471  0572                     	movf	3+(??___flmul+0)+0,w
  6472  0572  0860               	clrz
  6473  0573  1103               	skipnc
  6474  0574  1803               	addlw	1
  6475  0575  3E01               	skipnz
  6476  0576  1903               	goto	u4263
  6477  0577  2D79               	addwf	(___flmul@prod+3),f
  6478  0578  07EC               u4263:
  6479  0579                     
  6480                           	line	128
  6481                           	
  6482                           l2950:	
  6483  0579                     	movlw	08h
  6484  0579  3008               	movwf	(??___flmul+0)+0
  6485  057A  00DD               u4275:
  6486  057B                     	clrc
  6487  057B  1003               	rlf	(___flmul@grs),f
  6488  057C  0DE4               	rlf	(___flmul@grs+1),f
  6489  057D  0DE5               	rlf	(___flmul@grs+2),f
  6490  057E  0DE6               	rlf	(___flmul@grs+3),f
  6491  057F  0DE7               	decfsz	(??___flmul+0)+0
  6492  0580  0BDD               	goto	u4275
  6493  0581  2D7B               	line	129
  6494                           	
  6495                           l2952:	
  6496  0582                     	movf	0+(___flmul@b)+01h,w
  6497  0582  0856               	movwf	(??___flmul+0)+0
  6498  0583  00DD               	movf	(??___flmul+0)+0,w
  6499  0584  085D               	movwf	(__Umul8_16@multiplicand)
  6500  0585  00F2               	movf	(___flmul@a),w
  6501  0586  0859               	fcall	__Umul8_16
  6502  0587  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6503  058C  0873               	bcf	status, 5	;RP0=0, select bank0
  6504  058D  1283               	bcf	status, 6	;RP1=0, select bank0
  6505  058E  1303               	movwf	(___flmul@temp+1)
  6506  058F  00EE               	movf	(0+(?__Umul8_16)),w
  6507  0590  0872               	movwf	(___flmul@temp)
  6508  0591  00ED               	line	130
  6509                           	
  6510                           l2954:	
  6511  0592                     	movf	(___flmul@temp),w
  6512  0592  086D               	movwf	((??___flmul+0)+0)
  6513  0593  00DD               	movf	(___flmul@temp+1),w
  6514  0594  086E               	movwf	((??___flmul+0)+0+1)
  6515  0595  00DE               	clrf	((??___flmul+0)+0+2)
  6516  0596  01DF               	clrf	((??___flmul+0)+0+3)
  6517  0597  01E0               	movf	0+(??___flmul+0)+0,w
  6518  0598  085D               	addwf	(___flmul@grs),f
  6519  0599  07E4               	movf	1+(??___flmul+0)+0,w
  6520  059A  085E               	clrz
  6521  059B  1103               	skipnc
  6522  059C  1803               	addlw	1
  6523  059D  3E01               	skipnz
  6524  059E  1903               	goto	u4281
  6525  059F  2DA1               	addwf	(___flmul@grs+1),f
  6526  05A0  07E5               u4281:
  6527  05A1                     	movf	2+(??___flmul+0)+0,w
  6528  05A1  085F               	clrz
  6529  05A2  1103               	skipnc
  6530  05A3  1803               	addlw	1
  6531  05A4  3E01               	skipnz
  6532  05A5  1903               	goto	u4282
  6533  05A6  2DA8               	addwf	(___flmul@grs+2),f
  6534  05A7  07E6               u4282:
  6535  05A8                     	movf	3+(??___flmul+0)+0,w
  6536  05A8  0860               	clrz
  6537  05A9  1103               	skipnc
  6538  05AA  1803               	addlw	1
  6539  05AB  3E01               	skipnz
  6540  05AC  1903               	goto	u4283
  6541  05AD  2DAF               	addwf	(___flmul@grs+3),f
  6542  05AE  07E7               u4283:
  6543  05AF                     
  6544                           	line	131
  6545                           	
  6546                           l2956:	
  6547  05AF                     	movf	(___flmul@b),w
  6548  05AF  0855               	movwf	(??___flmul+0)+0
  6549  05B0  00DD               	movf	(??___flmul+0)+0,w
  6550  05B1  085D               	movwf	(__Umul8_16@multiplicand)
  6551  05B2  00F2               	movf	0+(___flmul@a)+01h,w
  6552  05B3  085A               	fcall	__Umul8_16
  6553  05B4  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6554  05B9  0873               	bcf	status, 5	;RP0=0, select bank0
  6555  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6556  05BB  1303               	movwf	(___flmul@temp+1)
  6557  05BC  00EE               	movf	(0+(?__Umul8_16)),w
  6558  05BD  0872               	movwf	(___flmul@temp)
  6559  05BE  00ED               	line	132
  6560                           	
  6561                           l2958:	
  6562  05BF                     	movf	(___flmul@temp),w
  6563  05BF  086D               	movwf	((??___flmul+0)+0)
  6564  05C0  00DD               	movf	(___flmul@temp+1),w
  6565  05C1  086E               	movwf	((??___flmul+0)+0+1)
  6566  05C2  00DE               	clrf	((??___flmul+0)+0+2)
  6567  05C3  01DF               	clrf	((??___flmul+0)+0+3)
  6568  05C4  01E0               	movf	0+(??___flmul+0)+0,w
  6569  05C5  085D               	addwf	(___flmul@grs),f
  6570  05C6  07E4               	movf	1+(??___flmul+0)+0,w
  6571  05C7  085E               	clrz
  6572  05C8  1103               	skipnc
  6573  05C9  1803               	addlw	1
  6574  05CA  3E01               	skipnz
  6575  05CB  1903               	goto	u4291
  6576  05CC  2DCE               	addwf	(___flmul@grs+1),f
  6577  05CD  07E5               u4291:
  6578  05CE                     	movf	2+(??___flmul+0)+0,w
  6579  05CE  085F               	clrz
  6580  05CF  1103               	skipnc
  6581  05D0  1803               	addlw	1
  6582  05D1  3E01               	skipnz
  6583  05D2  1903               	goto	u4292
  6584  05D3  2DD5               	addwf	(___flmul@grs+2),f
  6585  05D4  07E6               u4292:
  6586  05D5                     	movf	3+(??___flmul+0)+0,w
  6587  05D5  0860               	clrz
  6588  05D6  1103               	skipnc
  6589  05D7  1803               	addlw	1
  6590  05D8  3E01               	skipnz
  6591  05D9  1903               	goto	u4293
  6592  05DA  2DDC               	addwf	(___flmul@grs+3),f
  6593  05DB  07E7               u4293:
  6594  05DC                     
  6595                           	line	133
  6596                           	
  6597                           l2960:	
  6598  05DC                     	movlw	08h
  6599  05DC  3008               	movwf	(??___flmul+0)+0
  6600  05DD  00DD               u4305:
  6601  05DE                     	clrc
  6602  05DE  1003               	rlf	(___flmul@grs),f
  6603  05DF  0DE4               	rlf	(___flmul@grs+1),f
  6604  05E0  0DE5               	rlf	(___flmul@grs+2),f
  6605  05E1  0DE6               	rlf	(___flmul@grs+3),f
  6606  05E2  0DE7               	decfsz	(??___flmul+0)+0
  6607  05E3  0BDD               	goto	u4305
  6608  05E4  2DDE               	line	134
  6609                           	movf	(___flmul@b),w
  6610  05E5  0855               	movwf	(??___flmul+0)+0
  6611  05E6  00DD               	movf	(??___flmul+0)+0,w
  6612  05E7  085D               	movwf	(__Umul8_16@multiplicand)
  6613  05E8  00F2               	movf	(___flmul@a),w
  6614  05E9  0859               	fcall	__Umul8_16
  6615  05EA  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6616  05EF  0873               	bcf	status, 5	;RP0=0, select bank0
  6617  05F0  1283               	bcf	status, 6	;RP1=0, select bank0
  6618  05F1  1303               	movwf	(___flmul@temp+1)
  6619  05F2  00EE               	movf	(0+(?__Umul8_16)),w
  6620  05F3  0872               	movwf	(___flmul@temp)
  6621  05F4  00ED               	line	135
  6622                           	
  6623                           l2962:	
  6624  05F5                     	movf	(___flmul@temp),w
  6625  05F5  086D               	movwf	((??___flmul+0)+0)
  6626  05F6  00DD               	movf	(___flmul@temp+1),w
  6627  05F7  086E               	movwf	((??___flmul+0)+0+1)
  6628  05F8  00DE               	clrf	((??___flmul+0)+0+2)
  6629  05F9  01DF               	clrf	((??___flmul+0)+0+3)
  6630  05FA  01E0               	movf	0+(??___flmul+0)+0,w
  6631  05FB  085D               	addwf	(___flmul@grs),f
  6632  05FC  07E4               	movf	1+(??___flmul+0)+0,w
  6633  05FD  085E               	clrz
  6634  05FE  1103               	skipnc
  6635  05FF  1803               	addlw	1
  6636  0600  3E01               	skipnz
  6637  0601  1903               	goto	u4311
  6638  0602  2E04               	addwf	(___flmul@grs+1),f
  6639  0603  07E5               u4311:
  6640  0604                     	movf	2+(??___flmul+0)+0,w
  6641  0604  085F               	clrz
  6642  0605  1103               	skipnc
  6643  0606  1803               	addlw	1
  6644  0607  3E01               	skipnz
  6645  0608  1903               	goto	u4312
  6646  0609  2E0B               	addwf	(___flmul@grs+2),f
  6647  060A  07E6               u4312:
  6648  060B                     	movf	3+(??___flmul+0)+0,w
  6649  060B  0860               	clrz
  6650  060C  1103               	skipnc
  6651  060D  1803               	addlw	1
  6652  060E  3E01               	skipnz
  6653  060F  1903               	goto	u4313
  6654  0610  2E12               	addwf	(___flmul@grs+3),f
  6655  0611  07E7               u4313:
  6656  0612                     
  6657                           	line	136
  6658                           	
  6659                           l2964:	
  6660  0612                     	movf	0+(___flmul@b)+01h,w
  6661  0612  0856               	movwf	(??___flmul+0)+0
  6662  0613  00DD               	movf	(??___flmul+0)+0,w
  6663  0614  085D               	movwf	(__Umul8_16@multiplicand)
  6664  0615  00F2               	movf	0+(___flmul@a)+02h,w
  6665  0616  085B               	fcall	__Umul8_16
  6666  0617  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6667  061C  0873               	bcf	status, 5	;RP0=0, select bank0
  6668  061D  1283               	bcf	status, 6	;RP1=0, select bank0
  6669  061E  1303               	movwf	(___flmul@temp+1)
  6670  061F  00EE               	movf	(0+(?__Umul8_16)),w
  6671  0620  0872               	movwf	(___flmul@temp)
  6672  0621  00ED               	line	137
  6673                           	movf	(___flmul@temp),w
  6674  0622  086D               	movwf	((??___flmul+0)+0)
  6675  0623  00DD               	movf	(___flmul@temp+1),w
  6676  0624  086E               	movwf	((??___flmul+0)+0+1)
  6677  0625  00DE               	clrf	((??___flmul+0)+0+2)
  6678  0626  01DF               	clrf	((??___flmul+0)+0+3)
  6679  0627  01E0               	movf	0+(??___flmul+0)+0,w
  6680  0628  085D               	addwf	(___flmul@prod),f
  6681  0629  07E9               	movf	1+(??___flmul+0)+0,w
  6682  062A  085E               	clrz
  6683  062B  1103               	skipnc
  6684  062C  1803               	addlw	1
  6685  062D  3E01               	skipnz
  6686  062E  1903               	goto	u4321
  6687  062F  2E31               	addwf	(___flmul@prod+1),f
  6688  0630  07EA               u4321:
  6689  0631                     	movf	2+(??___flmul+0)+0,w
  6690  0631  085F               	clrz
  6691  0632  1103               	skipnc
  6692  0633  1803               	addlw	1
  6693  0634  3E01               	skipnz
  6694  0635  1903               	goto	u4322
  6695  0636  2E38               	addwf	(___flmul@prod+2),f
  6696  0637  07EB               u4322:
  6697  0638                     	movf	3+(??___flmul+0)+0,w
  6698  0638  0860               	clrz
  6699  0639  1103               	skipnc
  6700  063A  1803               	addlw	1
  6701  063B  3E01               	skipnz
  6702  063C  1903               	goto	u4323
  6703  063D  2E3F               	addwf	(___flmul@prod+3),f
  6704  063E  07EC               u4323:
  6705  063F                     
  6706                           	line	138
  6707                           	
  6708                           l2966:	
  6709  063F                     	movf	0+(___flmul@b)+02h,w
  6710  063F  0857               	movwf	(??___flmul+0)+0
  6711  0640  00DD               	movf	(??___flmul+0)+0,w
  6712  0641  085D               	movwf	(__Umul8_16@multiplicand)
  6713  0642  00F2               	movf	0+(___flmul@a)+01h,w
  6714  0643  085A               	fcall	__Umul8_16
  6715  0644  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6716  0649  0873               	bcf	status, 5	;RP0=0, select bank0
  6717  064A  1283               	bcf	status, 6	;RP1=0, select bank0
  6718  064B  1303               	movwf	(___flmul@temp+1)
  6719  064C  00EE               	movf	(0+(?__Umul8_16)),w
  6720  064D  0872               	movwf	(___flmul@temp)
  6721  064E  00ED               	line	139
  6722                           	
  6723                           l2968:	
  6724  064F                     	movf	(___flmul@temp),w
  6725  064F  086D               	movwf	((??___flmul+0)+0)
  6726  0650  00DD               	movf	(___flmul@temp+1),w
  6727  0651  086E               	movwf	((??___flmul+0)+0+1)
  6728  0652  00DE               	clrf	((??___flmul+0)+0+2)
  6729  0653  01DF               	clrf	((??___flmul+0)+0+3)
  6730  0654  01E0               	movf	0+(??___flmul+0)+0,w
  6731  0655  085D               	addwf	(___flmul@prod),f
  6732  0656  07E9               	movf	1+(??___flmul+0)+0,w
  6733  0657  085E               	clrz
  6734  0658  1103               	skipnc
  6735  0659  1803               	addlw	1
  6736  065A  3E01               	skipnz
  6737  065B  1903               	goto	u4331
  6738  065C  2E5E               	addwf	(___flmul@prod+1),f
  6739  065D  07EA               u4331:
  6740  065E                     	movf	2+(??___flmul+0)+0,w
  6741  065E  085F               	clrz
  6742  065F  1103               	skipnc
  6743  0660  1803               	addlw	1
  6744  0661  3E01               	skipnz
  6745  0662  1903               	goto	u4332
  6746  0663  2E65               	addwf	(___flmul@prod+2),f
  6747  0664  07EB               u4332:
  6748  0665                     	movf	3+(??___flmul+0)+0,w
  6749  0665  0860               	clrz
  6750  0666  1103               	skipnc
  6751  0667  1803               	addlw	1
  6752  0668  3E01               	skipnz
  6753  0669  1903               	goto	u4333
  6754  066A  2E6C               	addwf	(___flmul@prod+3),f
  6755  066B  07EC               u4333:
  6756  066C                     
  6757                           	line	140
  6758                           	movf	0+(___flmul@b)+02h,w
  6759  066C  0857               	movwf	(??___flmul+0)+0
  6760  066D  00DD               	movf	(??___flmul+0)+0,w
  6761  066E  085D               	movwf	(__Umul8_16@multiplicand)
  6762  066F  00F2               	movf	0+(___flmul@a)+02h,w
  6763  0670  085B               	fcall	__Umul8_16
  6764  0671  160A  118A  2613  120A  118A  	movf	(1+(?__Umul8_16)),w
  6765  0676  0873               	bcf	status, 5	;RP0=0, select bank0
  6766  0677  1283               	bcf	status, 6	;RP1=0, select bank0
  6767  0678  1303               	movwf	(___flmul@temp+1)
  6768  0679  00EE               	movf	(0+(?__Umul8_16)),w
  6769  067A  0872               	movwf	(___flmul@temp)
  6770  067B  00ED               	line	141
  6771                           	
  6772                           l2970:	
  6773  067C                     	movf	(___flmul@temp),w
  6774  067C  086D               	movwf	((??___flmul+0)+0)
  6775  067D  00DD               	movf	(___flmul@temp+1),w
  6776  067E  086E               	movwf	((??___flmul+0)+0+1)
  6777  067F  00DE               	clrf	((??___flmul+0)+0+2)
  6778  0680  01DF               	clrf	((??___flmul+0)+0+3)
  6779  0681  01E0               	movlw	08h
  6780  0682  3008               u4345:
  6781  0683                     	clrc
  6782  0683  1003               	rlf	(??___flmul+0)+0,f
  6783  0684  0DDD               	rlf	(??___flmul+0)+1,f
  6784  0685  0DDE               	rlf	(??___flmul+0)+2,f
  6785  0686  0DDF               	rlf	(??___flmul+0)+3,f
  6786  0687  0DE0               u4340:
  6787  0688                     	addlw	-1
  6788  0688  3EFF               	skipz
  6789  0689  1D03               	goto	u4345
  6790  068A  2E83               	movf	0+(??___flmul+0)+0,w
  6791  068B  085D               	addwf	(___flmul@prod),f
  6792  068C  07E9               	movf	1+(??___flmul+0)+0,w
  6793  068D  085E               	clrz
  6794  068E  1103               	skipnc
  6795  068F  1803               	addlw	1
  6796  0690  3E01               	skipnz
  6797  0691  1903               	goto	u4351
  6798  0692  2E94               	addwf	(___flmul@prod+1),f
  6799  0693  07EA               u4351:
  6800  0694                     	movf	2+(??___flmul+0)+0,w
  6801  0694  085F               	clrz
  6802  0695  1103               	skipnc
  6803  0696  1803               	addlw	1
  6804  0697  3E01               	skipnz
  6805  0698  1903               	goto	u4352
  6806  0699  2E9B               	addwf	(___flmul@prod+2),f
  6807  069A  07EB               u4352:
  6808  069B                     	movf	3+(??___flmul+0)+0,w
  6809  069B  0860               	clrz
  6810  069C  1103               	skipnc
  6811  069D  1803               	addlw	1
  6812  069E  3E01               	skipnz
  6813  069F  1903               	goto	u4353
  6814  06A0  2EA2               	addwf	(___flmul@prod+3),f
  6815  06A1  07EC               u4353:
  6816  06A2                     
  6817                           	line	145
  6818                           	
  6819                           l2972:	
  6820  06A2                     	movf	(___flmul@grs),w
  6821  06A2  0864               	movwf	(??___flmul+0)+0
  6822  06A3  00DD               	movf	(___flmul@grs+1),w
  6823  06A4  0865               	movwf	((??___flmul+0)+0+1)
  6824  06A5  00DE               	movf	(___flmul@grs+2),w
  6825  06A6  0866               	movwf	((??___flmul+0)+0+2)
  6826  06A7  00DF               	movf	(___flmul@grs+3),w
  6827  06A8  0867               	movwf	((??___flmul+0)+0+3)
  6828  06A9  00E0               	movlw	018h
  6829  06AA  3018               u4365:
  6830  06AB                     	clrc
  6831  06AB  1003               	rrf	(??___flmul+0)+3,f
  6832  06AC  0CE0               	rrf	(??___flmul+0)+2,f
  6833  06AD  0CDF               	rrf	(??___flmul+0)+1,f
  6834  06AE  0CDE               	rrf	(??___flmul+0)+0,f
  6835  06AF  0CDD               u4360:
  6836  06B0                     	addlw	-1
  6837  06B0  3EFF               	skipz
  6838  06B1  1D03               	goto	u4365
  6839  06B2  2EAB               	movf	0+(??___flmul+0)+0,w
  6840  06B3  085D               	addwf	(___flmul@prod),f
  6841  06B4  07E9               	movf	1+(??___flmul+0)+0,w
  6842  06B5  085E               	clrz
  6843  06B6  1103               	skipnc
  6844  06B7  1803               	addlw	1
  6845  06B8  3E01               	skipnz
  6846  06B9  1903               	goto	u4371
  6847  06BA  2EBC               	addwf	(___flmul@prod+1),f
  6848  06BB  07EA               u4371:
  6849  06BC                     	movf	2+(??___flmul+0)+0,w
  6850  06BC  085F               	clrz
  6851  06BD  1103               	skipnc
  6852  06BE  1803               	addlw	1
  6853  06BF  3E01               	skipnz
  6854  06C0  1903               	goto	u4372
  6855  06C1  2EC3               	addwf	(___flmul@prod+2),f
  6856  06C2  07EB               u4372:
  6857  06C3                     	movf	3+(??___flmul+0)+0,w
  6858  06C3  0860               	clrz
  6859  06C4  1103               	skipnc
  6860  06C5  1803               	addlw	1
  6861  06C6  3E01               	skipnz
  6862  06C7  1903               	goto	u4373
  6863  06C8  2ECA               	addwf	(___flmul@prod+3),f
  6864  06C9  07EC               u4373:
  6865  06CA                     
  6866                           	line	146
  6867                           	
  6868                           l2974:	
  6869  06CA                     	movlw	08h
  6870  06CA  3008               	movwf	(??___flmul+0)+0
  6871  06CB  00DD               u4385:
  6872  06CC                     	clrc
  6873  06CC  1003               	rlf	(___flmul@grs),f
  6874  06CD  0DE4               	rlf	(___flmul@grs+1),f
  6875  06CE  0DE5               	rlf	(___flmul@grs+2),f
  6876  06CF  0DE6               	rlf	(___flmul@grs+3),f
  6877  06D0  0DE7               	decfsz	(??___flmul+0)+0
  6878  06D1  0BDD               	goto	u4385
  6879  06D2  2ECC               	line	149
  6880                           	
  6881                           l2976:	
  6882  06D3                     	movf	(___flmul@bexp),w
  6883  06D3  0868               	addwf	(___flmul@aexp),w
  6884  06D4  0763               	movwf	(??___flmul+0)+0
  6885  06D5  00DD               	clrf	(??___flmul+0)+0+1
  6886  06D6  01DE               	rlf	1+(??___flmul+0)+0,f
  6887  06D7  0DDE               	
  6888                           	movf	0+(??___flmul+0)+0,w
  6889  06D8  085D               	addlw	low(-126)
  6890  06D9  3E82               	movwf	(___flmul@temp)
  6891  06DA  00ED               	movf	1+(??___flmul+0)+0,w
  6892  06DB  085E               	skipnc
  6893  06DC  1803               	addlw	1
  6894  06DD  3E01               	addlw	high(-126)
  6895  06DE  3EFF               	movwf	1+(___flmul@temp)
  6896  06DF  00EE               	line	152
  6897                           	goto	l2988
  6898  06E0  2F00               	
  6899                           l714:	
  6900  06E1                     	line	153
  6901                           	
  6902                           l2978:	
  6903  06E1                     	movlw	01h
  6904  06E1  3001               	movwf	(??___flmul+0)+0
  6905  06E2  00DD               u4395:
  6906  06E3                     	clrc
  6907  06E3  1003               	rlf	(___flmul@prod),f
  6908  06E4  0DE9               	rlf	(___flmul@prod+1),f
  6909  06E5  0DEA               	rlf	(___flmul@prod+2),f
  6910  06E6  0DEB               	rlf	(___flmul@prod+3),f
  6911  06E7  0DEC               	decfsz	(??___flmul+0)+0
  6912  06E8  0BDD               	goto	u4395
  6913  06E9  2EE3               	line	154
  6914                           	
  6915                           l2980:	
  6916  06EA                     	btfss	(___flmul@grs+3),(31)&7
  6917  06EA  1FE7               	goto	u4401
  6918  06EB  2EED               	goto	u4400
  6919  06EC  2EEE               u4401:
  6920  06ED                     	goto	l2984
  6921  06ED  2EF0               u4400:
  6922  06EE                     	line	155
  6923                           	
  6924                           l2982:	
  6925  06EE                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6926  06EE  1469               	goto	l2984
  6927  06EF  2EF0               	line	156
  6928                           	
  6929                           l715:	
  6930  06F0                     	line	157
  6931                           	
  6932                           l2984:	
  6933  06F0                     	movlw	01h
  6934  06F0  3001               	movwf	(??___flmul+0)+0
  6935  06F1  00DD               u4415:
  6936  06F2                     	clrc
  6937  06F2  1003               	rlf	(___flmul@grs),f
  6938  06F3  0DE4               	rlf	(___flmul@grs+1),f
  6939  06F4  0DE5               	rlf	(___flmul@grs+2),f
  6940  06F5  0DE6               	rlf	(___flmul@grs+3),f
  6941  06F6  0DE7               	decfsz	(??___flmul+0)+0
  6942  06F7  0BDD               	goto	u4415
  6943  06F8  2EF2               	line	158
  6944                           	
  6945                           l2986:	
  6946  06F9                     	movlw	0FFh
  6947  06F9  30FF               	addwf	(___flmul@temp),f
  6948  06FA  07ED               	skipnc
  6949  06FB  1803               	incf	(___flmul@temp+1),f
  6950  06FC  0AEE               	movlw	0FFh
  6951  06FD  30FF               	addwf	(___flmul@temp+1),f
  6952  06FE  07EE               	goto	l2988
  6953  06FF  2F00               	line	159
  6954                           	
  6955                           l713:	
  6956  0700                     	line	152
  6957                           	
  6958                           l2988:	
  6959  0700                     	btfss	(___flmul@prod+2),(23)&7
  6960  0700  1FEB               	goto	u4421
  6961  0701  2F03               	goto	u4420
  6962  0702  2F04               u4421:
  6963  0703                     	goto	l2978
  6964  0703  2EE1               u4420:
  6965  0704                     	goto	l2990
  6966  0704  2F05               	
  6967                           l716:	
  6968  0705                     	line	163
  6969                           	
  6970                           l2990:	
  6971  0705                     	clrf	(___flmul@aexp)
  6972  0705  01E3               	line	164
  6973                           	
  6974                           l2992:	
  6975  0706                     	btfss	(___flmul@grs+3),(31)&7
  6976  0706  1FE7               	goto	u4431
  6977  0707  2F09               	goto	u4430
  6978  0708  2F0A               u4431:
  6979  0709                     	goto	l3000
  6980  0709  2F2A               u4430:
  6981  070A                     	line	165
  6982                           	
  6983                           l2994:	
  6984  070A                     	movlw	0FFh
  6985  070A  30FF               	andwf	(___flmul@grs),w
  6986  070B  0564               	movwf	(??___flmul+0)+0
  6987  070C  00DD               	movlw	0FFh
  6988  070D  30FF               	andwf	(___flmul@grs+1),w
  6989  070E  0565               	movwf	((??___flmul+0)+0+1)
  6990  070F  00DE               	movlw	0FFh
  6991  0710  30FF               	andwf	(___flmul@grs+2),w
  6992  0711  0566               	movwf	((??___flmul+0)+0+2)
  6993  0712  00DF               	movlw	07Fh
  6994  0713  307F               	andwf	(___flmul@grs+3),w
  6995  0714  0567               	movwf	((??___flmul+0)+0+3)
  6996  0715  00E0               	movf	3+(??___flmul+0)+0,w
  6997  0716  0860               	iorwf	2+(??___flmul+0)+0,w
  6998  0717  045F               	iorwf	1+(??___flmul+0)+0,w
  6999  0718  045E               	iorwf	0+(??___flmul+0)+0,w
  7000  0719  045D               	skipnz
  7001  071A  1903               	goto	u4441
  7002  071B  2F1D               	goto	u4440
  7003  071C  2F1E               u4441:
  7004  071D                     	goto	l718
  7005  071D  2F21               u4440:
  7006  071E                     	line	166
  7007                           	
  7008                           l2996:	
  7009  071E                     	clrf	(___flmul@aexp)
  7010  071E  01E3               	incf	(___flmul@aexp),f
  7011  071F  0AE3               	line	167
  7012                           	goto	l3000
  7013  0720  2F2A               	line	168
  7014                           	
  7015                           l718:	
  7016  0721                     	line	169
  7017                           	btfss	(___flmul@prod),(0)&7
  7018  0721  1C69               	goto	u4451
  7019  0722  2F24               	goto	u4450
  7020  0723  2F25               u4451:
  7021  0724                     	goto	l3000
  7022  0724  2F2A               u4450:
  7023  0725                     	line	170
  7024                           	
  7025                           l2998:	
  7026  0725                     	clrf	(___flmul@aexp)
  7027  0725  01E3               	incf	(___flmul@aexp),f
  7028  0726  0AE3               	goto	l3000
  7029  0727  2F2A               	line	171
  7030                           	
  7031                           l720:	
  7032  0728                     	goto	l3000
  7033  0728  2F2A               	line	172
  7034                           	
  7035                           l719:	
  7036  0729                     	goto	l3000
  7037  0729  2F2A               	line	173
  7038                           	
  7039                           l717:	
  7040  072A                     	line	174
  7041                           	
  7042                           l3000:	
  7043  072A                     	movf	((___flmul@aexp)),w
  7044  072A  0863               	btfsc	status,2
  7045  072B  1903               	goto	u4461
  7046  072C  2F2E               	goto	u4460
  7047  072D  2F2F               u4461:
  7048  072E                     	goto	l3010
  7049  072E  2F62               u4460:
  7050  072F                     	line	175
  7051                           	
  7052                           l3002:	
  7053  072F                     	movlw	01h
  7054  072F  3001               	addwf	(___flmul@prod),f
  7055  0730  07E9               	movlw	0
  7056  0731  3000               	skipnc
  7057  0732  1803               movlw 1
  7058  0733  3001               	addwf	(___flmul@prod+1),f
  7059  0734  07EA               	movlw	0
  7060  0735  3000               	skipnc
  7061  0736  1803               movlw 1
  7062  0737  3001               	addwf	(___flmul@prod+2),f
  7063  0738  07EB               	movlw	0
  7064  0739  3000               	skipnc
  7065  073A  1803               movlw 1
  7066  073B  3001               	addwf	(___flmul@prod+3),f
  7067  073C  07EC               	line	176
  7068                           	
  7069                           l3004:	
  7070  073D                     	btfss	(___flmul@prod+3),(24)&7
  7071  073D  1C6C               	goto	u4471
  7072  073E  2F40               	goto	u4470
  7073  073F  2F41               u4471:
  7074  0740                     	goto	l3010
  7075  0740  2F62               u4470:
  7076  0741                     	line	177
  7077                           	
  7078                           l3006:	
  7079  0741                     	movf	(___flmul@prod),w
  7080  0741  0869               	movwf	(??___flmul+0)+0
  7081  0742  00DD               	movf	(___flmul@prod+1),w
  7082  0743  086A               	movwf	((??___flmul+0)+0+1)
  7083  0744  00DE               	movf	(___flmul@prod+2),w
  7084  0745  086B               	movwf	((??___flmul+0)+0+2)
  7085  0746  00DF               	movf	(___flmul@prod+3),w
  7086  0747  086C               	movwf	((??___flmul+0)+0+3)
  7087  0748  00E0               	movlw	01h
  7088  0749  3001               	movwf	(??___flmul+4)+0
  7089  074A  00E1               u4485:
  7090  074B                     	rlf	(??___flmul+0)+3,w
  7091  074B  0D60               	rrf	(??___flmul+0)+3,f
  7092  074C  0CE0               	rrf	(??___flmul+0)+2,f
  7093  074D  0CDF               	rrf	(??___flmul+0)+1,f
  7094  074E  0CDE               	rrf	(??___flmul+0)+0,f
  7095  074F  0CDD               u4480:
  7096  0750                     	decfsz	(??___flmul+4)+0,f
  7097  0750  0BE1               	goto	u4485
  7098  0751  2F4B               	movf	3+(??___flmul+0)+0,w
  7099  0752  0860               	movwf	(___flmul@prod+3)
  7100  0753  00EC               	movf	2+(??___flmul+0)+0,w
  7101  0754  085F               	movwf	(___flmul@prod+2)
  7102  0755  00EB               	movf	1+(??___flmul+0)+0,w
  7103  0756  085E               	movwf	(___flmul@prod+1)
  7104  0757  00EA               	movf	0+(??___flmul+0)+0,w
  7105  0758  085D               	movwf	(___flmul@prod)
  7106  0759  00E9               
  7107                           	line	178
  7108                           	
  7109                           l3008:	
  7110  075A                     	movlw	01h
  7111  075A  3001               	addwf	(___flmul@temp),f
  7112  075B  07ED               	skipnc
  7113  075C  1803               	incf	(___flmul@temp+1),f
  7114  075D  0AEE               	movlw	0
  7115  075E  3000               	addwf	(___flmul@temp+1),f
  7116  075F  07EE               	goto	l3010
  7117  0760  2F62               	line	179
  7118                           	
  7119                           l722:	
  7120  0761                     	goto	l3010
  7121  0761  2F62               	line	180
  7122                           	
  7123                           l721:	
  7124  0762                     	line	183
  7125                           	
  7126                           l3010:	
  7127  0762                     	movf	(___flmul@temp+1),w
  7128  0762  086E               	xorlw	80h
  7129  0763  3A80               	movwf	btemp+1
  7130  0764  00FF               	movlw	(0)^80h
  7131  0765  3080               	subwf	btemp+1,w
  7132  0766  027F               	skipz
  7133  0767  1D03               	goto	u4495
  7134  0768  2F6B               	movlw	0FFh
  7135  0769  30FF               	subwf	(___flmul@temp),w
  7136  076A  026D               u4495:
  7137  076B                     
  7138                           	skipc
  7139  076B  1C03               	goto	u4491
  7140  076C  2F6E               	goto	u4490
  7141  076D  2F6F               u4491:
  7142  076E                     	goto	l3014
  7143  076E  2F7A               u4490:
  7144  076F                     	line	184
  7145                           	
  7146                           l3012:	
  7147  076F                     	movlw	07Fh
  7148  076F  307F               	bcf	status, 5	;RP0=0, select bank0
  7149  0770  1283               	bcf	status, 6	;RP1=0, select bank0
  7150  0771  1303               	movwf	(___flmul@prod+3)
  7151  0772  00EC               	movlw	080h
  7152  0773  3080               	movwf	(___flmul@prod+2)
  7153  0774  00EB               	movlw	0
  7154  0775  3000               	movwf	(___flmul@prod+1)
  7155  0776  00EA               	movlw	0
  7156  0777  3000               	movwf	(___flmul@prod)
  7157  0778  00E9               
  7158                           	line	185
  7159                           	goto	l724
  7160  0779  2FB1               	line	187
  7161                           	
  7162                           l723:	
  7163  077A                     	
  7164                           l3014:	
  7165  077A                     	bcf	status, 5	;RP0=0, select bank0
  7166  077A  1283               	bcf	status, 6	;RP1=0, select bank0
  7167  077B  1303               	movf	(___flmul@temp+1),w
  7168  077C  086E               	xorlw	80h
  7169  077D  3A80               	movwf	btemp+1
  7170  077E  00FF               	movlw	(0)^80h
  7171  077F  3080               	subwf	btemp+1,w
  7172  0780  027F               	skipz
  7173  0781  1D03               	goto	u4505
  7174  0782  2F85               	movlw	01h
  7175  0783  3001               	subwf	(___flmul@temp),w
  7176  0784  026D               u4505:
  7177  0785                     
  7178                           	skipnc
  7179  0785  1803               	goto	u4501
  7180  0786  2F88               	goto	u4500
  7181  0787  2F89               u4501:
  7182  0788                     	goto	l3020
  7183  0788  2F95               u4500:
  7184  0789                     	line	188
  7185                           	
  7186                           l3016:	
  7187  0789                     	movlw	high highword(0)
  7188  0789  3000               	bcf	status, 5	;RP0=0, select bank0
  7189  078A  1283               	bcf	status, 6	;RP1=0, select bank0
  7190  078B  1303               	movwf	(___flmul@prod+3)
  7191  078C  00EC               	movlw	low highword(0)
  7192  078D  3000               	movwf	(___flmul@prod+2)
  7193  078E  00EB               	movlw	high(0)
  7194  078F  3000               	movwf	(___flmul@prod+1)
  7195  0790  00EA               	movlw	low(0)
  7196  0791  3000               	movwf	(___flmul@prod)
  7197  0792  00E9               
  7198                           	line	190
  7199                           	
  7200                           l3018:	
  7201  0793                     	clrf	(___flmul@sign)
  7202  0793  01E2               	line	191
  7203                           	goto	l724
  7204  0794  2FB1               	line	192
  7205                           	
  7206                           l725:	
  7207  0795                     	line	194
  7208                           	
  7209                           l3020:	
  7210  0795                     	bcf	status, 5	;RP0=0, select bank0
  7211  0795  1283               	bcf	status, 6	;RP1=0, select bank0
  7212  0796  1303               	movf	(___flmul@temp),w
  7213  0797  086D               	movwf	(??___flmul+0)+0
  7214  0798  00DD               	movf	(??___flmul+0)+0,w
  7215  0799  085D               	movwf	(___flmul@bexp)
  7216  079A  00E8               	line	195
  7217                           	movlw	0FFh
  7218  079B  30FF               	andwf	(___flmul@prod),f
  7219  079C  05E9               	movlw	0FFh
  7220  079D  30FF               	andwf	(___flmul@prod+1),f
  7221  079E  05EA               	movlw	07Fh
  7222  079F  307F               	andwf	(___flmul@prod+2),f
  7223  07A0  05EB               	movlw	0
  7224  07A1  3000               	andwf	(___flmul@prod+3),f
  7225  07A2  05EC               	line	196
  7226                           	
  7227                           l3022:	
  7228  07A3                     	btfss	(___flmul@bexp),(0)&7
  7229  07A3  1C68               	goto	u4511
  7230  07A4  2FA6               	goto	u4510
  7231  07A5  2FA7               u4511:
  7232  07A6                     	goto	l3026
  7233  07A6  2FA9               u4510:
  7234  07A7                     	line	197
  7235                           	
  7236                           l3024:	
  7237  07A7                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  7238  07A7  17EB               	goto	l3026
  7239  07A8  2FA9               	line	198
  7240                           	
  7241                           l727:	
  7242  07A9                     	line	199
  7243                           	
  7244                           l3026:	
  7245  07A9                     	movf	(___flmul@bexp),w
  7246  07A9  0868               	movwf	(??___flmul+0)+0
  7247  07AA  00DD               	clrc
  7248  07AB  1003               	rrf	(??___flmul+0)+0,w
  7249  07AC  0C5D               	movwf	(??___flmul+1)+0
  7250  07AD  00DE               	movf	(??___flmul+1)+0,w
  7251  07AE  085E               	movwf	0+(___flmul@prod)+03h
  7252  07AF  00EC               	goto	l724
  7253  07B0  2FB1               	line	200
  7254                           	
  7255                           l726:	
  7256  07B1                     	
  7257                           l724:	
  7258  07B1                     	line	201
  7259                           	movf	(___flmul@sign),w
  7260  07B1  0862               	movwf	(??___flmul+0)+0
  7261  07B2  00DD               	movf	(??___flmul+0)+0,w
  7262  07B3  085D               	iorwf	0+(___flmul@prod)+03h,f
  7263  07B4  04EC               	line	203
  7264                           	
  7265                           l3028:	
  7266  07B5                     	movf	(___flmul@prod+3),w
  7267  07B5  086C               	movwf	(?___flmul+3)
  7268  07B6  00D8               	movf	(___flmul@prod+2),w
  7269  07B7  086B               	movwf	(?___flmul+2)
  7270  07B8  00D7               	movf	(___flmul@prod+1),w
  7271  07B9  086A               	movwf	(?___flmul+1)
  7272  07BA  00D6               	movf	(___flmul@prod),w
  7273  07BB  0869               	movwf	(?___flmul)
  7274  07BC  00D5               
  7275                           	goto	l712
  7276  07BD  2FBE               	
  7277                           l3030:	
  7278  07BE                     	line	205
  7279                           	
  7280                           l712:	
  7281  07BE                     	return
  7282  07BE  0008               	opt stack 0
  7283                           GLOBAL	__end_of___flmul
  7284                           	__end_of___flmul:
  7285  07BF                     	signat	___flmul,8316
  7286                           	global	__Umul8_16
  7287                           
  7288 ;; *************** function __Umul8_16 *****************
  7289 ;; Defined at:
  7290 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  multiplier      1    wreg     unsigned char 
  7293 ;;  multiplicand    1    2[COMMON] unsigned char 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  multiplier      1    4[BANK0 ] unsigned char 
  7296 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  7297 ;;  product         2    0[BANK0 ] unsigned int 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2    2[COMMON] unsigned int 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7307 ;;      Params:         2       0       0       0       0
  7308 ;;      Locals:         0       5       0       0       0
  7309 ;;      Temps:          2       0       0       0       0
  7310 ;;      Totals:         4       5       0       0       0
  7311 ;;Total ram usage:        9 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    1
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		___flmul
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  7321                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  7322                           	line	4
  7323                           global __ptext14
  7324                           __ptext14:	;psect for function __Umul8_16
  7325  1613                     psect	text14
  7326                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  7327                           	line	4
  7328                           	global	__size_of__Umul8_16
  7329                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  7330  002C                     	
  7331                           __Umul8_16:	
  7332  1613                     ;incstack = 0
  7333                           	opt	stack 4
  7334                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7335                           ;__Umul8_16@multiplier stored from wreg
  7336                           	bcf	status, 5	;RP0=0, select bank0
  7337  1613  1283               	bcf	status, 6	;RP1=0, select bank0
  7338  1614  1303               	movwf	(__Umul8_16@multiplier)
  7339  1615  00A4               	line	5
  7340                           	
  7341                           l2828:	
  7342  1616                     	clrf	(__Umul8_16@product)
  7343  1616  01A0               	clrf	(__Umul8_16@product+1)
  7344  1617  01A1               	line	6
  7345                           	
  7346                           l2830:	
  7347  1618                     	movf	(__Umul8_16@multiplicand),w
  7348  1618  0872               	movwf	(??__Umul8_16+0)+0
  7349  1619  00F4               	clrf	(??__Umul8_16+0)+0+1
  7350  161A  01F5               	movf	0+(??__Umul8_16+0)+0,w
  7351  161B  0874               	movwf	(__Umul8_16@word_mpld)
  7352  161C  00A2               	movf	1+(??__Umul8_16+0)+0,w
  7353  161D  0875               	movwf	(__Umul8_16@word_mpld+1)
  7354  161E  00A3               	goto	l2832
  7355  161F  2E20               	line	50
  7356                           	
  7357                           l749:	
  7358  1620                     	line	51
  7359                           	
  7360                           l2832:	
  7361  1620                     	btfss	(__Umul8_16@multiplier),(0)&7
  7362  1620  1C24               	goto	u3971
  7363  1621  2E23               	goto	u3970
  7364  1622  2E24               u3971:
  7365  1623                     	goto	l750
  7366  1623  2E2A               u3970:
  7367  1624                     	line	52
  7368                           	
  7369                           l2834:	
  7370  1624                     	movf	(__Umul8_16@word_mpld),w
  7371  1624  0822               	addwf	(__Umul8_16@product),f
  7372  1625  07A0               	skipnc
  7373  1626  1803               	incf	(__Umul8_16@product+1),f
  7374  1627  0AA1               	movf	(__Umul8_16@word_mpld+1),w
  7375  1628  0823               	addwf	(__Umul8_16@product+1),f
  7376  1629  07A1               	line	53
  7377                           	
  7378                           l750:	
  7379  162A                     	line	54
  7380                           	movlw	01h
  7381  162A  3001               	
  7382                           u3985:
  7383  162B                     	clrc
  7384  162B  1003               	rlf	(__Umul8_16@word_mpld),f
  7385  162C  0DA2               	rlf	(__Umul8_16@word_mpld+1),f
  7386  162D  0DA3               	addlw	-1
  7387  162E  3EFF               	skipz
  7388  162F  1D03               	goto	u3985
  7389  1630  2E2B               	line	55
  7390                           	clrc
  7391  1631  1003               	rrf	(__Umul8_16@multiplier),f
  7392  1632  0CA4               
  7393                           	line	56
  7394                           	
  7395                           l2836:	
  7396  1633                     	movf	((__Umul8_16@multiplier)),w
  7397  1633  0824               	btfss	status,2
  7398  1634  1D03               	goto	u3991
  7399  1635  2E37               	goto	u3990
  7400  1636  2E38               u3991:
  7401  1637                     	goto	l2832
  7402  1637  2E20               u3990:
  7403  1638                     	goto	l2838
  7404  1638  2E39               	
  7405                           l751:	
  7406  1639                     	line	59
  7407                           	
  7408                           l2838:	
  7409  1639                     	movf	(__Umul8_16@product+1),w
  7410  1639  0821               	movwf	(?__Umul8_16+1)
  7411  163A  00F3               	movf	(__Umul8_16@product),w
  7412  163B  0820               	movwf	(?__Umul8_16)
  7413  163C  00F2               	goto	l752
  7414  163D  2E3E               	
  7415                           l2840:	
  7416  163E                     	line	60
  7417                           	
  7418                           l752:	
  7419  163E                     	return
  7420  163E  0008               	opt stack 0
  7421                           GLOBAL	__end_of__Umul8_16
  7422                           	__end_of__Umul8_16:
  7423  163F                     	signat	__Umul8_16,8314
  7424                           	global	___fldiv
  7425                           
  7426 ;; *************** function ___fldiv *****************
  7427 ;; Defined at:
  7428 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  a               4   27[BANK0 ] unsigned int 
  7431 ;;  b               4   31[BANK0 ] unsigned int 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  grs             4   47[BANK0 ] unsigned long 
  7434 ;;  rem             4   40[BANK0 ] unsigned long 
  7435 ;;  new_exp         2   45[BANK0 ] int 
  7436 ;;  aexp            1   52[BANK0 ] unsigned char 
  7437 ;;  bexp            1   51[BANK0 ] unsigned char 
  7438 ;;  sign            1   44[BANK0 ] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  4   27[BANK0 ] unsigned char 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0, btemp+1
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7448 ;;      Params:         0       8       0       0       0
  7449 ;;      Locals:         0      13       0       0       0
  7450 ;;      Temps:          0       5       0       0       0
  7451 ;;      Totals:         0      26       0       0       0
  7452 ;;Total ram usage:       26 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    1
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_PWM1_Duty
  7459 ;;		_PWM2_Duty
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  7463                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7464                           	line	8
  7465                           global __ptext15
  7466                           __ptext15:	;psect for function ___fldiv
  7467  0DF7                     psect	text15
  7468                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7469                           	line	8
  7470                           	global	__size_of___fldiv
  7471                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  7472  0209                     	
  7473                           ___fldiv:	
  7474  0DF7                     ;incstack = 0
  7475                           	opt	stack 5
  7476                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7477                           	line	26
  7478                           	
  7479                           l1906:	
  7480  0DF7                     	bcf	status, 5	;RP0=0, select bank0
  7481  0DF7  1283               	bcf	status, 6	;RP1=0, select bank0
  7482  0DF8  1303               	movf	0+(___fldiv@b)+03h,w
  7483  0DF9  0842               	andlw	080h
  7484  0DFA  3980               	movwf	(??___fldiv+0)+0
  7485  0DFB  00C3               	movf	(??___fldiv+0)+0,w
  7486  0DFC  0843               	movwf	(___fldiv@sign)
  7487  0DFD  00CC               	line	27
  7488                           	
  7489                           l1908:	
  7490  0DFE                     	movf	0+(___fldiv@b)+03h,w
  7491  0DFE  0842               	movwf	(??___fldiv+0)+0
  7492  0DFF  00C3               	addwf	(??___fldiv+0)+0,w
  7493  0E00  0743               	movwf	(??___fldiv+1)+0
  7494  0E01  00C4               	movf	(??___fldiv+1)+0,w
  7495  0E02  0844               	movwf	(___fldiv@bexp)
  7496  0E03  00D3               	line	28
  7497                           	
  7498                           l1910:	
  7499  0E04                     	btfss	0+(___fldiv@b)+02h,(7)&7
  7500  0E04  1FC1               	goto	u2211
  7501  0E05  2E07               	goto	u2210
  7502  0E06  2E08               u2211:
  7503  0E07                     	goto	l1914
  7504  0E07  2E0A               u2210:
  7505  0E08                     	line	29
  7506                           	
  7507                           l1912:	
  7508  0E08                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
  7509  0E08  1453               	goto	l1914
  7510  0E09  2E0A               	line	30
  7511                           	
  7512                           l665:	
  7513  0E0A                     	line	33
  7514                           	
  7515                           l1914:	
  7516  0E0A                     	movf	((___fldiv@bexp)),w
  7517  0E0A  0853               	btfsc	status,2
  7518  0E0B  1903               	goto	u2221
  7519  0E0C  2E0E               	goto	u2220
  7520  0E0D  2E0F               u2221:
  7521  0E0E                     	goto	l1924
  7522  0E0E  2E20               u2220:
  7523  0E0F                     	line	35
  7524                           	
  7525                           l1916:	
  7526  0E0F                     		incf	((___fldiv@bexp)),w
  7527  0E0F  0A53               	btfss	status,2
  7528  0E10  1D03               	goto	u2231
  7529  0E11  2E13               	goto	u2230
  7530  0E12  2E14               u2231:
  7531  0E13                     	goto	l1920
  7532  0E13  2E1D               u2230:
  7533  0E14                     	line	37
  7534                           	
  7535                           l1918:	
  7536  0E14                     	movlw	0x0
  7537  0E14  3000               	movwf	(___fldiv@b+3)
  7538  0E15  00C2               	movlw	0x0
  7539  0E16  3000               	movwf	(___fldiv@b+2)
  7540  0E17  00C1               	movlw	0x0
  7541  0E18  3000               	movwf	(___fldiv@b+1)
  7542  0E19  00C0               	movlw	0x0
  7543  0E1A  3000               	movwf	(___fldiv@b)
  7544  0E1B  00BF               
  7545                           	goto	l1920
  7546  0E1C  2E1D               	line	38
  7547                           	
  7548                           l667:	
  7549  0E1D                     	line	40
  7550                           	
  7551                           l1920:	
  7552  0E1D                     	bsf	(___fldiv@b)+(23/8),(23)&7
  7553  0E1D  17C1               	line	42
  7554                           	
  7555                           l1922:	
  7556  0E1E                     	clrf	0+(___fldiv@b)+03h
  7557  0E1E  01C2               	line	43
  7558                           	goto	l1926
  7559  0E1F  2E29               	line	44
  7560                           	
  7561                           l666:	
  7562  0E20                     	line	46
  7563                           	
  7564                           l1924:	
  7565  0E20                     	movlw	0x0
  7566  0E20  3000               	movwf	(___fldiv@b+3)
  7567  0E21  00C2               	movlw	0x0
  7568  0E22  3000               	movwf	(___fldiv@b+2)
  7569  0E23  00C1               	movlw	0x0
  7570  0E24  3000               	movwf	(___fldiv@b+1)
  7571  0E25  00C0               	movlw	0x0
  7572  0E26  3000               	movwf	(___fldiv@b)
  7573  0E27  00BF               
  7574                           	goto	l1926
  7575  0E28  2E29               	line	47
  7576                           	
  7577                           l668:	
  7578  0E29                     	line	49
  7579                           	
  7580                           l1926:	
  7581  0E29                     	movf	0+(___fldiv@a)+03h,w
  7582  0E29  083E               	andlw	080h
  7583  0E2A  3980               	movwf	(??___fldiv+0)+0
  7584  0E2B  00C3               	movf	(??___fldiv+0)+0,w
  7585  0E2C  0843               	xorwf	(___fldiv@sign),f
  7586  0E2D  06CC               	line	50
  7587                           	
  7588                           l1928:	
  7589  0E2E                     	movf	0+(___fldiv@a)+03h,w
  7590  0E2E  083E               	movwf	(??___fldiv+0)+0
  7591  0E2F  00C3               	addwf	(??___fldiv+0)+0,w
  7592  0E30  0743               	movwf	(??___fldiv+1)+0
  7593  0E31  00C4               	movf	(??___fldiv+1)+0,w
  7594  0E32  0844               	movwf	(___fldiv@aexp)
  7595  0E33  00D4               	line	51
  7596                           	
  7597                           l1930:	
  7598  0E34                     	btfss	0+(___fldiv@a)+02h,(7)&7
  7599  0E34  1FBD               	goto	u2241
  7600  0E35  2E37               	goto	u2240
  7601  0E36  2E38               u2241:
  7602  0E37                     	goto	l1934
  7603  0E37  2E3A               u2240:
  7604  0E38                     	line	52
  7605                           	
  7606                           l1932:	
  7607  0E38                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
  7608  0E38  1454               	goto	l1934
  7609  0E39  2E3A               	line	53
  7610                           	
  7611                           l669:	
  7612  0E3A                     	line	56
  7613                           	
  7614                           l1934:	
  7615  0E3A                     	movf	((___fldiv@aexp)),w
  7616  0E3A  0854               	btfsc	status,2
  7617  0E3B  1903               	goto	u2251
  7618  0E3C  2E3E               	goto	u2250
  7619  0E3D  2E3F               u2251:
  7620  0E3E                     	goto	l1944
  7621  0E3E  2E50               u2250:
  7622  0E3F                     	line	58
  7623                           	
  7624                           l1936:	
  7625  0E3F                     		incf	((___fldiv@aexp)),w
  7626  0E3F  0A54               	btfss	status,2
  7627  0E40  1D03               	goto	u2261
  7628  0E41  2E43               	goto	u2260
  7629  0E42  2E44               u2261:
  7630  0E43                     	goto	l1940
  7631  0E43  2E4D               u2260:
  7632  0E44                     	line	60
  7633                           	
  7634                           l1938:	
  7635  0E44                     	movlw	0x0
  7636  0E44  3000               	movwf	(___fldiv@a+3)
  7637  0E45  00BE               	movlw	0x0
  7638  0E46  3000               	movwf	(___fldiv@a+2)
  7639  0E47  00BD               	movlw	0x0
  7640  0E48  3000               	movwf	(___fldiv@a+1)
  7641  0E49  00BC               	movlw	0x0
  7642  0E4A  3000               	movwf	(___fldiv@a)
  7643  0E4B  00BB               
  7644                           	goto	l1940
  7645  0E4C  2E4D               	line	61
  7646                           	
  7647                           l671:	
  7648  0E4D                     	line	63
  7649                           	
  7650                           l1940:	
  7651  0E4D                     	bsf	(___fldiv@a)+(23/8),(23)&7
  7652  0E4D  17BD               	line	65
  7653                           	
  7654                           l1942:	
  7655  0E4E                     	clrf	0+(___fldiv@a)+03h
  7656  0E4E  01BE               	line	66
  7657                           	goto	l672
  7658  0E4F  2E58               	line	67
  7659                           	
  7660                           l670:	
  7661  0E50                     	line	69
  7662                           	
  7663                           l1944:	
  7664  0E50                     	movlw	0x0
  7665  0E50  3000               	movwf	(___fldiv@a+3)
  7666  0E51  00BE               	movlw	0x0
  7667  0E52  3000               	movwf	(___fldiv@a+2)
  7668  0E53  00BD               	movlw	0x0
  7669  0E54  3000               	movwf	(___fldiv@a+1)
  7670  0E55  00BC               	movlw	0x0
  7671  0E56  3000               	movwf	(___fldiv@a)
  7672  0E57  00BB               
  7673                           	line	70
  7674                           	
  7675                           l672:	
  7676  0E58                     	line	75
  7677                           	movf	(___fldiv@a+3),w
  7678  0E58  083E               	iorwf	(___fldiv@a+2),w
  7679  0E59  043D               	iorwf	(___fldiv@a+1),w
  7680  0E5A  043C               	iorwf	(___fldiv@a),w
  7681  0E5B  043B               	skipz
  7682  0E5C  1D03               	goto	u2271
  7683  0E5D  2E5F               	goto	u2270
  7684  0E5E  2E60               u2271:
  7685  0E5F                     	goto	l1954
  7686  0E5F  2E7A               u2270:
  7687  0E60                     	line	76
  7688                           	
  7689                           l1946:	
  7690  0E60                     	movlw	high highword(0)
  7691  0E60  3000               	movwf	(___fldiv@b+3)
  7692  0E61  00C2               	movlw	low highword(0)
  7693  0E62  3000               	movwf	(___fldiv@b+2)
  7694  0E63  00C1               	movlw	high(0)
  7695  0E64  3000               	movwf	(___fldiv@b+1)
  7696  0E65  00C0               	movlw	low(0)
  7697  0E66  3000               	movwf	(___fldiv@b)
  7698  0E67  00BF               
  7699                           	line	77
  7700                           	movlw	080h
  7701  0E68  3080               	iorwf	0+(___fldiv@b)+02h,f
  7702  0E69  04C1               	movlw	07Fh
  7703  0E6A  307F               	iorwf	1+(___fldiv@b)+02h,f
  7704  0E6B  04C2               	line	78
  7705                           	
  7706                           l1948:	
  7707  0E6C                     	movf	(___fldiv@sign),w
  7708  0E6C  084C               	movwf	(??___fldiv+0)+0
  7709  0E6D  00C3               	movf	(??___fldiv+0)+0,w
  7710  0E6E  0843               	iorwf	0+(___fldiv@b)+03h,f
  7711  0E6F  04C2               	line	79
  7712                           	
  7713                           l1950:	
  7714  0E70                     	movf	(___fldiv@b+3),w
  7715  0E70  0842               	movwf	(?___fldiv+3)
  7716  0E71  00BE               	movf	(___fldiv@b+2),w
  7717  0E72  0841               	movwf	(?___fldiv+2)
  7718  0E73  00BD               	movf	(___fldiv@b+1),w
  7719  0E74  0840               	movwf	(?___fldiv+1)
  7720  0E75  00BC               	movf	(___fldiv@b),w
  7721  0E76  083F               	movwf	(?___fldiv)
  7722  0E77  00BB               
  7723                           	goto	l674
  7724  0E78  2FFF               	
  7725                           l1952:	
  7726  0E79                     	goto	l674
  7727  0E79  2FFF               	line	80
  7728                           	
  7729                           l673:	
  7730  0E7A                     	line	83
  7731                           	
  7732                           l1954:	
  7733  0E7A                     	movf	((___fldiv@bexp)),w
  7734  0E7A  0853               	btfss	status,2
  7735  0E7B  1D03               	goto	u2281
  7736  0E7C  2E7E               	goto	u2280
  7737  0E7D  2E7F               u2281:
  7738  0E7E                     	goto	l1960
  7739  0E7E  2E91               u2280:
  7740  0E7F                     	line	84
  7741                           	
  7742                           l1956:	
  7743  0E7F                     	movlw	high highword(0)
  7744  0E7F  3000               	movwf	(___fldiv@b+3)
  7745  0E80  00C2               	movlw	low highword(0)
  7746  0E81  3000               	movwf	(___fldiv@b+2)
  7747  0E82  00C1               	movlw	high(0)
  7748  0E83  3000               	movwf	(___fldiv@b+1)
  7749  0E84  00C0               	movlw	low(0)
  7750  0E85  3000               	movwf	(___fldiv@b)
  7751  0E86  00BF               
  7752                           	line	85
  7753                           	movf	(___fldiv@b+3),w
  7754  0E87  0842               	movwf	(?___fldiv+3)
  7755  0E88  00BE               	movf	(___fldiv@b+2),w
  7756  0E89  0841               	movwf	(?___fldiv+2)
  7757  0E8A  00BD               	movf	(___fldiv@b+1),w
  7758  0E8B  0840               	movwf	(?___fldiv+1)
  7759  0E8C  00BC               	movf	(___fldiv@b),w
  7760  0E8D  083F               	movwf	(?___fldiv)
  7761  0E8E  00BB               
  7762                           	goto	l674
  7763  0E8F  2FFF               	
  7764                           l1958:	
  7765  0E90                     	goto	l674
  7766  0E90  2FFF               	line	86
  7767                           	
  7768                           l675:	
  7769  0E91                     	line	89
  7770                           	
  7771                           l1960:	
  7772  0E91                     	movf	(___fldiv@aexp),w
  7773  0E91  0854               	movwf	(??___fldiv+0)+0
  7774  0E92  00C3               	clrf	(??___fldiv+0)+0+1
  7775  0E93  01C4               	comf	(??___fldiv+0)+0,f
  7776  0E94  09C3               	comf	(??___fldiv+0)+1,f
  7777  0E95  09C4               	incf	(??___fldiv+0)+0,f
  7778  0E96  0AC3               	skipnz
  7779  0E97  1903               	incf	(??___fldiv+0)+1,f
  7780  0E98  0AC4               	movf	(___fldiv@bexp),w
  7781  0E99  0853               	addwf	0+(??___fldiv+0)+0,w
  7782  0E9A  0743               	movwf	(??___fldiv+2)+0
  7783  0E9B  00C5               	movf	1+(??___fldiv+0)+0,w
  7784  0E9C  0844               	skipnc
  7785  0E9D  1803               	incf	1+(??___fldiv+0)+0,w
  7786  0E9E  0A44               	movwf	((??___fldiv+2)+0)+1
  7787  0E9F  00C6               	movf	0+(??___fldiv+2)+0,w
  7788  0EA0  0845               	addlw	low(07Fh)
  7789  0EA1  3E7F               	movwf	(___fldiv@new_exp)
  7790  0EA2  00CD               	movf	1+(??___fldiv+2)+0,w
  7791  0EA3  0846               	skipnc
  7792  0EA4  1803               	addlw	1
  7793  0EA5  3E01               	addlw	high(07Fh)
  7794  0EA6  3E00               	movwf	1+(___fldiv@new_exp)
  7795  0EA7  00CE               	line	92
  7796                           	
  7797                           l1962:	
  7798  0EA8                     	movf	(___fldiv@b+3),w
  7799  0EA8  0842               	movwf	(___fldiv@rem+3)
  7800  0EA9  00CB               	movf	(___fldiv@b+2),w
  7801  0EAA  0841               	movwf	(___fldiv@rem+2)
  7802  0EAB  00CA               	movf	(___fldiv@b+1),w
  7803  0EAC  0840               	movwf	(___fldiv@rem+1)
  7804  0EAD  00C9               	movf	(___fldiv@b),w
  7805  0EAE  083F               	movwf	(___fldiv@rem)
  7806  0EAF  00C8               
  7807                           	line	93
  7808                           	
  7809                           l1964:	
  7810  0EB0                     	movlw	high highword(0)
  7811  0EB0  3000               	movwf	(___fldiv@b+3)
  7812  0EB1  00C2               	movlw	low highword(0)
  7813  0EB2  3000               	movwf	(___fldiv@b+2)
  7814  0EB3  00C1               	movlw	high(0)
  7815  0EB4  3000               	movwf	(___fldiv@b+1)
  7816  0EB5  00C0               	movlw	low(0)
  7817  0EB6  3000               	movwf	(___fldiv@b)
  7818  0EB7  00BF               
  7819                           	line	94
  7820                           	
  7821                           l1966:	
  7822  0EB8                     	movlw	high highword(0)
  7823  0EB8  3000               	movwf	(___fldiv@grs+3)
  7824  0EB9  00D2               	movlw	low highword(0)
  7825  0EBA  3000               	movwf	(___fldiv@grs+2)
  7826  0EBB  00D1               	movlw	high(0)
  7827  0EBC  3000               	movwf	(___fldiv@grs+1)
  7828  0EBD  00D0               	movlw	low(0)
  7829  0EBE  3000               	movwf	(___fldiv@grs)
  7830  0EBF  00CF               
  7831                           	line	96
  7832                           	
  7833                           l1968:	
  7834  0EC0                     	clrf	(___fldiv@aexp)
  7835  0EC0  01D4               	line	97
  7836                           	goto	l1988
  7837  0EC1  2F10               	
  7838                           l677:	
  7839  0EC2                     	line	100
  7840                           	
  7841                           l1970:	
  7842  0EC2                     	movf	((___fldiv@aexp)),w
  7843  0EC2  0854               	btfsc	status,2
  7844  0EC3  1903               	goto	u2291
  7845  0EC4  2EC6               	goto	u2290
  7846  0EC5  2EC7               u2291:
  7847  0EC6                     	goto	l1980
  7848  0EC6  2EE9               u2290:
  7849  0EC7                     	line	101
  7850                           	
  7851                           l1972:	
  7852  0EC7                     	movlw	01h
  7853  0EC7  3001               	movwf	(??___fldiv+0)+0
  7854  0EC8  00C3               u2305:
  7855  0EC9                     	clrc
  7856  0EC9  1003               	rlf	(___fldiv@rem),f
  7857  0ECA  0DC8               	rlf	(___fldiv@rem+1),f
  7858  0ECB  0DC9               	rlf	(___fldiv@rem+2),f
  7859  0ECC  0DCA               	rlf	(___fldiv@rem+3),f
  7860  0ECD  0DCB               	decfsz	(??___fldiv+0)+0
  7861  0ECE  0BC3               	goto	u2305
  7862  0ECF  2EC9               	line	102
  7863                           	movlw	01h
  7864  0ED0  3001               	movwf	(??___fldiv+0)+0
  7865  0ED1  00C3               u2315:
  7866  0ED2                     	clrc
  7867  0ED2  1003               	rlf	(___fldiv@b),f
  7868  0ED3  0DBF               	rlf	(___fldiv@b+1),f
  7869  0ED4  0DC0               	rlf	(___fldiv@b+2),f
  7870  0ED5  0DC1               	rlf	(___fldiv@b+3),f
  7871  0ED6  0DC2               	decfsz	(??___fldiv+0)+0
  7872  0ED7  0BC3               	goto	u2315
  7873  0ED8  2ED2               	line	103
  7874                           	
  7875                           l1974:	
  7876  0ED9                     	btfss	(___fldiv@grs+3),(31)&7
  7877  0ED9  1FD2               	goto	u2321
  7878  0EDA  2EDC               	goto	u2320
  7879  0EDB  2EDD               u2321:
  7880  0EDC                     	goto	l1978
  7881  0EDC  2EDF               u2320:
  7882  0EDD                     	line	104
  7883                           	
  7884                           l1976:	
  7885  0EDD                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7886  0EDD  143F               	goto	l1978
  7887  0EDE  2EDF               	line	105
  7888                           	
  7889                           l679:	
  7890  0EDF                     	line	106
  7891                           	
  7892                           l1978:	
  7893  0EDF                     	movlw	01h
  7894  0EDF  3001               	movwf	(??___fldiv+0)+0
  7895  0EE0  00C3               u2335:
  7896  0EE1                     	clrc
  7897  0EE1  1003               	rlf	(___fldiv@grs),f
  7898  0EE2  0DCF               	rlf	(___fldiv@grs+1),f
  7899  0EE3  0DD0               	rlf	(___fldiv@grs+2),f
  7900  0EE4  0DD1               	rlf	(___fldiv@grs+3),f
  7901  0EE5  0DD2               	decfsz	(??___fldiv+0)+0
  7902  0EE6  0BC3               	goto	u2335
  7903  0EE7  2EE1               	goto	l1980
  7904  0EE8  2EE9               	line	107
  7905                           	
  7906                           l678:	
  7907  0EE9                     	line	112
  7908                           	
  7909                           l1980:	
  7910  0EE9                     	movf	(___fldiv@a+3),w
  7911  0EE9  083E               	subwf	(___fldiv@rem+3),w
  7912  0EEA  024B               	skipz
  7913  0EEB  1D03               	goto	u2345
  7914  0EEC  2EF7               	movf	(___fldiv@a+2),w
  7915  0EED  083D               	subwf	(___fldiv@rem+2),w
  7916  0EEE  024A               	skipz
  7917  0EEF  1D03               	goto	u2345
  7918  0EF0  2EF7               	movf	(___fldiv@a+1),w
  7919  0EF1  083C               	subwf	(___fldiv@rem+1),w
  7920  0EF2  0249               	skipz
  7921  0EF3  1D03               	goto	u2345
  7922  0EF4  2EF7               	movf	(___fldiv@a),w
  7923  0EF5  083B               	subwf	(___fldiv@rem),w
  7924  0EF6  0248               u2345:
  7925  0EF7                     	skipc
  7926  0EF7  1C03               	goto	u2341
  7927  0EF8  2EFA               	goto	u2340
  7928  0EF9  2EFB               u2341:
  7929  0EFA                     	goto	l1986
  7930  0EFA  2F0B               u2340:
  7931  0EFB                     	line	115
  7932                           	
  7933                           l1982:	
  7934  0EFB                     	bsf	(___fldiv@grs)+(30/8),(30)&7
  7935  0EFB  1752               	line	116
  7936                           	
  7937                           l1984:	
  7938  0EFC                     	movf	(___fldiv@a),w
  7939  0EFC  083B               	subwf	(___fldiv@rem),f
  7940  0EFD  02C8               	movf	(___fldiv@a+1),w
  7941  0EFE  083C               	skipc
  7942  0EFF  1C03               	incfsz	(___fldiv@a+1),w
  7943  0F00  0F3C               	subwf	(___fldiv@rem+1),f
  7944  0F01  02C9               	movf	(___fldiv@a+2),w
  7945  0F02  083D               	skipc
  7946  0F03  1C03               	incfsz	(___fldiv@a+2),w
  7947  0F04  0F3D               	subwf	(___fldiv@rem+2),f
  7948  0F05  02CA               	movf	(___fldiv@a+3),w
  7949  0F06  083E               	skipc
  7950  0F07  1C03               	incfsz	(___fldiv@a+3),w
  7951  0F08  0F3E               	subwf	(___fldiv@rem+3),f
  7952  0F09  02CB               	goto	l1986
  7953  0F0A  2F0B               	line	117
  7954                           	
  7955                           l680:	
  7956  0F0B                     	line	118
  7957                           	
  7958                           l1986:	
  7959  0F0B                     	movlw	low(01h)
  7960  0F0B  3001               	movwf	(??___fldiv+0)+0
  7961  0F0C  00C3               	movf	(??___fldiv+0)+0,w
  7962  0F0D  0843               	addwf	(___fldiv@aexp),f
  7963  0F0E  07D4               	goto	l1988
  7964  0F0F  2F10               	line	119
  7965                           	
  7966                           l676:	
  7967  0F10                     	line	97
  7968                           	
  7969                           l1988:	
  7970  0F10                     	movlw	low(01Ah)
  7971  0F10  301A               	subwf	(___fldiv@aexp),w
  7972  0F11  0254               	skipc
  7973  0F12  1C03               	goto	u2351
  7974  0F13  2F15               	goto	u2350
  7975  0F14  2F16               u2351:
  7976  0F15                     	goto	l1970
  7977  0F15  2EC2               u2350:
  7978  0F16                     	goto	l1990
  7979  0F16  2F17               	
  7980                           l681:	
  7981  0F17                     	line	122
  7982                           	
  7983                           l1990:	
  7984  0F17                     	movf	(___fldiv@rem+3),w
  7985  0F17  084B               	iorwf	(___fldiv@rem+2),w
  7986  0F18  044A               	iorwf	(___fldiv@rem+1),w
  7987  0F19  0449               	iorwf	(___fldiv@rem),w
  7988  0F1A  0448               	skipnz
  7989  0F1B  1903               	goto	u2361
  7990  0F1C  2F1E               	goto	u2360
  7991  0F1D  2F1F               u2361:
  7992  0F1E                     	goto	l2004
  7993  0F1E  2F41               u2360:
  7994  0F1F                     	line	123
  7995                           	
  7996                           l1992:	
  7997  0F1F                     	bsf	(___fldiv@grs)+(0/8),(0)&7
  7998  0F1F  144F               	goto	l2004
  7999  0F20  2F41               	line	124
  8000                           	
  8001                           l682:	
  8002  0F21                     	line	127
  8003                           	goto	l2004
  8004  0F21  2F41               	
  8005                           l684:	
  8006  0F22                     	line	128
  8007                           	
  8008                           l1994:	
  8009  0F22                     	movlw	01h
  8010  0F22  3001               	movwf	(??___fldiv+0)+0
  8011  0F23  00C3               u2375:
  8012  0F24                     	clrc
  8013  0F24  1003               	rlf	(___fldiv@b),f
  8014  0F25  0DBF               	rlf	(___fldiv@b+1),f
  8015  0F26  0DC0               	rlf	(___fldiv@b+2),f
  8016  0F27  0DC1               	rlf	(___fldiv@b+3),f
  8017  0F28  0DC2               	decfsz	(??___fldiv+0)+0
  8018  0F29  0BC3               	goto	u2375
  8019  0F2A  2F24               	line	129
  8020                           	
  8021                           l1996:	
  8022  0F2B                     	btfss	(___fldiv@grs+3),(31)&7
  8023  0F2B  1FD2               	goto	u2381
  8024  0F2C  2F2E               	goto	u2380
  8025  0F2D  2F2F               u2381:
  8026  0F2E                     	goto	l2000
  8027  0F2E  2F31               u2380:
  8028  0F2F                     	line	130
  8029                           	
  8030                           l1998:	
  8031  0F2F                     	bsf	(___fldiv@b)+(0/8),(0)&7
  8032  0F2F  143F               	goto	l2000
  8033  0F30  2F31               	line	131
  8034                           	
  8035                           l685:	
  8036  0F31                     	line	132
  8037                           	
  8038                           l2000:	
  8039  0F31                     	movlw	01h
  8040  0F31  3001               	movwf	(??___fldiv+0)+0
  8041  0F32  00C3               u2395:
  8042  0F33                     	clrc
  8043  0F33  1003               	rlf	(___fldiv@grs),f
  8044  0F34  0DCF               	rlf	(___fldiv@grs+1),f
  8045  0F35  0DD0               	rlf	(___fldiv@grs+2),f
  8046  0F36  0DD1               	rlf	(___fldiv@grs+3),f
  8047  0F37  0DD2               	decfsz	(??___fldiv+0)+0
  8048  0F38  0BC3               	goto	u2395
  8049  0F39  2F33               	line	133
  8050                           	
  8051                           l2002:	
  8052  0F3A                     	movlw	0FFh
  8053  0F3A  30FF               	addwf	(___fldiv@new_exp),f
  8054  0F3B  07CD               	skipnc
  8055  0F3C  1803               	incf	(___fldiv@new_exp+1),f
  8056  0F3D  0ACE               	movlw	0FFh
  8057  0F3E  30FF               	addwf	(___fldiv@new_exp+1),f
  8058  0F3F  07CE               	goto	l2004
  8059  0F40  2F41               	line	134
  8060                           	
  8061                           l683:	
  8062  0F41                     	line	127
  8063                           	
  8064                           l2004:	
  8065  0F41                     	btfss	(___fldiv@b+2),(23)&7
  8066  0F41  1FC1               	goto	u2401
  8067  0F42  2F44               	goto	u2400
  8068  0F43  2F45               u2401:
  8069  0F44                     	goto	l1994
  8070  0F44  2F22               u2400:
  8071  0F45                     	goto	l2006
  8072  0F45  2F46               	
  8073                           l686:	
  8074  0F46                     	line	139
  8075                           	
  8076                           l2006:	
  8077  0F46                     	clrf	(___fldiv@aexp)
  8078  0F46  01D4               	line	140
  8079                           	
  8080                           l2008:	
  8081  0F47                     	btfss	(___fldiv@grs+3),(31)&7
  8082  0F47  1FD2               	goto	u2411
  8083  0F48  2F4A               	goto	u2410
  8084  0F49  2F4B               u2411:
  8085  0F4A                     	goto	l2016
  8086  0F4A  2F6B               u2410:
  8087  0F4B                     	line	141
  8088                           	
  8089                           l2010:	
  8090  0F4B                     	movlw	0FFh
  8091  0F4B  30FF               	andwf	(___fldiv@grs),w
  8092  0F4C  054F               	movwf	(??___fldiv+0)+0
  8093  0F4D  00C3               	movlw	0FFh
  8094  0F4E  30FF               	andwf	(___fldiv@grs+1),w
  8095  0F4F  0550               	movwf	((??___fldiv+0)+0+1)
  8096  0F50  00C4               	movlw	0FFh
  8097  0F51  30FF               	andwf	(___fldiv@grs+2),w
  8098  0F52  0551               	movwf	((??___fldiv+0)+0+2)
  8099  0F53  00C5               	movlw	07Fh
  8100  0F54  307F               	andwf	(___fldiv@grs+3),w
  8101  0F55  0552               	movwf	((??___fldiv+0)+0+3)
  8102  0F56  00C6               	movf	3+(??___fldiv+0)+0,w
  8103  0F57  0846               	iorwf	2+(??___fldiv+0)+0,w
  8104  0F58  0445               	iorwf	1+(??___fldiv+0)+0,w
  8105  0F59  0444               	iorwf	0+(??___fldiv+0)+0,w
  8106  0F5A  0443               	skipnz
  8107  0F5B  1903               	goto	u2421
  8108  0F5C  2F5E               	goto	u2420
  8109  0F5D  2F5F               u2421:
  8110  0F5E                     	goto	l688
  8111  0F5E  2F62               u2420:
  8112  0F5F                     	line	142
  8113                           	
  8114                           l2012:	
  8115  0F5F                     	clrf	(___fldiv@aexp)
  8116  0F5F  01D4               	incf	(___fldiv@aexp),f
  8117  0F60  0AD4               	line	143
  8118                           	goto	l2016
  8119  0F61  2F6B               	line	144
  8120                           	
  8121                           l688:	
  8122  0F62                     	line	145
  8123                           	btfss	(___fldiv@b),(0)&7
  8124  0F62  1C3F               	goto	u2431
  8125  0F63  2F65               	goto	u2430
  8126  0F64  2F66               u2431:
  8127  0F65                     	goto	l2016
  8128  0F65  2F6B               u2430:
  8129  0F66                     	line	146
  8130                           	
  8131                           l2014:	
  8132  0F66                     	clrf	(___fldiv@aexp)
  8133  0F66  01D4               	incf	(___fldiv@aexp),f
  8134  0F67  0AD4               	goto	l2016
  8135  0F68  2F6B               	line	147
  8136                           	
  8137                           l690:	
  8138  0F69                     	goto	l2016
  8139  0F69  2F6B               	line	148
  8140                           	
  8141                           l689:	
  8142  0F6A                     	goto	l2016
  8143  0F6A  2F6B               	line	149
  8144                           	
  8145                           l687:	
  8146  0F6B                     	line	150
  8147                           	
  8148                           l2016:	
  8149  0F6B                     	movf	((___fldiv@aexp)),w
  8150  0F6B  0854               	btfsc	status,2
  8151  0F6C  1903               	goto	u2441
  8152  0F6D  2F6F               	goto	u2440
  8153  0F6E  2F70               u2441:
  8154  0F6F                     	goto	l2026
  8155  0F6F  2FA3               u2440:
  8156  0F70                     	line	151
  8157                           	
  8158                           l2018:	
  8159  0F70                     	movlw	01h
  8160  0F70  3001               	addwf	(___fldiv@b),f
  8161  0F71  07BF               	movlw	0
  8162  0F72  3000               	skipnc
  8163  0F73  1803               movlw 1
  8164  0F74  3001               	addwf	(___fldiv@b+1),f
  8165  0F75  07C0               	movlw	0
  8166  0F76  3000               	skipnc
  8167  0F77  1803               movlw 1
  8168  0F78  3001               	addwf	(___fldiv@b+2),f
  8169  0F79  07C1               	movlw	0
  8170  0F7A  3000               	skipnc
  8171  0F7B  1803               movlw 1
  8172  0F7C  3001               	addwf	(___fldiv@b+3),f
  8173  0F7D  07C2               	line	152
  8174                           	
  8175                           l2020:	
  8176  0F7E                     	btfss	(___fldiv@b+3),(24)&7
  8177  0F7E  1C42               	goto	u2451
  8178  0F7F  2F81               	goto	u2450
  8179  0F80  2F82               u2451:
  8180  0F81                     	goto	l2026
  8181  0F81  2FA3               u2450:
  8182  0F82                     	line	153
  8183                           	
  8184                           l2022:	
  8185  0F82                     	movf	(___fldiv@b),w
  8186  0F82  083F               	movwf	(??___fldiv+0)+0
  8187  0F83  00C3               	movf	(___fldiv@b+1),w
  8188  0F84  0840               	movwf	((??___fldiv+0)+0+1)
  8189  0F85  00C4               	movf	(___fldiv@b+2),w
  8190  0F86  0841               	movwf	((??___fldiv+0)+0+2)
  8191  0F87  00C5               	movf	(___fldiv@b+3),w
  8192  0F88  0842               	movwf	((??___fldiv+0)+0+3)
  8193  0F89  00C6               	movlw	01h
  8194  0F8A  3001               	movwf	(??___fldiv+4)+0
  8195  0F8B  00C7               u2465:
  8196  0F8C                     	rlf	(??___fldiv+0)+3,w
  8197  0F8C  0D46               	rrf	(??___fldiv+0)+3,f
  8198  0F8D  0CC6               	rrf	(??___fldiv+0)+2,f
  8199  0F8E  0CC5               	rrf	(??___fldiv+0)+1,f
  8200  0F8F  0CC4               	rrf	(??___fldiv+0)+0,f
  8201  0F90  0CC3               u2460:
  8202  0F91                     	decfsz	(??___fldiv+4)+0,f
  8203  0F91  0BC7               	goto	u2465
  8204  0F92  2F8C               	movf	3+(??___fldiv+0)+0,w
  8205  0F93  0846               	movwf	(___fldiv@b+3)
  8206  0F94  00C2               	movf	2+(??___fldiv+0)+0,w
  8207  0F95  0845               	movwf	(___fldiv@b+2)
  8208  0F96  00C1               	movf	1+(??___fldiv+0)+0,w
  8209  0F97  0844               	movwf	(___fldiv@b+1)
  8210  0F98  00C0               	movf	0+(??___fldiv+0)+0,w
  8211  0F99  0843               	movwf	(___fldiv@b)
  8212  0F9A  00BF               
  8213                           	line	154
  8214                           	
  8215                           l2024:	
  8216  0F9B                     	movlw	01h
  8217  0F9B  3001               	addwf	(___fldiv@new_exp),f
  8218  0F9C  07CD               	skipnc
  8219  0F9D  1803               	incf	(___fldiv@new_exp+1),f
  8220  0F9E  0ACE               	movlw	0
  8221  0F9F  3000               	addwf	(___fldiv@new_exp+1),f
  8222  0FA0  07CE               	goto	l2026
  8223  0FA1  2FA3               	line	155
  8224                           	
  8225                           l692:	
  8226  0FA2                     	goto	l2026
  8227  0FA2  2FA3               	line	156
  8228                           	
  8229                           l691:	
  8230  0FA3                     	line	159
  8231                           	
  8232                           l2026:	
  8233  0FA3                     	movf	(___fldiv@new_exp+1),w
  8234  0FA3  084E               	xorlw	80h
  8235  0FA4  3A80               	movwf	btemp+1
  8236  0FA5  00FF               	movlw	(0)^80h
  8237  0FA6  3080               	subwf	btemp+1,w
  8238  0FA7  027F               	skipz
  8239  0FA8  1D03               	goto	u2475
  8240  0FA9  2FAC               	movlw	0FFh
  8241  0FAA  30FF               	subwf	(___fldiv@new_exp),w
  8242  0FAB  024D               u2475:
  8243  0FAC                     
  8244                           	skipc
  8245  0FAC  1C03               	goto	u2471
  8246  0FAD  2FAF               	goto	u2470
  8247  0FAE  2FB0               u2471:
  8248  0FAF                     	goto	l2030
  8249  0FAF  2FBF               u2470:
  8250  0FB0                     	line	160
  8251                           	
  8252                           l2028:	
  8253  0FB0                     	movlw	0FFh
  8254  0FB0  30FF               	bcf	status, 5	;RP0=0, select bank0
  8255  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  8256  0FB2  1303               	movwf	(___fldiv@new_exp)
  8257  0FB3  00CD               	movlw	0
  8258  0FB4  3000               	movwf	((___fldiv@new_exp))+1
  8259  0FB5  00CE               	line	161
  8260                           	movlw	high highword(0)
  8261  0FB6  3000               	movwf	(___fldiv@b+3)
  8262  0FB7  00C2               	movlw	low highword(0)
  8263  0FB8  3000               	movwf	(___fldiv@b+2)
  8264  0FB9  00C1               	movlw	high(0)
  8265  0FBA  3000               	movwf	(___fldiv@b+1)
  8266  0FBB  00C0               	movlw	low(0)
  8267  0FBC  3000               	movwf	(___fldiv@b)
  8268  0FBD  00BF               
  8269                           	goto	l2030
  8270  0FBE  2FBF               	line	162
  8271                           	
  8272                           l693:	
  8273  0FBF                     	line	165
  8274                           	
  8275                           l2030:	
  8276  0FBF                     	bcf	status, 5	;RP0=0, select bank0
  8277  0FBF  1283               	bcf	status, 6	;RP1=0, select bank0
  8278  0FC0  1303               	movf	(___fldiv@new_exp+1),w
  8279  0FC1  084E               	xorlw	80h
  8280  0FC2  3A80               	movwf	btemp+1
  8281  0FC3  00FF               	movlw	(0)^80h
  8282  0FC4  3080               	subwf	btemp+1,w
  8283  0FC5  027F               	skipz
  8284  0FC6  1D03               	goto	u2485
  8285  0FC7  2FCA               	movlw	01h
  8286  0FC8  3001               	subwf	(___fldiv@new_exp),w
  8287  0FC9  024D               u2485:
  8288  0FCA                     
  8289                           	skipnc
  8290  0FCA  1803               	goto	u2481
  8291  0FCB  2FCD               	goto	u2480
  8292  0FCC  2FCE               u2481:
  8293  0FCD                     	goto	l694
  8294  0FCD  2FDB               u2480:
  8295  0FCE                     	line	166
  8296                           	
  8297                           l2032:	
  8298  0FCE                     	bcf	status, 5	;RP0=0, select bank0
  8299  0FCE  1283               	bcf	status, 6	;RP1=0, select bank0
  8300  0FCF  1303               	clrf	(___fldiv@new_exp)
  8301  0FD0  01CD               	clrf	(___fldiv@new_exp+1)
  8302  0FD1  01CE               	line	167
  8303                           	
  8304                           l2034:	
  8305  0FD2                     	movlw	high highword(0)
  8306  0FD2  3000               	movwf	(___fldiv@b+3)
  8307  0FD3  00C2               	movlw	low highword(0)
  8308  0FD4  3000               	movwf	(___fldiv@b+2)
  8309  0FD5  00C1               	movlw	high(0)
  8310  0FD6  3000               	movwf	(___fldiv@b+1)
  8311  0FD7  00C0               	movlw	low(0)
  8312  0FD8  3000               	movwf	(___fldiv@b)
  8313  0FD9  00BF               
  8314                           	line	169
  8315                           	
  8316                           l2036:	
  8317  0FDA                     	clrf	(___fldiv@sign)
  8318  0FDA  01CC               	line	170
  8319                           	
  8320                           l694:	
  8321  0FDB                     	line	173
  8322                           	bcf	status, 5	;RP0=0, select bank0
  8323  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  8324  0FDC  1303               	movf	(___fldiv@new_exp),w
  8325  0FDD  084D               	movwf	(??___fldiv+0)+0
  8326  0FDE  00C3               	movf	(??___fldiv+0)+0,w
  8327  0FDF  0843               	movwf	(___fldiv@bexp)
  8328  0FE0  00D3               	line	175
  8329                           	
  8330                           l2038:	
  8331  0FE1                     	btfss	(___fldiv@bexp),(0)&7
  8332  0FE1  1C53               	goto	u2491
  8333  0FE2  2FE4               	goto	u2490
  8334  0FE3  2FE5               u2491:
  8335  0FE4                     	goto	l2042
  8336  0FE4  2FE7               u2490:
  8337  0FE5                     	line	176
  8338                           	
  8339                           l2040:	
  8340  0FE5                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  8341  0FE5  17C1               	line	177
  8342                           	goto	l696
  8343  0FE6  2FEB               	line	179
  8344                           	
  8345                           l695:	
  8346  0FE7                     	line	180
  8347                           	
  8348                           l2042:	
  8349  0FE7                     	movlw	low(07Fh)
  8350  0FE7  307F               	movwf	(??___fldiv+0)+0
  8351  0FE8  00C3               	movf	(??___fldiv+0)+0,w
  8352  0FE9  0843               	andwf	0+(___fldiv@b)+02h,f
  8353  0FEA  05C1               	line	181
  8354                           	
  8355                           l696:	
  8356  0FEB                     	line	182
  8357                           	movf	(___fldiv@bexp),w
  8358  0FEB  0853               	movwf	(??___fldiv+0)+0
  8359  0FEC  00C3               	clrc
  8360  0FED  1003               	rrf	(??___fldiv+0)+0,w
  8361  0FEE  0C43               	movwf	(??___fldiv+1)+0
  8362  0FEF  00C4               	movf	(??___fldiv+1)+0,w
  8363  0FF0  0844               	movwf	0+(___fldiv@b)+03h
  8364  0FF1  00C2               	line	183
  8365                           	movf	(___fldiv@sign),w
  8366  0FF2  084C               	movwf	(??___fldiv+0)+0
  8367  0FF3  00C3               	movf	(??___fldiv+0)+0,w
  8368  0FF4  0843               	iorwf	0+(___fldiv@b)+03h,f
  8369  0FF5  04C2               	line	184
  8370                           	
  8371                           l2044:	
  8372  0FF6                     	movf	(___fldiv@b+3),w
  8373  0FF6  0842               	movwf	(?___fldiv+3)
  8374  0FF7  00BE               	movf	(___fldiv@b+2),w
  8375  0FF8  0841               	movwf	(?___fldiv+2)
  8376  0FF9  00BD               	movf	(___fldiv@b+1),w
  8377  0FFA  0840               	movwf	(?___fldiv+1)
  8378  0FFB  00BC               	movf	(___fldiv@b),w
  8379  0FFC  083F               	movwf	(?___fldiv)
  8380  0FFD  00BB               
  8381                           	goto	l674
  8382  0FFE  2FFF               	
  8383                           l2046:	
  8384  0FFF                     	line	185
  8385                           	
  8386                           l674:	
  8387  0FFF                     	return
  8388  0FFF  0008               	opt stack 0
  8389                           GLOBAL	__end_of___fldiv
  8390                           	__end_of___fldiv:
  8391  1000                     	signat	___fldiv,8316
  8392                           	global	_PWM_Max_Duty
  8393                           
  8394 ;; *************** function _PWM_Max_Duty *****************
  8395 ;; Defined at:
  8396 ;;		line 9 in file "./pwm.h"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;		None
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  2    7[BANK0 ] int 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0, pclath, cstack
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8410 ;;      Params:         0       2       0       0       0
  8411 ;;      Locals:         0       0       0       0       0
  8412 ;;      Temps:          0       4       0       0       0
  8413 ;;      Totals:         0       6       0       0       0
  8414 ;;Total ram usage:        6 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:    2
  8417 ;; This function calls:
  8418 ;;		___aldiv
  8419 ;; This function is called by:
  8420 ;;		_PWM1_Duty
  8421 ;;		_PWM2_Duty
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  8425                           	file	"./pwm.h"
  8426                           	line	9
  8427                           global __ptext16
  8428                           __ptext16:	;psect for function _PWM_Max_Duty
  8429  0802                     psect	text16
  8430                           	file	"./pwm.h"
  8431                           	line	9
  8432                           	global	__size_of_PWM_Max_Duty
  8433                           	__size_of_PWM_Max_Duty	equ	__end_of_PWM_Max_Duty-_PWM_Max_Duty
  8434  003E                     	
  8435                           _PWM_Max_Duty:	
  8436  0802                     ;incstack = 0
  8437                           	opt	stack 4
  8438                           ; Regs used in _PWM_Max_Duty: [wreg+status,2+status,0+pclath+cstack]
  8439                           	line	11
  8440                           	
  8441                           l2852:	
  8442  0802                     ;./pwm.h: 11:   return(20000000/(freq*4));
  8443                           	bsf	status, 5	;RP0=1, select bank1
  8444  0802  1683               	bcf	status, 6	;RP1=0, select bank1
  8445  0803  1303               	movf	(_freq)^080h,w
  8446  0804  083B               	bcf	status, 5	;RP0=0, select bank0
  8447  0805  1283               	bcf	status, 6	;RP1=0, select bank0
  8448  0806  1303               	movwf	(??_PWM_Max_Duty+0)+0
  8449  0807  00A9               	bsf	status, 5	;RP0=1, select bank1
  8450  0808  1683               	bcf	status, 6	;RP1=0, select bank1
  8451  0809  1303               	movf	(_freq+1)^080h,w
  8452  080A  083C               	bcf	status, 5	;RP0=0, select bank0
  8453  080B  1283               	bcf	status, 6	;RP1=0, select bank0
  8454  080C  1303               	movwf	((??_PWM_Max_Duty+0)+0+1)
  8455  080D  00AA               	bsf	status, 5	;RP0=1, select bank1
  8456  080E  1683               	bcf	status, 6	;RP1=0, select bank1
  8457  080F  1303               	movf	(_freq+2)^080h,w
  8458  0810  083D               	bcf	status, 5	;RP0=0, select bank0
  8459  0811  1283               	bcf	status, 6	;RP1=0, select bank0
  8460  0812  1303               	movwf	((??_PWM_Max_Duty+0)+0+2)
  8461  0813  00AB               	bsf	status, 5	;RP0=1, select bank1
  8462  0814  1683               	bcf	status, 6	;RP1=0, select bank1
  8463  0815  1303               	movf	(_freq+3)^080h,w
  8464  0816  083E               	bcf	status, 5	;RP0=0, select bank0
  8465  0817  1283               	bcf	status, 6	;RP1=0, select bank0
  8466  0818  1303               	movwf	((??_PWM_Max_Duty+0)+0+3)
  8467  0819  00AC               	movlw	02h
  8468  081A  3002               u4045:
  8469  081B                     	clrc
  8470  081B  1003               	rlf	(??_PWM_Max_Duty+0)+0,f
  8471  081C  0DA9               	rlf	(??_PWM_Max_Duty+0)+1,f
  8472  081D  0DAA               	rlf	(??_PWM_Max_Duty+0)+2,f
  8473  081E  0DAB               	rlf	(??_PWM_Max_Duty+0)+3,f
  8474  081F  0DAC               u4040:
  8475  0820                     	addlw	-1
  8476  0820  3EFF               	skipz
  8477  0821  1D03               	goto	u4045
  8478  0822  281B               	movf	3+(??_PWM_Max_Duty+0)+0,w
  8479  0823  082C               	movwf	(___aldiv@divisor+3)
  8480  0824  00F5               	movf	2+(??_PWM_Max_Duty+0)+0,w
  8481  0825  082B               	movwf	(___aldiv@divisor+2)
  8482  0826  00F4               	movf	1+(??_PWM_Max_Duty+0)+0,w
  8483  0827  082A               	movwf	(___aldiv@divisor+1)
  8484  0828  00F3               	movf	0+(??_PWM_Max_Duty+0)+0,w
  8485  0829  0829               	movwf	(___aldiv@divisor)
  8486  082A  00F2               
  8487                           	movlw	01h
  8488  082B  3001               	movwf	(___aldiv@dividend+3)
  8489  082C  00F9               	movlw	031h
  8490  082D  3031               	movwf	(___aldiv@dividend+2)
  8491  082E  00F8               	movlw	02Dh
  8492  082F  302D               	movwf	(___aldiv@dividend+1)
  8493  0830  00F7               	movlw	0
  8494  0831  3000               	movwf	(___aldiv@dividend)
  8495  0832  00F6               
  8496                           	fcall	___aldiv
  8497  0833  120A  158A  2229  120A  158A  	movf	(1+(?___aldiv)),w
  8498  0838  0873               	bcf	status, 5	;RP0=0, select bank0
  8499  0839  1283               	bcf	status, 6	;RP1=0, select bank0
  8500  083A  1303               	movwf	(?_PWM_Max_Duty+1)
  8501  083B  00A8               	movf	(0+(?___aldiv)),w
  8502  083C  0872               	movwf	(?_PWM_Max_Duty)
  8503  083D  00A7               	goto	l135
  8504  083E  283F               	
  8505                           l2854:	
  8506  083F                     	line	12
  8507                           	
  8508                           l135:	
  8509  083F                     	return
  8510  083F  0008               	opt stack 0
  8511                           GLOBAL	__end_of_PWM_Max_Duty
  8512                           	__end_of_PWM_Max_Duty:
  8513  0840                     	signat	_PWM_Max_Duty,90
  8514                           	global	_PWM1_Start
  8515                           
  8516 ;; *************** function _PWM1_Start *****************
  8517 ;; Defined at:
  8518 ;;		line 43 in file "./pwm.h"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  2  148[None  ] int 
  8525 ;; Registers used:
  8526 ;;		None
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8532 ;;      Params:         0       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0
  8535 ;;      Totals:         0       0       0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    1
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_main
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  8546                           	line	43
  8547                           global __ptext17
  8548                           __ptext17:	;psect for function _PWM1_Start
  8549  1564                     psect	text17
  8550                           	file	"./pwm.h"
  8551                           	line	43
  8552                           	global	__size_of_PWM1_Start
  8553                           	__size_of_PWM1_Start	equ	__end_of_PWM1_Start-_PWM1_Start
  8554  0009                     	
  8555                           _PWM1_Start:	
  8556  1564                     ;incstack = 0
  8557                           	opt	stack 6
  8558                           ; Regs used in _PWM1_Start: []
  8559                           	line	45
  8560                           	
  8561                           l2378:	
  8562  1564                     ;./pwm.h: 45:   CCP1M3 = 1;
  8563                           	bcf	status, 5	;RP0=0, select bank0
  8564  1564  1283               	bcf	status, 6	;RP1=0, select bank0
  8565  1565  1303               	bsf	(187/8),(187)&7	;volatile
  8566  1566  1597               	line	46
  8567                           ;./pwm.h: 46:   CCP1M2 = 1;
  8568                           	bsf	(186/8),(186)&7	;volatile
  8569  1567  1517               	line	57
  8570                           ;./pwm.h: 57:   TMR2ON = 1;
  8571                           	bsf	(146/8),(146)&7	;volatile
  8572  1568  1512               	line	58
  8573                           ;./pwm.h: 58:   TRISC2 = 0;
  8574                           	bsf	status, 5	;RP0=1, select bank1
  8575  1569  1683               	bcf	status, 6	;RP1=0, select bank1
  8576  156A  1303               	bcf	(1082/8)^080h,(1082)&7	;volatile
  8577  156B  1107               	line	59
  8578                           	
  8579                           l149:	
  8580  156C                     	return
  8581  156C  0008               	opt stack 0
  8582                           GLOBAL	__end_of_PWM1_Start
  8583                           	__end_of_PWM1_Start:
  8584  156D                     	signat	_PWM1_Start,90
  8585                           	global	_PWM1_Init
  8586                           
  8587 ;; *************** function _PWM1_Init *****************
  8588 ;; Defined at:
  8589 ;;		line 3 in file "./pwm.h"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  fre             4    7[BANK0 ] long 
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;		None
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  2    7[BANK0 ] int 
  8596 ;; Registers used:
  8597 ;;		wreg, status,2, status,0, pclath, cstack
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8603 ;;      Params:         0       4       0       0       0
  8604 ;;      Locals:         0       0       0       0       0
  8605 ;;      Temps:          0       4       0       0       0
  8606 ;;      Totals:         0       8       0       0       0
  8607 ;;Total ram usage:        8 bytes
  8608 ;; Hardware stack levels used:    1
  8609 ;; Hardware stack levels required when called:    2
  8610 ;; This function calls:
  8611 ;;		___aldiv
  8612 ;; This function is called by:
  8613 ;;		_main
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  8617                           	line	3
  8618                           global __ptext18
  8619                           __ptext18:	;psect for function _PWM1_Init
  8620  1706                     psect	text18
  8621                           	file	"./pwm.h"
  8622                           	line	3
  8623                           	global	__size_of_PWM1_Init
  8624                           	__size_of_PWM1_Init	equ	__end_of_PWM1_Init-_PWM1_Init
  8625  004F                     	
  8626                           _PWM1_Init:	
  8627  1706                     ;incstack = 0
  8628                           	opt	stack 5
  8629                           ; Regs used in _PWM1_Init: [wreg+status,2+status,0+pclath+cstack]
  8630                           	line	5
  8631                           	
  8632                           l3134:	
  8633  1706                     ;./pwm.h: 3: PWM1_Init(long fre);./pwm.h: 4: {;./pwm.h: 5:   PR2 = (20000000/(fre*4*4)) 
                                 - 1;
  8634                           	bcf	status, 5	;RP0=0, select bank0
  8635  1706  1283               	bcf	status, 6	;RP1=0, select bank0
  8636  1707  1303               	movf	(PWM1_Init@fre),w
  8637  1708  0827               	movwf	(??_PWM1_Init+0)+0
  8638  1709  00AB               	movf	(PWM1_Init@fre+1),w
  8639  170A  0828               	movwf	((??_PWM1_Init+0)+0+1)
  8640  170B  00AC               	movf	(PWM1_Init@fre+2),w
  8641  170C  0829               	movwf	((??_PWM1_Init+0)+0+2)
  8642  170D  00AD               	movf	(PWM1_Init@fre+3),w
  8643  170E  082A               	movwf	((??_PWM1_Init+0)+0+3)
  8644  170F  00AE               	movlw	02h
  8645  1710  3002               u4695:
  8646  1711                     	clrc
  8647  1711  1003               	rlf	(??_PWM1_Init+0)+0,f
  8648  1712  0DAB               	rlf	(??_PWM1_Init+0)+1,f
  8649  1713  0DAC               	rlf	(??_PWM1_Init+0)+2,f
  8650  1714  0DAD               	rlf	(??_PWM1_Init+0)+3,f
  8651  1715  0DAE               u4690:
  8652  1716                     	addlw	-1
  8653  1716  3EFF               	skipz
  8654  1717  1D03               	goto	u4695
  8655  1718  2F11               	movlw	02h
  8656  1719  3002               u4705:
  8657  171A                     	clrc
  8658  171A  1003               	rlf	(??_PWM1_Init+0)+0,f
  8659  171B  0DAB               	rlf	(??_PWM1_Init+0)+1,f
  8660  171C  0DAC               	rlf	(??_PWM1_Init+0)+2,f
  8661  171D  0DAD               	rlf	(??_PWM1_Init+0)+3,f
  8662  171E  0DAE               u4700:
  8663  171F                     	addlw	-1
  8664  171F  3EFF               	skipz
  8665  1720  1D03               	goto	u4705
  8666  1721  2F1A               	movf	3+(??_PWM1_Init+0)+0,w
  8667  1722  082E               	movwf	(___aldiv@divisor+3)
  8668  1723  00F5               	movf	2+(??_PWM1_Init+0)+0,w
  8669  1724  082D               	movwf	(___aldiv@divisor+2)
  8670  1725  00F4               	movf	1+(??_PWM1_Init+0)+0,w
  8671  1726  082C               	movwf	(___aldiv@divisor+1)
  8672  1727  00F3               	movf	0+(??_PWM1_Init+0)+0,w
  8673  1728  082B               	movwf	(___aldiv@divisor)
  8674  1729  00F2               
  8675                           	movlw	01h
  8676  172A  3001               	movwf	(___aldiv@dividend+3)
  8677  172B  00F9               	movlw	031h
  8678  172C  3031               	movwf	(___aldiv@dividend+2)
  8679  172D  00F8               	movlw	02Dh
  8680  172E  302D               	movwf	(___aldiv@dividend+1)
  8681  172F  00F7               	movlw	0
  8682  1730  3000               	movwf	(___aldiv@dividend)
  8683  1731  00F6               
  8684                           	fcall	___aldiv
  8685  1732  120A  158A  2229  160A  118A  	movf	(0+(?___aldiv)),w
  8686  1737  0872               	addlw	0FFh
  8687  1738  3EFF               	bsf	status, 5	;RP0=1, select bank1
  8688  1739  1683               	bcf	status, 6	;RP1=0, select bank1
  8689  173A  1303               	movwf	(146)^080h	;volatile
  8690  173B  0092               	line	6
  8691                           	
  8692                           l3136:	
  8693  173C                     ;./pwm.h: 6:   freq = fre;
  8694                           	bcf	status, 5	;RP0=0, select bank0
  8695  173C  1283               	bcf	status, 6	;RP1=0, select bank0
  8696  173D  1303               	movf	(PWM1_Init@fre+3),w
  8697  173E  082A               	bsf	status, 5	;RP0=1, select bank1
  8698  173F  1683               	bcf	status, 6	;RP1=0, select bank1
  8699  1740  1303               	movwf	(_freq+3)^080h
  8700  1741  00BE               	bcf	status, 5	;RP0=0, select bank0
  8701  1742  1283               	bcf	status, 6	;RP1=0, select bank0
  8702  1743  1303               	movf	(PWM1_Init@fre+2),w
  8703  1744  0829               	bsf	status, 5	;RP0=1, select bank1
  8704  1745  1683               	bcf	status, 6	;RP1=0, select bank1
  8705  1746  1303               	movwf	(_freq+2)^080h
  8706  1747  00BD               	bcf	status, 5	;RP0=0, select bank0
  8707  1748  1283               	bcf	status, 6	;RP1=0, select bank0
  8708  1749  1303               	movf	(PWM1_Init@fre+1),w
  8709  174A  0828               	bsf	status, 5	;RP0=1, select bank1
  8710  174B  1683               	bcf	status, 6	;RP1=0, select bank1
  8711  174C  1303               	movwf	(_freq+1)^080h
  8712  174D  00BC               	bcf	status, 5	;RP0=0, select bank0
  8713  174E  1283               	bcf	status, 6	;RP1=0, select bank0
  8714  174F  1303               	movf	(PWM1_Init@fre),w
  8715  1750  0827               	bsf	status, 5	;RP0=1, select bank1
  8716  1751  1683               	bcf	status, 6	;RP1=0, select bank1
  8717  1752  1303               	movwf	(_freq)^080h
  8718  1753  00BB               
  8719                           	line	7
  8720                           	
  8721                           l132:	
  8722  1754                     	return
  8723  1754  0008               	opt stack 0
  8724                           GLOBAL	__end_of_PWM1_Init
  8725                           	__end_of_PWM1_Init:
  8726  1755                     	signat	_PWM1_Init,4218
  8727                           	global	___aldiv
  8728                           
  8729 ;; *************** function ___aldiv *****************
  8730 ;; Defined at:
  8731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  divisor         4    2[COMMON] long 
  8734 ;;  dividend        4    6[COMMON] long 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  quotient        4    3[BANK0 ] long 
  8737 ;;  sign            1    2[BANK0 ] unsigned char 
  8738 ;;  counter         1    1[BANK0 ] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  4    2[COMMON] long 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8748 ;;      Params:         8       0       0       0       0
  8749 ;;      Locals:         0       6       0       0       0
  8750 ;;      Temps:          0       1       0       0       0
  8751 ;;      Totals:         8       7       0       0       0
  8752 ;;Total ram usage:       15 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    1
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_PWM1_Init
  8759 ;;		_PWM_Max_Duty
  8760 ;;		_PWM2_Init
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  8764                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  8765                           	line	5
  8766                           global __ptext19
  8767                           __ptext19:	;psect for function ___aldiv
  8768  0A29                     psect	text19
  8769                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  8770                           	line	5
  8771                           	global	__size_of___aldiv
  8772                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  8773  00A6                     	
  8774                           ___aldiv:	
  8775  0A29                     ;incstack = 0
  8776                           	opt	stack 5
  8777                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8778                           	line	13
  8779                           	
  8780                           l2788:	
  8781  0A29                     	bcf	status, 5	;RP0=0, select bank0
  8782  0A29  1283               	bcf	status, 6	;RP1=0, select bank0
  8783  0A2A  1303               	clrf	(___aldiv@sign)
  8784  0A2B  01A2               	line	14
  8785                           	
  8786                           l2790:	
  8787  0A2C                     	btfss	(___aldiv@divisor+3),7
  8788  0A2C  1FF5               	goto	u3871
  8789  0A2D  2A2F               	goto	u3870
  8790  0A2E  2A30               u3871:
  8791  0A2F                     	goto	l388
  8792  0A2F  2A3D               u3870:
  8793  0A30                     	line	15
  8794                           	
  8795                           l2792:	
  8796  0A30                     	comf	(___aldiv@divisor),f
  8797  0A30  09F2               	comf	(___aldiv@divisor+1),f
  8798  0A31  09F3               	comf	(___aldiv@divisor+2),f
  8799  0A32  09F4               	comf	(___aldiv@divisor+3),f
  8800  0A33  09F5               	incf	(___aldiv@divisor),f
  8801  0A34  0AF2               	skipnz
  8802  0A35  1903               	incf	(___aldiv@divisor+1),f
  8803  0A36  0AF3               	skipnz
  8804  0A37  1903               	incf	(___aldiv@divisor+2),f
  8805  0A38  0AF4               	skipnz
  8806  0A39  1903               	incf	(___aldiv@divisor+3),f
  8807  0A3A  0AF5               	line	16
  8808                           	clrf	(___aldiv@sign)
  8809  0A3B  01A2               	incf	(___aldiv@sign),f
  8810  0A3C  0AA2               	line	17
  8811                           	
  8812                           l388:	
  8813  0A3D                     	line	18
  8814                           	btfss	(___aldiv@dividend+3),7
  8815  0A3D  1FF9               	goto	u3881
  8816  0A3E  2A40               	goto	u3880
  8817  0A3F  2A41               u3881:
  8818  0A40                     	goto	l2798
  8819  0A40  2A51               u3880:
  8820  0A41                     	line	19
  8821                           	
  8822                           l2794:	
  8823  0A41                     	comf	(___aldiv@dividend),f
  8824  0A41  09F6               	comf	(___aldiv@dividend+1),f
  8825  0A42  09F7               	comf	(___aldiv@dividend+2),f
  8826  0A43  09F8               	comf	(___aldiv@dividend+3),f
  8827  0A44  09F9               	incf	(___aldiv@dividend),f
  8828  0A45  0AF6               	skipnz
  8829  0A46  1903               	incf	(___aldiv@dividend+1),f
  8830  0A47  0AF7               	skipnz
  8831  0A48  1903               	incf	(___aldiv@dividend+2),f
  8832  0A49  0AF8               	skipnz
  8833  0A4A  1903               	incf	(___aldiv@dividend+3),f
  8834  0A4B  0AF9               	line	20
  8835                           	
  8836                           l2796:	
  8837  0A4C                     	movlw	low(01h)
  8838  0A4C  3001               	movwf	(??___aldiv+0)+0
  8839  0A4D  00A0               	movf	(??___aldiv+0)+0,w
  8840  0A4E  0820               	xorwf	(___aldiv@sign),f
  8841  0A4F  06A2               	goto	l2798
  8842  0A50  2A51               	line	21
  8843                           	
  8844                           l389:	
  8845  0A51                     	line	22
  8846                           	
  8847                           l2798:	
  8848  0A51                     	movlw	high highword(0)
  8849  0A51  3000               	movwf	(___aldiv@quotient+3)
  8850  0A52  00A6               	movlw	low highword(0)
  8851  0A53  3000               	movwf	(___aldiv@quotient+2)
  8852  0A54  00A5               	movlw	high(0)
  8853  0A55  3000               	movwf	(___aldiv@quotient+1)
  8854  0A56  00A4               	movlw	low(0)
  8855  0A57  3000               	movwf	(___aldiv@quotient)
  8856  0A58  00A3               
  8857                           	line	23
  8858                           	
  8859                           l2800:	
  8860  0A59                     	movf	(___aldiv@divisor+3),w
  8861  0A59  0875               	iorwf	(___aldiv@divisor+2),w
  8862  0A5A  0474               	iorwf	(___aldiv@divisor+1),w
  8863  0A5B  0473               	iorwf	(___aldiv@divisor),w
  8864  0A5C  0472               	skipnz
  8865  0A5D  1903               	goto	u3891
  8866  0A5E  2A60               	goto	u3890
  8867  0A5F  2A61               u3891:
  8868  0A60                     	goto	l2820
  8869  0A60  2AB4               u3890:
  8870  0A61                     	line	24
  8871                           	
  8872                           l2802:	
  8873  0A61                     	clrf	(___aldiv@counter)
  8874  0A61  01A1               	incf	(___aldiv@counter),f
  8875  0A62  0AA1               	line	25
  8876                           	goto	l2806
  8877  0A63  2A72               	
  8878                           l392:	
  8879  0A64                     	line	26
  8880                           	
  8881                           l2804:	
  8882  0A64                     	movlw	01h
  8883  0A64  3001               	movwf	(??___aldiv+0)+0
  8884  0A65  00A0               u3905:
  8885  0A66                     	clrc
  8886  0A66  1003               	rlf	(___aldiv@divisor),f
  8887  0A67  0DF2               	rlf	(___aldiv@divisor+1),f
  8888  0A68  0DF3               	rlf	(___aldiv@divisor+2),f
  8889  0A69  0DF4               	rlf	(___aldiv@divisor+3),f
  8890  0A6A  0DF5               	decfsz	(??___aldiv+0)+0
  8891  0A6B  0BA0               	goto	u3905
  8892  0A6C  2A66               	line	27
  8893                           	movlw	low(01h)
  8894  0A6D  3001               	movwf	(??___aldiv+0)+0
  8895  0A6E  00A0               	movf	(??___aldiv+0)+0,w
  8896  0A6F  0820               	addwf	(___aldiv@counter),f
  8897  0A70  07A1               	goto	l2806
  8898  0A71  2A72               	line	28
  8899                           	
  8900                           l391:	
  8901  0A72                     	line	25
  8902                           	
  8903                           l2806:	
  8904  0A72                     	btfss	(___aldiv@divisor+3),(31)&7
  8905  0A72  1FF5               	goto	u3911
  8906  0A73  2A75               	goto	u3910
  8907  0A74  2A76               u3911:
  8908  0A75                     	goto	l2804
  8909  0A75  2A64               u3910:
  8910  0A76                     	goto	l2808
  8911  0A76  2A78               	
  8912                           l393:	
  8913  0A77                     	goto	l2808
  8914  0A77  2A78               	line	29
  8915                           	
  8916                           l394:	
  8917  0A78                     	line	30
  8918                           	
  8919                           l2808:	
  8920  0A78                     	movlw	01h
  8921  0A78  3001               	movwf	(??___aldiv+0)+0
  8922  0A79  00A0               u3925:
  8923  0A7A                     	clrc
  8924  0A7A  1003               	rlf	(___aldiv@quotient),f
  8925  0A7B  0DA3               	rlf	(___aldiv@quotient+1),f
  8926  0A7C  0DA4               	rlf	(___aldiv@quotient+2),f
  8927  0A7D  0DA5               	rlf	(___aldiv@quotient+3),f
  8928  0A7E  0DA6               	decfsz	(??___aldiv+0)+0
  8929  0A7F  0BA0               	goto	u3925
  8930  0A80  2A7A               	line	31
  8931                           	
  8932                           l2810:	
  8933  0A81                     	movf	(___aldiv@divisor+3),w
  8934  0A81  0875               	subwf	(___aldiv@dividend+3),w
  8935  0A82  0279               	skipz
  8936  0A83  1D03               	goto	u3935
  8937  0A84  2A8F               	movf	(___aldiv@divisor+2),w
  8938  0A85  0874               	subwf	(___aldiv@dividend+2),w
  8939  0A86  0278               	skipz
  8940  0A87  1D03               	goto	u3935
  8941  0A88  2A8F               	movf	(___aldiv@divisor+1),w
  8942  0A89  0873               	subwf	(___aldiv@dividend+1),w
  8943  0A8A  0277               	skipz
  8944  0A8B  1D03               	goto	u3935
  8945  0A8C  2A8F               	movf	(___aldiv@divisor),w
  8946  0A8D  0872               	subwf	(___aldiv@dividend),w
  8947  0A8E  0276               u3935:
  8948  0A8F                     	skipc
  8949  0A8F  1C03               	goto	u3931
  8950  0A90  2A92               	goto	u3930
  8951  0A91  2A93               u3931:
  8952  0A92                     	goto	l2816
  8953  0A92  2AA3               u3930:
  8954  0A93                     	line	32
  8955                           	
  8956                           l2812:	
  8957  0A93                     	movf	(___aldiv@divisor),w
  8958  0A93  0872               	subwf	(___aldiv@dividend),f
  8959  0A94  02F6               	movf	(___aldiv@divisor+1),w
  8960  0A95  0873               	skipc
  8961  0A96  1C03               	incfsz	(___aldiv@divisor+1),w
  8962  0A97  0F73               	subwf	(___aldiv@dividend+1),f
  8963  0A98  02F7               	movf	(___aldiv@divisor+2),w
  8964  0A99  0874               	skipc
  8965  0A9A  1C03               	incfsz	(___aldiv@divisor+2),w
  8966  0A9B  0F74               	subwf	(___aldiv@dividend+2),f
  8967  0A9C  02F8               	movf	(___aldiv@divisor+3),w
  8968  0A9D  0875               	skipc
  8969  0A9E  1C03               	incfsz	(___aldiv@divisor+3),w
  8970  0A9F  0F75               	subwf	(___aldiv@dividend+3),f
  8971  0AA0  02F9               	line	33
  8972                           	
  8973                           l2814:	
  8974  0AA1                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  8975  0AA1  1423               	goto	l2816
  8976  0AA2  2AA3               	line	34
  8977                           	
  8978                           l395:	
  8979  0AA3                     	line	35
  8980                           	
  8981                           l2816:	
  8982  0AA3                     	movlw	01h
  8983  0AA3  3001               u3945:
  8984  0AA4                     	clrc
  8985  0AA4  1003               	rrf	(___aldiv@divisor+3),f
  8986  0AA5  0CF5               	rrf	(___aldiv@divisor+2),f
  8987  0AA6  0CF4               	rrf	(___aldiv@divisor+1),f
  8988  0AA7  0CF3               	rrf	(___aldiv@divisor),f
  8989  0AA8  0CF2               	addlw	-1
  8990  0AA9  3EFF               	skipz
  8991  0AAA  1D03               	goto	u3945
  8992  0AAB  2AA4               
  8993                           	line	36
  8994                           	
  8995                           l2818:	
  8996  0AAC                     	movlw	01h
  8997  0AAC  3001               	subwf	(___aldiv@counter),f
  8998  0AAD  02A1               	btfss	status,2
  8999  0AAE  1D03               	goto	u3951
  9000  0AAF  2AB1               	goto	u3950
  9001  0AB0  2AB2               u3951:
  9002  0AB1                     	goto	l2808
  9003  0AB1  2A78               u3950:
  9004  0AB2                     	goto	l2820
  9005  0AB2  2AB4               	
  9006                           l396:	
  9007  0AB3                     	goto	l2820
  9008  0AB3  2AB4               	line	37
  9009                           	
  9010                           l390:	
  9011  0AB4                     	line	38
  9012                           	
  9013                           l2820:	
  9014  0AB4                     	movf	((___aldiv@sign)),w
  9015  0AB4  0822               	btfsc	status,2
  9016  0AB5  1903               	goto	u3961
  9017  0AB6  2AB8               	goto	u3960
  9018  0AB7  2AB9               u3961:
  9019  0AB8                     	goto	l2824
  9020  0AB8  2AC5               u3960:
  9021  0AB9                     	line	39
  9022                           	
  9023                           l2822:	
  9024  0AB9                     	comf	(___aldiv@quotient),f
  9025  0AB9  09A3               	comf	(___aldiv@quotient+1),f
  9026  0ABA  09A4               	comf	(___aldiv@quotient+2),f
  9027  0ABB  09A5               	comf	(___aldiv@quotient+3),f
  9028  0ABC  09A6               	incf	(___aldiv@quotient),f
  9029  0ABD  0AA3               	skipnz
  9030  0ABE  1903               	incf	(___aldiv@quotient+1),f
  9031  0ABF  0AA4               	skipnz
  9032  0AC0  1903               	incf	(___aldiv@quotient+2),f
  9033  0AC1  0AA5               	skipnz
  9034  0AC2  1903               	incf	(___aldiv@quotient+3),f
  9035  0AC3  0AA6               	goto	l2824
  9036  0AC4  2AC5               	
  9037                           l397:	
  9038  0AC5                     	line	40
  9039                           	
  9040                           l2824:	
  9041  0AC5                     	movf	(___aldiv@quotient+3),w
  9042  0AC5  0826               	movwf	(?___aldiv+3)
  9043  0AC6  00F5               	movf	(___aldiv@quotient+2),w
  9044  0AC7  0825               	movwf	(?___aldiv+2)
  9045  0AC8  00F4               	movf	(___aldiv@quotient+1),w
  9046  0AC9  0824               	movwf	(?___aldiv+1)
  9047  0ACA  00F3               	movf	(___aldiv@quotient),w
  9048  0ACB  0823               	movwf	(?___aldiv)
  9049  0ACC  00F2               
  9050                           	goto	l398
  9051  0ACD  2ACE               	
  9052                           l2826:	
  9053  0ACE                     	line	41
  9054                           	
  9055                           l398:	
  9056  0ACE                     	return
  9057  0ACE  0008               	opt stack 0
  9058                           GLOBAL	__end_of___aldiv
  9059                           	__end_of___aldiv:
  9060  0ACF                     	signat	___aldiv,8316
  9061                           	global	_Lcd_Write_String
  9062                           
  9063 ;; *************** function _Lcd_Write_String *****************
  9064 ;; Defined at:
  9065 ;;		line 98 in file "./lcd.h"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  a               2    7[COMMON] PTR unsigned char 
  9068 ;;		 -> main@druga(20), main@prva(20), Druga_kolona@s(20), 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  i               2    3[BANK0 ] int 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9080 ;;      Params:         2       0       0       0       0
  9081 ;;      Locals:         0       2       0       0       0
  9082 ;;      Temps:          0       3       0       0       0
  9083 ;;      Totals:         2       5       0       0       0
  9084 ;;Total ram usage:        7 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:    3
  9087 ;; This function calls:
  9088 ;;		_Lcd_Write_Char
  9089 ;; This function is called by:
  9090 ;;		_main
  9091 ;;		_Druga_kolona
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  9095                           	file	"./lcd.h"
  9096                           	line	98
  9097                           global __ptext20
  9098                           __ptext20:	;psect for function _Lcd_Write_String
  9099  07BF                     psect	text20
  9100                           	file	"./lcd.h"
  9101                           	line	98
  9102                           	global	__size_of_Lcd_Write_String
  9103                           	__size_of_Lcd_Write_String	equ	__end_of_Lcd_Write_String-_Lcd_Write_String
  9104  0041                     	
  9105                           _Lcd_Write_String:	
  9106  07BF                     ;incstack = 0
  9107                           	opt	stack 4
  9108                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9109                           	line	101
  9110                           	
  9111                           l3126:	
  9112  07BF                     ;./lcd.h: 98: void Lcd_Write_String(char *a);./lcd.h: 99: {;./lcd.h: 100:  int i;;./lcd.
                                 h: 101:  for(i=0;a[i]!='\0';i++)
  9113                           	bcf	status, 5	;RP0=0, select bank0
  9114  07BF  1283               	bcf	status, 6	;RP1=0, select bank0
  9115  07C0  1303               	clrf	(Lcd_Write_String@i)
  9116  07C1  01A3               	clrf	(Lcd_Write_String@i+1)
  9117  07C2  01A4               	goto	l3132
  9118  07C3  2FE6               	
  9119                           l119:	
  9120  07C4                     	line	102
  9121                           	
  9122                           l3128:	
  9123  07C4                     ;./lcd.h: 102:     Lcd_Write_Char(a[i]);
  9124                           	movf	(Lcd_Write_String@i),w
  9125  07C4  0823               	addwf	(Lcd_Write_String@a),w
  9126  07C5  0777               	movwf	(??_Lcd_Write_String+1)+0
  9127  07C6  00A1               	movf	(Lcd_Write_String@a+1),w
  9128  07C7  0878               	movwf	(??_Lcd_Write_String+0)+0
  9129  07C8  00A0               	skipnc
  9130  07C9  1803               	incf	(??_Lcd_Write_String+0)+0,f
  9131  07CA  0AA0               	btfss	(Lcd_Write_String@i),7
  9132  07CB  1FA3               	goto	u4660
  9133  07CC  2FCE               	decf	(??_Lcd_Write_String+0)+0,f
  9134  07CD  03A0               u4660:
  9135  07CE                     	bcf	status, 5	;RP0=0, select bank0
  9136  07CE  1283               	bcf	status, 6	;RP1=0, select bank0
  9137  07CF  1303               	movf	(??_Lcd_Write_String+0)+0,w
  9138  07D0  0820               	movwf	0+((??_Lcd_Write_String+1)+0)+1
  9139  07D1  00A2               	movf	0+(??_Lcd_Write_String+1)+0,w
  9140  07D2  0821               	movwf	fsr0
  9141  07D3  0084               	bsf	status,7
  9142  07D4  1783               	btfss	1+(??_Lcd_Write_String+1)+0,0
  9143  07D5  1C22               	bcf	status,7
  9144  07D6  1383               	movf	indf,w
  9145  07D7  0800               	fcall	_Lcd_Write_Char
  9146  07D8  160A  118A  263F  120A  118A  	
  9147                           l3130:	
  9148  07DD                     	movlw	01h
  9149  07DD  3001               	bcf	status, 5	;RP0=0, select bank0
  9150  07DE  1283               	bcf	status, 6	;RP1=0, select bank0
  9151  07DF  1303               	addwf	(Lcd_Write_String@i),f
  9152  07E0  07A3               	skipnc
  9153  07E1  1803               	incf	(Lcd_Write_String@i+1),f
  9154  07E2  0AA4               	movlw	0
  9155  07E3  3000               	addwf	(Lcd_Write_String@i+1),f
  9156  07E4  07A4               	goto	l3132
  9157  07E5  2FE6               	
  9158                           l118:	
  9159  07E6                     	
  9160                           l3132:	
  9161  07E6                     	movf	(Lcd_Write_String@i),w
  9162  07E6  0823               	addwf	(Lcd_Write_String@a),w
  9163  07E7  0777               	movwf	(??_Lcd_Write_String+1)+0
  9164  07E8  00A1               	movf	(Lcd_Write_String@a+1),w
  9165  07E9  0878               	movwf	(??_Lcd_Write_String+0)+0
  9166  07EA  00A0               	skipnc
  9167  07EB  1803               	incf	(??_Lcd_Write_String+0)+0,f
  9168  07EC  0AA0               	btfss	(Lcd_Write_String@i),7
  9169  07ED  1FA3               	goto	u4670
  9170  07EE  2FF0               	decf	(??_Lcd_Write_String+0)+0,f
  9171  07EF  03A0               u4670:
  9172  07F0                     	bcf	status, 5	;RP0=0, select bank0
  9173  07F0  1283               	bcf	status, 6	;RP1=0, select bank0
  9174  07F1  1303               	movf	(??_Lcd_Write_String+0)+0,w
  9175  07F2  0820               	movwf	0+((??_Lcd_Write_String+1)+0)+1
  9176  07F3  00A2               	movf	0+(??_Lcd_Write_String+1)+0,w
  9177  07F4  0821               	movwf	fsr0
  9178  07F5  0084               	bsf	status,7
  9179  07F6  1783               	btfss	1+(??_Lcd_Write_String+1)+0,0
  9180  07F7  1C22               	bcf	status,7
  9181  07F8  1383               	movf	(indf),w
  9182  07F9  0800               	btfss	status,2
  9183  07FA  1D03               	goto	u4681
  9184  07FB  2FFD               	goto	u4680
  9185  07FC  2FFE               u4681:
  9186  07FD                     	goto	l3128
  9187  07FD  2FC4               u4680:
  9188  07FE                     	goto	l121
  9189  07FE  2FFF               	
  9190                           l120:	
  9191  07FF                     	line	103
  9192                           	
  9193                           l121:	
  9194  07FF                     	return
  9195  07FF  0008               	opt stack 0
  9196                           GLOBAL	__end_of_Lcd_Write_String
  9197                           	__end_of_Lcd_Write_String:
  9198  0800                     	signat	_Lcd_Write_String,4217
  9199                           	global	_Lcd_Write_Char
  9200                           
  9201 ;; *************** function _Lcd_Write_Char *****************
  9202 ;; Defined at:
  9203 ;;		line 82 in file "./lcd.h"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  a               1    wreg     unsigned char 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  a               1    6[COMMON] unsigned char 
  9208 ;;  y               1    5[COMMON] unsigned char 
  9209 ;;  temp            1    4[COMMON] unsigned char 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      void 
  9212 ;; Registers used:
  9213 ;;		wreg, status,2, status,0, pclath, cstack
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9219 ;;      Params:         0       0       0       0       0
  9220 ;;      Locals:         3       0       0       0       0
  9221 ;;      Temps:          1       0       0       0       0
  9222 ;;      Totals:         4       0       0       0       0
  9223 ;;Total ram usage:        4 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:    2
  9226 ;; This function calls:
  9227 ;;		_Lcd_Port
  9228 ;; This function is called by:
  9229 ;;		_Lcd_Write_String
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  9233                           	line	82
  9234                           global __ptext21
  9235                           __ptext21:	;psect for function _Lcd_Write_Char
  9236  163F                     psect	text21
  9237                           	file	"./lcd.h"
  9238                           	line	82
  9239                           	global	__size_of_Lcd_Write_Char
  9240                           	__size_of_Lcd_Write_Char	equ	__end_of_Lcd_Write_Char-_Lcd_Write_Char
  9241  0039                     	
  9242                           _Lcd_Write_Char:	
  9243  163F                     ;incstack = 0
  9244                           	opt	stack 4
  9245                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9246                           ;Lcd_Write_Char@a stored from wreg
  9247                           	movwf	(Lcd_Write_Char@a)
  9248  163F  00F6               	line	85
  9249                           	
  9250                           l3042:	
  9251  1640                     ;./lcd.h: 82: void Lcd_Write_Char(char a);./lcd.h: 83: {;./lcd.h: 84:    char temp,y;;./
                                 lcd.h: 85:    temp = a&0x0F;
  9252                           	movf	(Lcd_Write_Char@a),w
  9253  1640  0876               	andlw	0Fh
  9254  1641  390F               	movwf	(??_Lcd_Write_Char+0)+0
  9255  1642  00F3               	movf	(??_Lcd_Write_Char+0)+0,w
  9256  1643  0873               	movwf	(Lcd_Write_Char@temp)
  9257  1644  00F4               	line	86
  9258                           ;./lcd.h: 86:    y = a&0xF0;
  9259                           	movf	(Lcd_Write_Char@a),w
  9260  1645  0876               	andlw	0F0h
  9261  1646  39F0               	movwf	(??_Lcd_Write_Char+0)+0
  9262  1647  00F3               	movf	(??_Lcd_Write_Char+0)+0,w
  9263  1648  0873               	movwf	(Lcd_Write_Char@y)
  9264  1649  00F5               	line	87
  9265                           	
  9266                           l3044:	
  9267  164A                     ;./lcd.h: 87:    RD2 = 1;
  9268                           	bcf	status, 5	;RP0=0, select bank0
  9269  164A  1283               	bcf	status, 6	;RP1=0, select bank0
  9270  164B  1303               	bsf	(66/8),(66)&7	;volatile
  9271  164C  1508               	line	88
  9272                           	
  9273                           l3046:	
  9274  164D                     ;./lcd.h: 88:    Lcd_Port(y>>4);
  9275                           	movf	(Lcd_Write_Char@y),w
  9276  164D  0875               	movwf	(??_Lcd_Write_Char+0)+0
  9277  164E  00F3               	movlw	04h
  9278  164F  3004               u4525:
  9279  1650                     	clrc
  9280  1650  1003               	rrf	(??_Lcd_Write_Char+0)+0,f
  9281  1651  0CF3               	addlw	-1
  9282  1652  3EFF               	skipz
  9283  1653  1D03               	goto	u4525
  9284  1654  2E50               	movf	0+(??_Lcd_Write_Char+0)+0,w
  9285  1655  0873               	fcall	_Lcd_Port
  9286  1656  160A  118A  259F  160A  118A  	line	89
  9287                           	
  9288                           l3048:	
  9289  165B                     ;./lcd.h: 89:    RD3 = 1;
  9290                           	bcf	status, 5	;RP0=0, select bank0
  9291  165B  1283               	bcf	status, 6	;RP1=0, select bank0
  9292  165C  1303               	bsf	(67/8),(67)&7	;volatile
  9293  165D  1588               	line	90
  9294                           	
  9295                           l3050:	
  9296  165E                     ;./lcd.h: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  9297                           	opt asmopt_push
  9298                           opt asmopt_off
  9299                           	movlw	66
  9300  165E  3042               movwf	((??_Lcd_Write_Char+0)+0),f
  9301  165F  00F3               	u5257:
  9302  1660                     decfsz	(??_Lcd_Write_Char+0)+0,f
  9303  1660  0BF3               	goto	u5257
  9304  1661  2E60               	nop
  9305  1662  0000               opt asmopt_pop
  9306                           
  9307                           	line	91
  9308                           	
  9309                           l3052:	
  9310  1663                     ;./lcd.h: 91:    RD3 = 0;
  9311                           	bcf	status, 5	;RP0=0, select bank0
  9312  1663  1283               	bcf	status, 6	;RP1=0, select bank0
  9313  1664  1303               	bcf	(67/8),(67)&7	;volatile
  9314  1665  1188               	line	92
  9315                           	
  9316                           l3054:	
  9317  1666                     ;./lcd.h: 92:    Lcd_Port(temp);
  9318                           	movf	(Lcd_Write_Char@temp),w
  9319  1666  0874               	fcall	_Lcd_Port
  9320  1667  160A  118A  259F  160A  118A  	line	93
  9321                           	
  9322                           l3056:	
  9323  166C                     ;./lcd.h: 93:    RD3 = 1;
  9324                           	bcf	status, 5	;RP0=0, select bank0
  9325  166C  1283               	bcf	status, 6	;RP1=0, select bank0
  9326  166D  1303               	bsf	(67/8),(67)&7	;volatile
  9327  166E  1588               	line	94
  9328                           	
  9329                           l3058:	
  9330  166F                     ;./lcd.h: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  9331                           	opt asmopt_push
  9332                           opt asmopt_off
  9333                           	movlw	66
  9334  166F  3042               movwf	((??_Lcd_Write_Char+0)+0),f
  9335  1670  00F3               	u5267:
  9336  1671                     decfsz	(??_Lcd_Write_Char+0)+0,f
  9337  1671  0BF3               	goto	u5267
  9338  1672  2E71               	nop
  9339  1673  0000               opt asmopt_pop
  9340                           
  9341                           	line	95
  9342                           	
  9343                           l3060:	
  9344  1674                     ;./lcd.h: 95:    RD3 = 0;
  9345                           	bcf	status, 5	;RP0=0, select bank0
  9346  1674  1283               	bcf	status, 6	;RP1=0, select bank0
  9347  1675  1303               	bcf	(67/8),(67)&7	;volatile
  9348  1676  1188               	line	96
  9349                           	
  9350                           l115:	
  9351  1677                     	return
  9352  1677  0008               	opt stack 0
  9353                           GLOBAL	__end_of_Lcd_Write_Char
  9354                           	__end_of_Lcd_Write_Char:
  9355  1678                     	signat	_Lcd_Write_Char,4217
  9356                           	global	_Lcd_Set_Cursor
  9357                           
  9358 ;; *************** function _Lcd_Set_Cursor *****************
  9359 ;; Defined at:
  9360 ;;		line 42 in file "./lcd.h"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;  a               1    wreg     unsigned char 
  9363 ;;  b               1    6[COMMON] unsigned char 
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;  a               1    0[BANK0 ] unsigned char 
  9366 ;;  temp            1    3[BANK0 ] unsigned char 
  9367 ;;  y               1    2[BANK0 ] unsigned char 
  9368 ;;  z               1    1[BANK0 ] unsigned char 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0, pclath, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9378 ;;      Params:         1       0       0       0       0
  9379 ;;      Locals:         0       4       0       0       0
  9380 ;;      Temps:          2       0       0       0       0
  9381 ;;      Totals:         3       4       0       0       0
  9382 ;;Total ram usage:        7 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; Hardware stack levels required when called:    3
  9385 ;; This function calls:
  9386 ;;		_Lcd_Cmd
  9387 ;; This function is called by:
  9388 ;;		_main
  9389 ;;		_Druga_kolona
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  9393                           	line	42
  9394                           global __ptext22
  9395                           __ptext22:	;psect for function _Lcd_Set_Cursor
  9396  17A4                     psect	text22
  9397                           	file	"./lcd.h"
  9398                           	line	42
  9399                           	global	__size_of_Lcd_Set_Cursor
  9400                           	__size_of_Lcd_Set_Cursor	equ	__end_of_Lcd_Set_Cursor-_Lcd_Set_Cursor
  9401  005C                     	
  9402                           _Lcd_Set_Cursor:	
  9403  17A4                     ;incstack = 0
  9404                           	opt	stack 4
  9405                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9406                           ;Lcd_Set_Cursor@a stored from wreg
  9407                           	bcf	status, 5	;RP0=0, select bank0
  9408  17A4  1283               	bcf	status, 6	;RP1=0, select bank0
  9409  17A5  1303               	movwf	(Lcd_Set_Cursor@a)
  9410  17A6  00A0               	line	45
  9411                           	
  9412                           l3096:	
  9413  17A7                     ;./lcd.h: 42: void Lcd_Set_Cursor(char a, char b);./lcd.h: 43: {;./lcd.h: 44:  char temp
                                 ,z,y;;./lcd.h: 45:  if(a == 1)
  9414                           		decf	((Lcd_Set_Cursor@a)),w
  9415  17A7  0320               	btfss	status,2
  9416  17A8  1D03               	goto	u4621
  9417  17A9  2FAB               	goto	u4620
  9418  17AA  2FAC               u4621:
  9419  17AB                     	goto	l3106
  9420  17AB  2FD1               u4620:
  9421  17AC                     	line	47
  9422                           	
  9423                           l3098:	
  9424  17AC                     ;./lcd.h: 46:  {;./lcd.h: 47:    temp = 0x80 + b - 1;
  9425                           	movf	(Lcd_Set_Cursor@b),w
  9426  17AC  0876               	addlw	07Fh
  9427  17AD  3E7F               	movwf	(??_Lcd_Set_Cursor+0)+0
  9428  17AE  00F7               	movf	(??_Lcd_Set_Cursor+0)+0,w
  9429  17AF  0877               	movwf	(Lcd_Set_Cursor@temp)
  9430  17B0  00A3               	line	48
  9431                           ;./lcd.h: 48:   z = temp>>4;
  9432                           	movf	(Lcd_Set_Cursor@temp),w
  9433  17B1  0823               	movwf	(??_Lcd_Set_Cursor+0)+0
  9434  17B2  00F7               	movlw	04h
  9435  17B3  3004               u4635:
  9436  17B4                     	clrc
  9437  17B4  1003               	rrf	(??_Lcd_Set_Cursor+0)+0,f
  9438  17B5  0CF7               	addlw	-1
  9439  17B6  3EFF               	skipz
  9440  17B7  1D03               	goto	u4635
  9441  17B8  2FB4               	movf	0+(??_Lcd_Set_Cursor+0)+0,w
  9442  17B9  0877               	movwf	(??_Lcd_Set_Cursor+1)+0
  9443  17BA  00F8               	movf	(??_Lcd_Set_Cursor+1)+0,w
  9444  17BB  0878               	movwf	(Lcd_Set_Cursor@z)
  9445  17BC  00A1               	line	49
  9446                           	
  9447                           l3100:	
  9448  17BD                     ;./lcd.h: 49:   y = temp & 0x0F;
  9449                           	movf	(Lcd_Set_Cursor@temp),w
  9450  17BD  0823               	andlw	0Fh
  9451  17BE  390F               	movwf	(??_Lcd_Set_Cursor+0)+0
  9452  17BF  00F7               	movf	(??_Lcd_Set_Cursor+0)+0,w
  9453  17C0  0877               	movwf	(Lcd_Set_Cursor@y)
  9454  17C1  00A2               	line	50
  9455                           	
  9456                           l3102:	
  9457  17C2                     ;./lcd.h: 50:   Lcd_Cmd(z);
  9458                           	movf	(Lcd_Set_Cursor@z),w
  9459  17C2  0821               	fcall	_Lcd_Cmd
  9460  17C3  160A  118A  2585  160A  118A  	line	51
  9461                           	
  9462                           l3104:	
  9463  17C8                     ;./lcd.h: 51:   Lcd_Cmd(y);
  9464                           	bcf	status, 5	;RP0=0, select bank0
  9465  17C8  1283               	bcf	status, 6	;RP1=0, select bank0
  9466  17C9  1303               	movf	(Lcd_Set_Cursor@y),w
  9467  17CA  0822               	fcall	_Lcd_Cmd
  9468  17CB  160A  118A  2585  160A  118A  	line	52
  9469                           ;./lcd.h: 52:  }
  9470                           	goto	l109
  9471  17D0  2FFF               	line	53
  9472                           ;./lcd.h: 53:  else if(a == 2)
  9473                           	
  9474                           l106:	
  9475  17D1                     	
  9476                           l3106:	
  9477  17D1                     		movlw	2
  9478  17D1  3002               	bcf	status, 5	;RP0=0, select bank0
  9479  17D2  1283               	bcf	status, 6	;RP1=0, select bank0
  9480  17D3  1303               	xorwf	((Lcd_Set_Cursor@a)),w
  9481  17D4  0620               	btfss	status,2
  9482  17D5  1D03               	goto	u4641
  9483  17D6  2FD8               	goto	u4640
  9484  17D7  2FD9               u4641:
  9485  17D8                     	goto	l109
  9486  17D8  2FFF               u4640:
  9487  17D9                     	line	55
  9488                           	
  9489                           l3108:	
  9490  17D9                     ;./lcd.h: 54:  {;./lcd.h: 55:   temp = 0xC0 + b - 1;
  9491                           	movf	(Lcd_Set_Cursor@b),w
  9492  17D9  0876               	addlw	0BFh
  9493  17DA  3EBF               	movwf	(??_Lcd_Set_Cursor+0)+0
  9494  17DB  00F7               	movf	(??_Lcd_Set_Cursor+0)+0,w
  9495  17DC  0877               	movwf	(Lcd_Set_Cursor@temp)
  9496  17DD  00A3               	line	56
  9497                           ;./lcd.h: 56:   z = temp>>4;
  9498                           	movf	(Lcd_Set_Cursor@temp),w
  9499  17DE  0823               	movwf	(??_Lcd_Set_Cursor+0)+0
  9500  17DF  00F7               	movlw	04h
  9501  17E0  3004               u4655:
  9502  17E1                     	clrc
  9503  17E1  1003               	rrf	(??_Lcd_Set_Cursor+0)+0,f
  9504  17E2  0CF7               	addlw	-1
  9505  17E3  3EFF               	skipz
  9506  17E4  1D03               	goto	u4655
  9507  17E5  2FE1               	movf	0+(??_Lcd_Set_Cursor+0)+0,w
  9508  17E6  0877               	movwf	(??_Lcd_Set_Cursor+1)+0
  9509  17E7  00F8               	movf	(??_Lcd_Set_Cursor+1)+0,w
  9510  17E8  0878               	movwf	(Lcd_Set_Cursor@z)
  9511  17E9  00A1               	line	57
  9512                           	
  9513                           l3110:	
  9514  17EA                     ;./lcd.h: 57:   y = temp & 0x0F;
  9515                           	movf	(Lcd_Set_Cursor@temp),w
  9516  17EA  0823               	andlw	0Fh
  9517  17EB  390F               	movwf	(??_Lcd_Set_Cursor+0)+0
  9518  17EC  00F7               	movf	(??_Lcd_Set_Cursor+0)+0,w
  9519  17ED  0877               	movwf	(Lcd_Set_Cursor@y)
  9520  17EE  00A2               	line	58
  9521                           	
  9522                           l3112:	
  9523  17EF                     ;./lcd.h: 58:   Lcd_Cmd(z);
  9524                           	movf	(Lcd_Set_Cursor@z),w
  9525  17EF  0821               	fcall	_Lcd_Cmd
  9526  17F0  160A  118A  2585  160A  118A  	line	59
  9527                           	
  9528                           l3114:	
  9529  17F5                     ;./lcd.h: 59:   Lcd_Cmd(y);
  9530                           	bcf	status, 5	;RP0=0, select bank0
  9531  17F5  1283               	bcf	status, 6	;RP1=0, select bank0
  9532  17F6  1303               	movf	(Lcd_Set_Cursor@y),w
  9533  17F7  0822               	fcall	_Lcd_Cmd
  9534  17F8  160A  118A  2585  160A  118A  	goto	l109
  9535  17FD  2FFF               	line	60
  9536                           ;./lcd.h: 60:  }
  9537                           	
  9538                           l108:	
  9539  17FE                     	goto	l109
  9540  17FE  2FFF               	
  9541                           l107:	
  9542  17FF                     	line	61
  9543                           	
  9544                           l109:	
  9545  17FF                     	return
  9546  17FF  0008               	opt stack 0
  9547                           GLOBAL	__end_of_Lcd_Set_Cursor
  9548                           	__end_of_Lcd_Set_Cursor:
  9549  1800                     	signat	_Lcd_Set_Cursor,8313
  9550                           	global	_Lcd_Init
  9551                           
  9552 ;; *************** function _Lcd_Init *****************
  9553 ;; Defined at:
  9554 ;;		line 63 in file "./lcd.h"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0, pclath, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9568 ;;      Params:         0       0       0       0       0
  9569 ;;      Locals:         0       0       0       0       0
  9570 ;;      Temps:          2       0       0       0       0
  9571 ;;      Totals:         2       0       0       0       0
  9572 ;;Total ram usage:        2 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:    3
  9575 ;; This function calls:
  9576 ;;		_Lcd_Cmd
  9577 ;;		_Lcd_Port
  9578 ;; This function is called by:
  9579 ;;		_main
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9583                           	line	63
  9584                           global __ptext23
  9585                           __ptext23:	;psect for function _Lcd_Init
  9586  0840                     psect	text23
  9587                           	file	"./lcd.h"
  9588                           	line	63
  9589                           	global	__size_of_Lcd_Init
  9590                           	__size_of_Lcd_Init	equ	__end_of_Lcd_Init-_Lcd_Init
  9591  005E                     	
  9592                           _Lcd_Init:	
  9593  0840                     ;incstack = 0
  9594                           	opt	stack 4
  9595                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9596                           	line	65
  9597                           	
  9598                           l3116:	
  9599  0840                     ;./lcd.h: 65:   Lcd_Port(0x00);
  9600                           	movlw	low(0)
  9601  0840  3000               	fcall	_Lcd_Port
  9602  0841  160A  118A  259F  120A  158A  	line	66
  9603                           	
  9604                           l3118:	
  9605  0846                     ;./lcd.h: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  9606                           	opt asmopt_push
  9607                           opt asmopt_off
  9608                           movlw	130
  9609  0846  3082               movwf	((??_Lcd_Init+0)+0+1),f
  9610  0847  00F7               	movlw	221
  9611  0848  30DD               movwf	((??_Lcd_Init+0)+0),f
  9612  0849  00F6               	u5277:
  9613  084A                     decfsz	((??_Lcd_Init+0)+0),f
  9614  084A  0BF6               	goto	u5277
  9615  084B  284A               	decfsz	((??_Lcd_Init+0)+0+1),f
  9616  084C  0BF7               	goto	u5277
  9617  084D  284A               	nop2
  9618  084E  284F               opt asmopt_pop
  9619                           
  9620                           	line	67
  9621                           	
  9622                           l3120:	
  9623  084F                     ;./lcd.h: 67:   Lcd_Cmd(0x03);
  9624                           	movlw	low(03h)
  9625  084F  3003               	fcall	_Lcd_Cmd
  9626  0850  160A  118A  2585  120A  158A  	line	68
  9627                           ;./lcd.h: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  9628                           	opt asmopt_push
  9629                           opt asmopt_off
  9630                           movlw	33
  9631  0855  3021               movwf	((??_Lcd_Init+0)+0+1),f
  9632  0856  00F7               	movlw	118
  9633  0857  3076               movwf	((??_Lcd_Init+0)+0),f
  9634  0858  00F6               	u5287:
  9635  0859                     decfsz	((??_Lcd_Init+0)+0),f
  9636  0859  0BF6               	goto	u5287
  9637  085A  2859               	decfsz	((??_Lcd_Init+0)+0+1),f
  9638  085B  0BF7               	goto	u5287
  9639  085C  2859               	nop
  9640  085D  0000               opt asmopt_pop
  9641                           
  9642                           	line	69
  9643                           	
  9644                           l3122:	
  9645  085E                     ;./lcd.h: 69:   Lcd_Cmd(0x03);
  9646                           	movlw	low(03h)
  9647  085E  3003               	fcall	_Lcd_Cmd
  9648  085F  160A  118A  2585  120A  158A  	line	70
  9649                           	
  9650                           l3124:	
  9651  0864                     ;./lcd.h: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  9652                           	opt asmopt_push
  9653                           opt asmopt_off
  9654                           movlw	72
  9655  0864  3048               movwf	((??_Lcd_Init+0)+0+1),f
  9656  0865  00F7               	movlw	108
  9657  0866  306C               movwf	((??_Lcd_Init+0)+0),f
  9658  0867  00F6               	u5297:
  9659  0868                     decfsz	((??_Lcd_Init+0)+0),f
  9660  0868  0BF6               	goto	u5297
  9661  0869  2868               	decfsz	((??_Lcd_Init+0)+0+1),f
  9662  086A  0BF7               	goto	u5297
  9663  086B  2868               	nop
  9664  086C  0000               opt asmopt_pop
  9665                           
  9666                           	line	71
  9667                           ;./lcd.h: 71:   Lcd_Cmd(0x03);
  9668                           	movlw	low(03h)
  9669  086D  3003               	fcall	_Lcd_Cmd
  9670  086E  160A  118A  2585  120A  158A  	line	73
  9671                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  9672                           	movlw	low(02h)
  9673  0873  3002               	fcall	_Lcd_Cmd
  9674  0874  160A  118A  2585  120A  158A  	line	74
  9675                           ;./lcd.h: 74:   Lcd_Cmd(0x02);
  9676                           	movlw	low(02h)
  9677  0879  3002               	fcall	_Lcd_Cmd
  9678  087A  160A  118A  2585  120A  158A  	line	75
  9679                           ;./lcd.h: 75:   Lcd_Cmd(0x08);
  9680                           	movlw	low(08h)
  9681  087F  3008               	fcall	_Lcd_Cmd
  9682  0880  160A  118A  2585  120A  158A  	line	76
  9683                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  9684                           	movlw	low(0)
  9685  0885  3000               	fcall	_Lcd_Cmd
  9686  0886  160A  118A  2585  120A  158A  	line	77
  9687                           ;./lcd.h: 77:   Lcd_Cmd(0x0C);
  9688                           	movlw	low(0Ch)
  9689  088B  300C               	fcall	_Lcd_Cmd
  9690  088C  160A  118A  2585  120A  158A  	line	78
  9691                           ;./lcd.h: 78:   Lcd_Cmd(0x00);
  9692                           	movlw	low(0)
  9693  0891  3000               	fcall	_Lcd_Cmd
  9694  0892  160A  118A  2585  120A  158A  	line	79
  9695                           ;./lcd.h: 79:   Lcd_Cmd(0x06);
  9696                           	movlw	low(06h)
  9697  0897  3006               	fcall	_Lcd_Cmd
  9698  0898  160A  118A  2585  120A  158A  	line	80
  9699                           	
  9700                           l112:	
  9701  089D                     	return
  9702  089D  0008               	opt stack 0
  9703                           GLOBAL	__end_of_Lcd_Init
  9704                           	__end_of_Lcd_Init:
  9705  089E                     	signat	_Lcd_Init,89
  9706                           	global	_Lcd_Clear
  9707                           
  9708 ;; *************** function _Lcd_Clear *****************
  9709 ;; Defined at:
  9710 ;;		line 36 in file "./lcd.h"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  2  102[None  ] int 
  9717 ;; Registers used:
  9718 ;;		wreg, status,2, status,0, pclath, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9724 ;;      Params:         0       0       0       0       0
  9725 ;;      Locals:         0       0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0
  9727 ;;      Totals:         0       0       0       0       0
  9728 ;;Total ram usage:        0 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    3
  9731 ;; This function calls:
  9732 ;;		_Lcd_Cmd
  9733 ;; This function is called by:
  9734 ;;		_main
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9738                           	line	36
  9739                           global __ptext24
  9740                           __ptext24:	;psect for function _Lcd_Clear
  9741  1578                     psect	text24
  9742                           	file	"./lcd.h"
  9743                           	line	36
  9744                           	global	__size_of_Lcd_Clear
  9745                           	__size_of_Lcd_Clear	equ	__end_of_Lcd_Clear-_Lcd_Clear
  9746  000D                     	
  9747                           _Lcd_Clear:	
  9748  1578                     ;incstack = 0
  9749                           	opt	stack 4
  9750                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9751                           	line	38
  9752                           	
  9753                           l3094:	
  9754  1578                     ;./lcd.h: 38:  Lcd_Cmd(0);
  9755                           	movlw	low(0)
  9756  1578  3000               	fcall	_Lcd_Cmd
  9757  1579  160A  118A  2585  160A  118A  	line	39
  9758                           ;./lcd.h: 39:  Lcd_Cmd(1);
  9759                           	movlw	low(01h)
  9760  157E  3001               	fcall	_Lcd_Cmd
  9761  157F  160A  118A  2585  160A  118A  	line	40
  9762                           	
  9763                           l103:	
  9764  1584                     	return
  9765  1584  0008               	opt stack 0
  9766                           GLOBAL	__end_of_Lcd_Clear
  9767                           	__end_of_Lcd_Clear:
  9768  1585                     	signat	_Lcd_Clear,90
  9769                           	global	_Lcd_Cmd
  9770                           
  9771 ;; *************** function _Lcd_Cmd *****************
  9772 ;; Defined at:
  9773 ;;		line 27 in file "./lcd.h"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  a               1    wreg     unsigned char 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  a               1    5[COMMON] unsigned char 
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      void 
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0, pclath, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9787 ;;      Params:         0       0       0       0       0
  9788 ;;      Locals:         1       0       0       0       0
  9789 ;;      Temps:          2       0       0       0       0
  9790 ;;      Totals:         3       0       0       0       0
  9791 ;;Total ram usage:        3 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    2
  9794 ;; This function calls:
  9795 ;;		_Lcd_Port
  9796 ;; This function is called by:
  9797 ;;		_Lcd_Clear
  9798 ;;		_Lcd_Set_Cursor
  9799 ;;		_Lcd_Init
  9800 ;;		_Lcd_Shift_Right
  9801 ;;		_Lcd_Shift_Left
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9805                           	line	27
  9806                           global __ptext25
  9807                           __ptext25:	;psect for function _Lcd_Cmd
  9808  1585                     psect	text25
  9809                           	file	"./lcd.h"
  9810                           	line	27
  9811                           	global	__size_of_Lcd_Cmd
  9812                           	__size_of_Lcd_Cmd	equ	__end_of_Lcd_Cmd-_Lcd_Cmd
  9813  001A                     	
  9814                           _Lcd_Cmd:	
  9815  1585                     ;incstack = 0
  9816                           	opt	stack 4
  9817                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9818                           ;Lcd_Cmd@a stored from wreg
  9819                           	movwf	(Lcd_Cmd@a)
  9820  1585  00F5               	line	29
  9821                           	
  9822                           l3032:	
  9823  1586                     ;./lcd.h: 27: void Lcd_Cmd(char a);./lcd.h: 28: {;./lcd.h: 29:  RD2 = 0;
  9824                           	bcf	status, 5	;RP0=0, select bank0
  9825  1586  1283               	bcf	status, 6	;RP1=0, select bank0
  9826  1587  1303               	bcf	(66/8),(66)&7	;volatile
  9827  1588  1108               	line	30
  9828                           	
  9829                           l3034:	
  9830  1589                     ;./lcd.h: 30:  Lcd_Port(a);
  9831                           	movf	(Lcd_Cmd@a),w
  9832  1589  0875               	fcall	_Lcd_Port
  9833  158A  160A  118A  259F  160A  118A  	line	31
  9834                           	
  9835                           l3036:	
  9836  158F                     ;./lcd.h: 31:  RD3 = 1;
  9837                           	bcf	status, 5	;RP0=0, select bank0
  9838  158F  1283               	bcf	status, 6	;RP1=0, select bank0
  9839  1590  1303               	bsf	(67/8),(67)&7	;volatile
  9840  1591  1588               	line	32
  9841                           	
  9842                           l3038:	
  9843  1592                     ;./lcd.h: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  9844                           	opt asmopt_push
  9845                           opt asmopt_off
  9846                           movlw	26
  9847  1592  301A               movwf	((??_Lcd_Cmd+0)+0+1),f
  9848  1593  00F4               	movlw	248
  9849  1594  30F8               movwf	((??_Lcd_Cmd+0)+0),f
  9850  1595  00F3               	u5307:
  9851  1596                     decfsz	((??_Lcd_Cmd+0)+0),f
  9852  1596  0BF3               	goto	u5307
  9853  1597  2D96               	decfsz	((??_Lcd_Cmd+0)+0+1),f
  9854  1598  0BF4               	goto	u5307
  9855  1599  2D96               	nop
  9856  159A  0000               opt asmopt_pop
  9857                           
  9858                           	line	33
  9859                           	
  9860                           l3040:	
  9861  159B                     ;./lcd.h: 33:         RD3 = 0;
  9862                           	bcf	status, 5	;RP0=0, select bank0
  9863  159B  1283               	bcf	status, 6	;RP1=0, select bank0
  9864  159C  1303               	bcf	(67/8),(67)&7	;volatile
  9865  159D  1188               	line	34
  9866                           	
  9867                           l100:	
  9868  159E                     	return
  9869  159E  0008               	opt stack 0
  9870                           GLOBAL	__end_of_Lcd_Cmd
  9871                           	__end_of_Lcd_Cmd:
  9872  159F                     	signat	_Lcd_Cmd,4217
  9873                           	global	_Lcd_Port
  9874                           
  9875 ;; *************** function _Lcd_Port *****************
  9876 ;; Defined at:
  9877 ;;		line 5 in file "./lcd.h"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  a               1    wreg     unsigned char 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;  a               1    2[COMMON] unsigned char 
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      void 
  9884 ;; Registers used:
  9885 ;;		wreg
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9891 ;;      Params:         0       0       0       0       0
  9892 ;;      Locals:         1       0       0       0       0
  9893 ;;      Temps:          0       0       0       0       0
  9894 ;;      Totals:         1       0       0       0       0
  9895 ;;Total ram usage:        1 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; Hardware stack levels required when called:    1
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_Lcd_Cmd
  9902 ;;		_Lcd_Init
  9903 ;;		_Lcd_Write_Char
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9907                           	line	5
  9908                           global __ptext26
  9909                           __ptext26:	;psect for function _Lcd_Port
  9910  159F                     psect	text26
  9911                           	file	"./lcd.h"
  9912                           	line	5
  9913                           	global	__size_of_Lcd_Port
  9914                           	__size_of_Lcd_Port	equ	__end_of_Lcd_Port-_Lcd_Port
  9915  0023                     	
  9916                           _Lcd_Port:	
  9917  159F                     ;incstack = 0
  9918                           	opt	stack 4
  9919                           ; Regs used in _Lcd_Port: [wreg]
  9920                           ;Lcd_Port@a stored from wreg
  9921                           	movwf	(Lcd_Port@a)
  9922  159F  00F2               	line	7
  9923                           	
  9924                           l2842:	
  9925  15A0                     ;./lcd.h: 5: void Lcd_Port(char a);./lcd.h: 6: {;./lcd.h: 7:  if(a & 1)
  9926                           	btfss	(Lcd_Port@a),(0)&7
  9927  15A0  1C72               	goto	u4001
  9928  15A1  2DA3               	goto	u4000
  9929  15A2  2DA4               u4001:
  9930  15A3                     	goto	l89
  9931  15A3  2DA8               u4000:
  9932  15A4                     	line	8
  9933                           	
  9934                           l2844:	
  9935  15A4                     ;./lcd.h: 8:   RD4 = 1;
  9936                           	bcf	status, 5	;RP0=0, select bank0
  9937  15A4  1283               	bcf	status, 6	;RP1=0, select bank0
  9938  15A5  1303               	bsf	(68/8),(68)&7	;volatile
  9939  15A6  1608               	goto	l90
  9940  15A7  2DAB               	line	9
  9941                           ;./lcd.h: 9:  else
  9942                           	
  9943                           l89:	
  9944  15A8                     	line	10
  9945                           ;./lcd.h: 10:   RD4 = 0;
  9946                           	bcf	status, 5	;RP0=0, select bank0
  9947  15A8  1283               	bcf	status, 6	;RP1=0, select bank0
  9948  15A9  1303               	bcf	(68/8),(68)&7	;volatile
  9949  15AA  1208               	
  9950                           l90:	
  9951  15AB                     	line	12
  9952                           ;./lcd.h: 12:  if(a & 2)
  9953                           	btfss	(Lcd_Port@a),(1)&7
  9954  15AB  1CF2               	goto	u4011
  9955  15AC  2DAE               	goto	u4010
  9956  15AD  2DAF               u4011:
  9957  15AE                     	goto	l91
  9958  15AE  2DB1               u4010:
  9959  15AF                     	line	13
  9960                           	
  9961                           l2846:	
  9962  15AF                     ;./lcd.h: 13:   RD5 = 1;
  9963                           	bsf	(69/8),(69)&7	;volatile
  9964  15AF  1688               	goto	l92
  9965  15B0  2DB2               	line	14
  9966                           ;./lcd.h: 14:  else
  9967                           	
  9968                           l91:	
  9969  15B1                     	line	15
  9970                           ;./lcd.h: 15:   RD5 = 0;
  9971                           	bcf	(69/8),(69)&7	;volatile
  9972  15B1  1288               	
  9973                           l92:	
  9974  15B2                     	line	17
  9975                           ;./lcd.h: 17:  if(a & 4)
  9976                           	btfss	(Lcd_Port@a),(2)&7
  9977  15B2  1D72               	goto	u4021
  9978  15B3  2DB5               	goto	u4020
  9979  15B4  2DB6               u4021:
  9980  15B5                     	goto	l93
  9981  15B5  2DB8               u4020:
  9982  15B6                     	line	18
  9983                           	
  9984                           l2848:	
  9985  15B6                     ;./lcd.h: 18:   RD6 = 1;
  9986                           	bsf	(70/8),(70)&7	;volatile
  9987  15B6  1708               	goto	l94
  9988  15B7  2DB9               	line	19
  9989                           ;./lcd.h: 19:  else
  9990                           	
  9991                           l93:	
  9992  15B8                     	line	20
  9993                           ;./lcd.h: 20:   RD6 = 0;
  9994                           	bcf	(70/8),(70)&7	;volatile
  9995  15B8  1308               	
  9996                           l94:	
  9997  15B9                     	line	22
  9998                           ;./lcd.h: 22:  if(a & 8)
  9999                           	btfss	(Lcd_Port@a),(3)&7
 10000  15B9  1DF2               	goto	u4031
 10001  15BA  2DBC               	goto	u4030
 10002  15BB  2DBD               u4031:
 10003  15BC                     	goto	l95
 10004  15BC  2DBF               u4030:
 10005  15BD                     	line	23
 10006                           	
 10007                           l2850:	
 10008  15BD                     ;./lcd.h: 23:   RD7 = 1;
 10009                           	bsf	(71/8),(71)&7	;volatile
 10010  15BD  1788               	goto	l97
 10011  15BE  2DC1               	line	24
 10012                           ;./lcd.h: 24:  else
 10013                           	
 10014                           l95:	
 10015  15BF                     	line	25
 10016                           ;./lcd.h: 25:   RD7 = 0;
 10017                           	bcf	(71/8),(71)&7	;volatile
 10018  15BF  1388               	goto	l97
 10019  15C0  2DC1               	
 10020                           l96:	
 10021  15C1                     	line	26
 10022                           	
 10023                           l97:	
 10024  15C1                     	return
 10025  15C1  0008               	opt stack 0
 10026                           GLOBAL	__end_of_Lcd_Port
 10027                           	__end_of_Lcd_Port:
 10028  15C2                     	signat	_Lcd_Port,4217
 10029                           	global	_DC_Napred
 10030                           
 10031 ;; *************** function _DC_Napred *****************
 10032 ;; Defined at:
 10033 ;;		line 32 in file "main.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;		None
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;		None
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  2  160[None  ] int 
 10040 ;; Registers used:
 10041 ;;		None
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10047 ;;      Params:         0       0       0       0       0
 10048 ;;      Locals:         0       0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0
 10050 ;;      Totals:         0       0       0       0       0
 10051 ;;Total ram usage:        0 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    1
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_main
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 10061                           	file	"main.c"
 10062                           	line	32
 10063                           global __ptext27
 10064                           __ptext27:	;psect for function _DC_Napred
 10065  155F                     psect	text27
 10066                           	file	"main.c"
 10067                           	line	32
 10068                           	global	__size_of_DC_Napred
 10069                           	__size_of_DC_Napred	equ	__end_of_DC_Napred-_DC_Napred
 10070  0005                     	
 10071                           _DC_Napred:	
 10072  155F                     ;incstack = 0
 10073                           	opt	stack 6
 10074                           ; Regs used in _DC_Napred: []
 10075                           	line	33
 10076                           	
 10077                           l2382:	
 10078  155F                     ;main.c: 33:   PORTBbits.RB1= 1;
 10079                           	bcf	status, 5	;RP0=0, select bank0
 10080  155F  1283               	bcf	status, 6	;RP1=0, select bank0
 10081  1560  1303               	bsf	(6),1	;volatile
 10082  1561  1486               	line	34
 10083                           ;main.c: 34:   PORTBbits.RB2 = 0;
 10084                           	bcf	(6),2	;volatile
 10085  1562  1106               	line	35
 10086                           	
 10087                           l161:	
 10088  1563                     	return
 10089  1563  0008               	opt stack 0
 10090                           GLOBAL	__end_of_DC_Napred
 10091                           	__end_of_DC_Napred:
 10092  1564                     	signat	_DC_Napred,90
 10093                           	global	_my_isr_routine
 10094                           
 10095 ;; *************** function _my_isr_routine *****************
 10096 ;; Defined at:
 10097 ;;		line 71 in file "main.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;		None
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;		None
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  1    wreg      void 
 10104 ;; Registers used:
 10105 ;;		wreg, status,2, status,0
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10111 ;;      Params:         0       0       0       0       0
 10112 ;;      Locals:         0       0       0       0       0
 10113 ;;      Temps:          2       0       0       0       0
 10114 ;;      Totals:         2       0       0       0       0
 10115 ;;Total ram usage:        2 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		Interrupt level 1
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 10124                           	line	71
 10125                           global __ptext28
 10126                           __ptext28:	;psect for function _my_isr_routine
 10127  15EA                     psect	text28
 10128                           	file	"main.c"
 10129                           	line	71
 10130                           	global	__size_of_my_isr_routine
 10131                           	__size_of_my_isr_routine	equ	__end_of_my_isr_routine-_my_isr_routine
 10132  0029                     	
 10133                           _my_isr_routine:	
 10134  15EA                     ;incstack = 0
 10135                           	opt	stack 3
 10136                           ; Regs used in _my_isr_routine: [wreg+status,2+status,0]
 10137                           psect	intentry,class=CODE,delta=2
 10138                           global __pintentry
 10139                           __pintentry:
 10140  0004                     global interrupt_function
 10141                           interrupt_function:
 10142  0004                     	global saved_w
 10143                           	saved_w	set	btemp+0
 10144  007E                     	movwf	saved_w
 10145  0004  00FE               	swapf	status,w
 10146  0005  0E03               	movwf	(??_my_isr_routine+0)
 10147  0006  00F0               	movf	pclath,w
 10148  0007  080A               	movwf	(??_my_isr_routine+1)
 10149  0008  00F1               	ljmp	_my_isr_routine
 10150  0009  160A  118A  2DEA   psect	text28
 10151                           	line	72
 10152                           	
 10153                           i1l2528:	
 10154  15EA                     ;main.c: 72:     if (INTCONbits.TMR0IF) {
 10155                           	btfss	(11),2	;volatile
 10156  15EA  1D0B               	goto	u354_21
 10157  15EB  2DED               	goto	u354_20
 10158  15EC  2DEE               u354_21:
 10159  15ED                     	goto	i1l181
 10160  15ED  2E0C               u354_20:
 10161  15EE                     	line	73
 10162                           	
 10163                           i1l2530:	
 10164  15EE                     ;main.c: 73:         INTCONbits.TMR0IF=0;
 10165                           	bcf	(11),2	;volatile
 10166  15EE  110B               	line	74
 10167                           	
 10168                           i1l2532:	
 10169  15EF                     ;main.c: 74:         count++;
 10170                           	movlw	01h
 10171  15EF  3001               	addwf	(_count),f
 10172  15F0  07FA               	skipnc
 10173  15F1  1803               	incf	(_count+1),f
 10174  15F2  0AFB               	movlw	0
 10175  15F3  3000               	addwf	(_count+1),f
 10176  15F4  07FB               	line	75
 10177                           	
 10178                           i1l2534:	
 10179  15F5                     ;main.c: 75:         if(count==76){
 10180                           		movlw	76
 10181  15F5  304C               	xorwf	((_count)),w
 10182  15F6  067A               iorwf	((_count+1)),w
 10183  15F7  047B               	btfss	status,2
 10184  15F8  1D03               	goto	u355_21
 10185  15F9  2DFB               	goto	u355_20
 10186  15FA  2DFC               u355_21:
 10187  15FB                     	goto	i1l181
 10188  15FB  2E0C               u355_20:
 10189  15FC                     	line	76
 10190                           	
 10191                           i1l2536:	
 10192  15FC                     ;main.c: 76:             count = 0;
 10193                           	clrf	(_count)
 10194  15FC  01FA               	clrf	(_count+1)
 10195  15FD  01FB               	line	77
 10196                           	
 10197                           i1l2538:	
 10198  15FE                     ;main.c: 77:             sekunda++;
 10199                           	movlw	01h
 10200  15FE  3001               	bsf	status, 5	;RP0=1, select bank3
 10201  15FF  1683               	bsf	status, 6	;RP1=1, select bank3
 10202  1600  1703               	addwf	(_sekunda)^0180h,f
 10203  1601  07CC               	skipnc
 10204  1602  1803               	incf	(_sekunda+1)^0180h,f
 10205  1603  0ACD               	movlw	0
 10206  1604  3000               	addwf	(_sekunda+1)^0180h,f
 10207  1605  07CD               	line	80
 10208                           	
 10209                           i1l2540:	
 10210  1606                     ;main.c: 80:            RC4=~RC4;
 10211                           	movlw	1<<((60)&7)
 10212  1606  3010               	bcf	status, 5	;RP0=0, select bank0
 10213  1607  1283               	bcf	status, 6	;RP1=0, select bank0
 10214  1608  1303               	xorwf	((60)/8),f
 10215  1609  0687               	goto	i1l181
 10216  160A  2E0C               	line	82
 10217                           ;main.c: 82:         }
 10218                           	
 10219                           i1l180:	
 10220  160B                     	goto	i1l181
 10221  160B  2E0C               	line	83
 10222                           ;main.c: 83:     }
 10223                           	
 10224                           i1l179:	
 10225  160C                     	line	84
 10226                           	
 10227                           i1l181:	
 10228  160C                     	movf	(??_my_isr_routine+1),w
 10229  160C  0871               	movwf	pclath
 10230  160D  008A               	swapf	(??_my_isr_routine+0)^0FFFFFF80h,w
 10231  160E  0E70               	movwf	status
 10232  160F  0083               	swapf	saved_w,f
 10233  1610  0EFE               	swapf	saved_w,w
 10234  1611  0E7E               	retfie
 10235  1612  0009               	opt stack 0
 10236                           GLOBAL	__end_of_my_isr_routine
 10237                           	__end_of_my_isr_routine:
 10238  1613                     	signat	_my_isr_routine,89
 10239                           global	___latbits
 10240                           ___latbits	equ	2
 10241  0002                     	global	btemp
 10242                           	btemp set 07Eh
 10243  007E                     
 10244                           	DABS	1,126,2	;btemp
 10245                           	global	wtemp0
 10246                           	wtemp0 set btemp+0
 10247  007E                     	end


Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         4
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     27      31
    BANK3            96     60      62
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_9(CODE[12]), STR_8(CODE[16]), STR_7(CODE[19]), STR_6(CODE[12]), 
		 -> STR_5(CODE[19]), STR_4(CODE[12]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@druga(BANK3[20]), main@prva(BANK3[20]), Druga_kolona@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@druga(BANK3[20]), main@prva(BANK3[20]), Druga_kolona@s(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _PWM2_Init->___aldiv
    _PWM_Max_Duty->___aldiv
    _PWM1_Init->___aldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    _PWM2_Init->___aldiv
    _PWM2_Duty->___flmul
    _PWM1_procenat->___flmul
    _PWM1_Duty->___flmul
    ___xxtofl->_PWM_Max_Duty
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM_Max_Duty->___aldiv
    _PWM1_Init->___aldiv

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_PWM1_procenat
    _PWM2_Duty->___fltol
    _PWM1_procenat->_PWM1_Duty
    _PWM1_Duty->___fltol

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                61    61      0   38736
                                             79 BANK0      1     1      0
                                              0 BANK3     60    60      0
                          _DC_Napred
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _PWM1_Duty
                          _PWM1_Init
                         _PWM1_Start
                      _PWM1_procenat
                          _PWM2_Duty
                          _PWM2_Init
                         _PWM2_Start
                            ___awdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    17      7    2657
                                              6 BANK0     16     9      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            8     4      4    1137
                                              7 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM2_Duty                                            4     2      2    7649
                                             11 BANK1      4     2      2
                       _PWM_Max_Duty
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM1_procenat                                       12    10      2   13074
                                             15 BANK1     12    10      2
                          _PWM1_Duty
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _PWM1_Duty                                            4     2      2    7739
                                             11 BANK1      4     2      2
                       _PWM_Max_Duty
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             13 BANK0     14    10      4
                       _PWM_Max_Duty (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                              0 BANK1     11     7      4
                       _PWM_Max_Duty (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3713
                                             53 BANK0     26    18      8
                       _PWM_Max_Duty (ARG)
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             27 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     985
                                              7 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4    1137
                                              7 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     985
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     744
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1355
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DC_Napred                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _my_isr_routine                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DC_Napred
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PWM1_Duty
     _PWM_Max_Duty
       ___aldiv
     ___fldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___flmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       __Umul8_16 (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___fltol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___flmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         __Umul8_16 (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _PWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___xxtofl
       _PWM_Max_Duty (ARG)
         ___aldiv
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   _PWM1_procenat
     _PWM1_Duty
       _PWM_Max_Duty
         ___aldiv
       ___fldiv
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___flmul
         _PWM_Max_Duty (ARG)
           ___aldiv
         __Umul8_16 (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _PWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___fltol
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _PWM_Max_Duty (ARG)
               ___aldiv
         ___flmul (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           __Umul8_16 (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
               _PWM_Max_Duty (ARG)
                 ___aldiv
           ___xxtofl (ARG)
             _PWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___flmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       __Umul8_16 (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___fltol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___flmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         __Umul8_16 (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _PWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___xxtofl
       _PWM_Max_Duty (ARG)
         ___aldiv
   _PWM2_Duty
     _PWM_Max_Duty
       ___aldiv
     ___fldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___flmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       __Umul8_16 (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___fltol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___flmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         __Umul8_16 (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _PWM_Max_Duty (ARG)
               ___aldiv
         ___xxtofl (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
       ___xxtofl (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
     ___xxtofl
       _PWM_Max_Duty (ARG)
         ___aldiv
   _PWM2_Init
     ___aldiv
   _PWM2_Start
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1B      1F       7       38.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     3C      3E       9       64.6%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B9      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jul 08 02:09:31 2020

             ___fldiv@aexp 0054            ??_PWM1_procenat 007A               ___fldiv@bexp 0053  
                        pc 0002               ___fldiv@sign 004C                __CFG_CP$OFF 0000  
                       l90 15AB                         l91 15B1                         l92 15B2  
                       l93 15B8                         l94 15B9                         l95 15BF  
                       l96 15C1                         l97 15C1                         l89 15A8  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0074  
      __Umul8_16@word_mpld 0022                        l100 159E                        l103 1584  
                      l112 089D                        l120 07FF                        l200 02DE  
                      l121 07FF                        l201 0445                        l106 17D1  
                      l202 0332                        l107 17FF                        l115 1677  
                      l203 0353                        l108 17FE                        l132 1754  
                      l300 0DDB                        l204 0369                        l109 17FF  
                      l141 0B75                        l301 0CE8                        l205 03F7  
                      l118 07E6                        l142 0B75                        l310 0D47  
                      l302 0CFC                        l206 0444                        l119 07C4  
                      l135 083F                        l311 0D51                        l303 0D10  
                      l207 0443                        l312 0D79                        l304 0CFE  
                      l208 0447                        l161 1563                        l145 0C1C  
                      l305 0DEF                        l313 0D6E                        l209 0447  
                      l146 0C1C                        l138 17A3                        l322 15C5  
                      l314 0D8D                        l306 0CFF                        l155 1577  
                      l323 15CF                        l315 0DD0                        l307 0D00  
                      l324 15E4                        l316 0D92                        l308 0D2D  
                      l149 156C                        l325 15E9                        l317 0DDA  
                      l309 0D01                        l510 09F5                        l318 0DEE  
                      l190 00F1                        l511 09E1                        l167 098C  
                      l319 0DF6                        l191 0103                        l512 09E2  
                      l600 1683                        l192 012F                        l513 09F4  
                      l601 1694                        l193 0141                        l514 0A18  
                      l602 1695                        l194 0446                        l186 0094  
                      l515 0A05                        l603 16A6                        l195 0224  
                      l187 00B2                        l516 0A11                        l508 09AC  
                      l604 16B4                        l196 01BA                        l188 00BD  
                      l701 045D                        l517 0A06                        l509 0A28  
                      l605 16BA                        l197 0236                        l189 0184  
                      l390 0AB4                        l702 0472                        l518 0A17  
                      l470 08C6                        l198 02CC                        l391 0A72  
                      l711 04B5                        l703 0470                        l519 0A28  
                      l471 08D7                        l199 0262                        l392 0A64  
                      l720 0728                        l712 07BE                        l704 047B  
                      l472 08D8                        l393 0A77                        l721 0762  
                      l713 0700                        l705 048C                        l473 08F1  
                      l394 0A78                        l722 0761                        l714 06E1  
                      l706 04A1                        l730 0C39                        l474 08FF  
                      l466 08AD                        l395 0AA3                        l723 077A  
                      l715 06F0                        l707 049F                        l731 0C41  
                      l475 090B                        l467 08BB                        l396 0AB3  
                      l388 0A3D                        l724 07B1                        l716 0705  
                      l708 04AA                        l740 0C9D                        l732 0C53  
                      l476 0910                        l468 0900                        l397 0AC5  
                      l389 0A51                        l725 0795                        l717 072A  
                      l709 04BF                        l741 0C91                        l733 0CE0  
                      l469 08D2                        l398 0ACE                        l670 0E50  
                      l750 162A                        l726 07B1                        l718 0721  
                      l734 0C66                        l590 16C6                        l671 0E4D  
                      l751 1639                        l727 07A9                        l719 0729  
                      l743 0CA8                        l735 0C58                        l591 16D7  
                      l680 0F0B                        l672 0E58                        l752 163E  
                      l744 0CA8                        l736 0C6D                        l592 16D8  
                      l681 0F17                        l673 0E7A                        l665 0E0A  
                      l745 0CB4                        l737 0C89                        l593 16F1  
                      l690 0F69                        l682 0F21                        l674 0FFF  
                      l666 0E20                        l746 0CD7                        l738 0C6E  
                      l594 16FF                        l691 0FA3                        l683 0F41  
                      l675 0E91                        l667 0E1D                        l739 0C90  
                      l595 1705                        l692 0FA2                        l684 0F22  
                      l676 0F10                        l668 0E29                        l588 1700  
                      l693 0FBF                        l685 0F31                        l677 0EC2  
                      l669 0E3A                        l749 1620                        l589 16D2  
                      l694 0FDB                        l686 0F46                        l678 0EE9  
                      l598 16B5                        l695 0FE7                        l687 0F6B  
                      l679 0EDF                        l599 168F                        l696 0FEB  
                      l688 0F62                        l689 0F6A                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RC4 003C  
                      _RD3 0043                        _RC5 003D                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _PR2 0092               __CFG_CPD$OFF 0000                        fsr0 0004  
                      indf 0000               __CFG_FOSC$HS 0000               ___flmul@aexp 0063  
             ___flmul@bexp 0068               ___flmul@sign 0062               ___flmul@temp 006D  
             ___flmul@prod 0069               __CFG_LVP$OFF 0000               ___fltol@exp1 00AA  
                     l2000 0F31                       l2010 0F4B                       l2002 0F3A  
                     l2020 0F7E                       l2012 0F5F                       l2004 0F41  
                     l2030 0FBF                       l2022 0F82                       l2014 0F66  
                     l2006 0F46                       l2040 0FE5                       l2032 0FCE  
                     l2024 0F9B                       l2016 0F6B                       l2008 0F47  
                     l3000 072A                       l2200 0C53                       l2042 0FE7  
                     l2034 0FD2                       l2018 0F70                       l2026 0FA3  
                     l3002 072F                       l3010 0762                       l2210 0C80  
                     l2202 0C58                       l3100 17BD                       l2044 0FF6  
                     l2036 0FDA                       l2028 0FB0                       l3020 0795  
                     l3012 076F                       l3004 073D                       l2220 0CB6  
                     l2212 0C91                       l2204 0C66                       l3110 17EA  
                     l3102 17C2                       l2046 0FFF                       l2038 0FE1  
                     l3030 07BE                       l3022 07A3                       l3014 077A  
                     l3006 0741                       l2230 0CE0                       l2222 0CCC  
                     l2214 0C9D                       l2206 0C6E                       l3040 159B  
                     l3032 1586                       l3120 084F                       l3112 17EF  
                     l3104 17C8                       l3024 07A7                       l3016 0789  
                     l3008 075A                       l2224 0CD1                       l2216 0CA1  
                     l2208 0C72                       l3200 0D6E                       l3034 1589  
                     l3122 085E                       l3114 17F5                       l3106 17D1  
                     l3050 165E                       l3042 1640                       l3130 07DD  
                     l3026 07A9                       l3018 0793                       l2226 0CD5  
                     l2218 0CAC                       l3210 0D92                       l3202 0D79  
                     l3036 158F                       l3124 0864                       l3116 0840  
                     l3108 17D9                       l3060 1674                       l3052 1663  
                     l3044 164A                       l3132 07E6                       l3028 07B5  
                     l2228 0CD7                       l3140 178B                       l3212 0DC2  
                     l3204 0D7F                       l3220 0DEF                       l3300 004E  
                     l3038 1592                       l3118 0846                       l3054 1666  
                     l3046 164D                       l3126 07BF                       l3134 1706  
                     l2190 0C25                       l3070 0B64                       l3062 0ACF  
                     l3150 0C0B                       l3142 0B76                       l3230 08A1  
                     l3222 0DF6                       l3214 0DCB                       l3206 0D88  
                     l3310 0053                       l3302 004F                       l3056 166C  
                     l3048 165B                       l3128 07C4                       l3136 173C  
                     l2192 0C29                       l3064 0ADA                       l3160 098C  
                     l3152 0911                       l3144 0B81                       l3240 08B6  
                     l3232 08A5                       l2280 16CD                       l2272 16BB  
                     l3080 168F                       l3072 1678                       l3216 0DD0  
                     l3208 0D8D                       l3400 0192                       l3320 007A  
                     l3312 0054                       l3304 0050                       l3058 166F  
                     l2194 0C39                       l3066 0B55                       l3154 091B  
                     l3146 0BFC                       l3138 1755                       l3250 08CD  
                     l3242 08BB                       l3234 08AA                       l2290 16F1  
                     l2282 16D2                       l2274 16BD                       l3082 1695  
                     l3074 1680                       l3090 16B5                       l3170 0CFC  
                     l3218 0DDB                       l3162 0CE1                       l3410 01BA  
                     l3402 019A                       l3330 0086                       l3322 007E  
                     l3314 005C                       l3306 0051                       l2196 0C49  
                     l2188 0C20                       l3068 0B58                       l3156 096F  
                     l3148 0BFF                       l2380 156D                       l3260 08F1  
                     l3252 08D2                       l3244 08BD                       l3236 08AD  
                     l3228 089E                       l2460 15C2                       l2292 16F8  
                     l2284 16D8                       l2276 16C3                       l3092 16BA  
                     l3084 169F                       l3076 1683                       l3172 0D01  
                     l3180 0D2D                       l3164 0CE8                       l3500 0406  
                     l3420 0212                       l3412 01BF                       l3404 019E  
                     l3340 009F                       l3332 0088                       l3324 0080  
                     l3316 0066                       l3308 0052                       l2382 155F  
                     l3094 1578                       l1910 0E04                       l2198 0C52  
                     l3158 0982                       l3270 0910                       l3262 08F8  
                     l3254 08D8                       l3246 08C3                       l3238 08B1  
                     l2470 15E4                       l2462 15C5                       l2286 16E9  
                     l2278 16C6                       l2294 1700                       l3086 16A6  
                     l3078 168A                       l3190 0D47                       l3182 0D35  
                     l3174 0D0A                       l3166 0CEE                       l3502 042D  
                     l3430 0236                       l3422 021A                       l3414 01DA  
                     l3406 01A6                       l3350 00C5                       l3342 00A7  
                     l3334 008C                       l3326 0082                       l3318 006B  
                     l3096 17A7                       l2800 0A59                       l1920 0E1D  
                     l1912 0E08                       l3256 08E9                       l3248 08C6  
                     l3264 0900                       l2472 15E9                       l2464 15C9  
                     l2296 1705                       l2288 16EF                       l3088 16AD  
                     l3192 0D49                       l3184 0D39                       l3176 0D0F  
                     l3168 0CF7                       l3504 0435                       l3440 025D  
                     l3432 023C                       l3416 01E2                       l3408 01B3  
                     l3424 0224                       l3360 00EE                       l3352 00CB  
                     l3344 00B2                       l3336 0090                       l3328 0084  
                     l3098 17AC                       l2810 0A81                       l2802 0A61  
                     l2378 1564                       l1930 0E34                       l1922 0E1E  
                     l1914 0E0A                       l1906 0DF7                       l3266 0905  
                     l3258 08EF                       l2466 15D6                       l3194 0D50  
                     l3186 0D3D                       l3178 0D10                       l3506 043E  
                     l3450 0293                       l3442 0262                       l3434 0244  
                     l3426 022B                       l3418 01EB                       l3370 0109  
                     l3354 00DA                       l3362 00F1                       l3346 00B8  
                     l3338 0099                       l3290 0049                       l3282 0019  
                     l2812 0A93                       l2804 0A64                       l2820 0AB4  
                     l1940 0E4D                       l1932 0E38                       l1916 0E0F  
                     l1924 0E20                       l1908 0DFE                       l2900 045D  
                     l3268 090B                       l2468 15DD                       l3196 0D51  
                     l3188 0D41                       l3460 02DB                       l3452 02BA  
                     l3444 0267                       l3436 0248                       l3428 0233  
                     l3372 0118                       l3380 012F                       l3364 00F8  
                     l3356 00E2                       l3348 00BD                       l3292 004A  
                     l3284 0027                       l2822 0AB9                       l2814 0AA1  
                     l2806 0A72                       l1950 0E70                       l1942 0E4E  
                     l1934 0E3A                       l1926 0E29                       l1918 0E14  
                     l2830 1618                       l2910 047B                       l2902 0462  
                     l3198 0D6D                       l3470 032A                       l3462 02DE  
                     l3454 02C2                       l3446 0282                       l3438 0250  
                     l3390 0157                       l3382 0136                       l3374 0120  
                     l3366 0100                       l3358 00E6                       l3294 004B  
                     l3286 0045                       l2824 0AC5                       l2816 0AA3  
                     l2808 0A78                       l1960 0E91                       l1952 0E79  
                     l1936 0E3F                       l1944 0E50                       l1928 0E2E  
                     l2840 163E                       l2832 1620                       l2920 0491  
                     l2912 0480                       l2904 0467                       l3528 0D22  
                     l3480 037A                       l3472 034A                       l3464 02E6  
                     l3448 028A                       l3456 02CC                       l3392 0172  
                     l3384 013E                       l3376 0124                       l3368 0103  
                     l3296 004C                       l3288 0048                       l2850 15BD  
                     l2842 15A0                       l2826 0ACE                       l2818 0AAC  
                     l1970 0EC2                       l1962 0EA8                       l1946 0E60  
                     l1954 0E7A                       l1938 0E44                       l2834 1624  
                     l2930 04AF                       l2922 0496                       l2914 0486  
                     l2906 0470                       l3490 03BA                       l3482 037F  
                     l3474 0353                       l3466 02E8                       l3458 02D3  
                     l3394 017A                       l3386 0141                       l3378 012C  
                     l3298 004D                       l2844 15A4                       l2852 0802  
                     l1972 0EC7                       l1980 0EE9                       l1964 0EB0  
                     l1956 0E7F                       l1948 0E6C                       l2836 1633  
                     l2828 1616                       l2940 04DC                       l2932 04B5  
                     l2924 049F                       l2916 048A                       l2908 0472  
                     l2860 09AB                       l3492 03E1                       l3484 039A  
                     l3476 0362                       l3468 0314                       l3388 0152  
                     l3396 0184                       l2846 15AF                       l2790 0A2C  
                     l2854 083F                       l1990 0F17                       l1982 0EFB  
                     l1974 0ED9                       l1966 0EB8                       l1958 0E90  
                     l2838 1639                       l2950 0579                       l2942 04F9  
                     l2934 04BE                       l2926 04A1                       l2918 048C  
                     l2870 09CC                       l2862 09AC                       l3494 03E9  
                     l3486 03A2                       l3478 0369                       l3398 018C  
                     l2848 15B6                       l2792 0A30                       l1992 0F1F  
                     l1984 0EFC                       l1976 0EDD                       l1968 0EC0  
                     l2960 05DC                       l2952 0582                       l2944 0515  
                     l2936 04BF                       l2928 04AA                       l2872 09D0  
                     l2880 09F5                       l2864 09C1                       l2856 098D  
                     l3496 03F2                       l3488 03AB                       l2794 0A41  
                     l1994 0F22                       l1986 0F0B                       l1978 0EDF  
                     l2970 067C                       l2962 05F5                       l2954 0592  
                     l2946 0541                       l2938 04CF                       l2890 0A1D  
                     l2882 09FB                       l2874 09D7                       l2866 09C2  
                     l2858 09A2                       l3498 03F7                       l2796 0A4C  
                     l2788 0A29                       l1996 0F2B                       l1988 0F10  
                     l2980 06EA                       l2972 06A2                       l2964 0612  
                     l2956 05AF                       l2948 055D                       l2892 044A  
                     l2884 0A04                       l2876 09E0                       l2868 09CA  
                     l2798 0A51                       l1998 0F2F                       l2990 0705  
                     l2982 06EE                       l2974 06CA                       l2966 063F  
                     l2958 05BF                       l2894 0451                       l2886 0A06  
                     l2878 09E2                       l2992 0706                       l2984 06F0  
                     l2976 06D3                       l2968 064F                       l2896 0457  
                     l2888 0A18                       l2994 070A                       l2986 06F9  
                     l2978 06E1                       l2898 045B                       l2996 071E  
                     l2988 0700                       l2998 0725                       STR_1 103F  
                     STR_2 1010                       STR_3 1010                       STR_4 1033  
                     STR_5 1010                       STR_6 1033                       STR_7 1010  
                     STR_8 1023                       STR_9 1033                       u3000 0CD5  
                     u3001 0CD4                       u2210 0E08                       u2211 0E07  
                     u2220 0E0F                       u2221 0E0E                       u2230 0E14  
                     u3110 16FE                       u2231 0E13                       u3111 16FD  
                     u4000 15A4                       u2400 0F45                       u2320 0EDD  
                     u2240 0E38                       u4001 15A3                       u2401 0F44  
                     u2321 0EDC                       u2305 0EC9                       u2241 0E37  
                     u3105 16F2                       u4010 15AF                       u2410 0F4B  
                     u2250 0E3F                       u3050 16C3                       u4011 15AE  
                     u2411 0F4A                       u2315 0ED2                       u2251 0E3E  
                     u3051 16C2                       u4020 15B6                       u2420 0F5F  
                     u2340 0EFB                       u2260 0E44                       u4100 09F3  
                     u4021 15B5                       u2421 0F5E                       u2341 0EFA  
                     u2261 0E43                       u4101 09F2                       u4030 15BD  
                     u2430 0F66                       u2350 0F16                       u2270 0E60  
                     u4110 09FB                       u3070 16D6                       u4031 15BC  
                     u2431 0F65                       u2351 0F15                       u2335 0EE1  
                     u2271 0E5F                       u4111 09FA                       u3071 16D5  
                     u4040 0820                       u2440 0F70                       u2360 0F1F  
                     u2280 0E7F                       u4200 0496                       u3400 15C9  
                     u5000 00E2                       u2441 0F6F                       u2361 0F1E  
                     u2345 0EF7                       u2281 0E7E                       u4201 0495  
                     u3401 15C8                       u3065 16C7                       u5001 00E1  
                     u2450 0F82                       u2290 0EC7                       u4210 04AF  
                     u4130 0A16                       u4050 09A2                       u3090 16E9  
                     u5010 00F8                       u2451 0F81                       u2291 0EC6  
                     u4211 04AE                       u4131 0A15                       u4051 09A1  
                     u3091 16E8                       u5011 00F7                       u2460 0F91  
                     u2380 0F2F                       u4220 04B4                       u4140 0A1D  
                     u4060 09BA                       u5100 019A                       u5020 0100  
                     u4045 081B                       u2381 0F2E                       u4221 04B3  
                     u4141 0A1C                       u4125 0A08                       u3085 16D9  
                     u5101 0199                       u5021 00FF                       u2470 0FB0  
                     u4150 045B                       u4070 09D0                       u3430 15E3  
                     u5110 01B3                       u5030 0109                       u2471 0FAF  
                     u2375 0F24                       u4311 0604                       u4231 0507  
                     u4151 045A                       u4071 09CF                       u3431 15E2  
                     u3415 15D0                       u3095 16E5                       u5111 01B2  
                     u5031 0108                       u2480 0FCE                       u4400 06EE  
                     u4312 060B                       u4232 050E                       u4160 0462  
                     u4080 09D7                       u5200 032A                       u5120 022B  
                     u5040 0118                       u2481 0FCD                       u2465 0F8C  
                     u4401 06ED                       u4321 0631                       u4313 0612  
                     u4305 05DE                       u4241 0523                       u4233 0515  
                     u4161 0461                       u4081 09D6                       u4065 09B5  
                     u3425 15D7                       u5201 0329                       u5121 022A  
                     u5041 0117                       u2490 0FE5                       u4322 0638  
                     u4242 052A                       u4170 0467                       u5210 034A  
                     u5130 0233                       u5050 0120                       u2491 0FE4  
                     u2475 0FAC                       u2395 0F33                       u4331 065E  
                     u4323 063F                       u4251 054F                       u4243 0531  
                     u4171 0466                       u5211 0349                       u5131 0232  
                     u5115 01AF                       u5051 011F                       u4500 0789  
                     u4420 0704                       u4340 0688                       u4332 0665  
                     u4252 0556                       u4180 048A                       u5220 0362  
                     u5140 023C                       u5060 0136                       u2485 0FCA  
                     u4501 0788                       u4421 0703                       u4333 066C  
                     u4261 056B                       u4253 055D                       u4181 0489  
                     u5221 0361                       u5205 0326                       u5141 023B  
                     u5061 0135                       u5045 0114                       u4510 07A7  
                     u4430 070A                       u4262 0572                       u4190 0491  
                     u2910 0C6C                       u5230 03BA                       u5150 0244  
                     u5070 013E                       u4511 07A6                       u4431 0709  
                     u4415 06F2                       u4351 0694                       u4263 0579  
                     u4191 0490                       u4095 09E3                       u2911 0C6B  
                     u5231 03B9                       u5215 0346                       u5151 0243  
                     u5071 013D                       u4440 071E                       u4360 06B0  
                     u4352 069B                       u5240 0406                       u5160 025D  
                     u5080 018C                       u4505 0785                       u4441 071D  
                     u4353 06A2                       u4345 0683                       u4281 05A1  
                     u2905 0C5D                       u5241 0405                       u5225 035E  
                     u5161 025C                       u5081 018B                       u4450 0725  
                     u4282 05A8                       u2930 0C8F                       u4530 0ADA  
                     u4610 16B3                       u5170 02D3                       u5090 0192  
                     u5307 1596                       u4451 0724                       u4371 06BC  
                     u4291 05CE                       u4283 05AF                       u4275 057B  
                     u2931 0C8E                       u4531 0AD9                       u4611 16B2  
                     u5235 03B6                       u5171 02D2                       u5091 0191  
                     u4620 17AC                       u4700 171F                       u4460 072F  
                     u4372 06C3                       u4292 05D5                       u4540 0B61  
                     u5180 02DB                       u4621 17AB                       u4525 1650  
                     u4461 072E                       u4373 06CA                       u4365 06AB  
                     u4293 05DC                       u2925 0C81                       u4541 0B5D  
                     u4605 16A7                       u5245 0402                       u5181 02DA  
                     u5165 0259                       u3910 0A76                       u4470 0741  
                     u2950 0CA1                       u2870 0C25                       u4710 1765  
                     u5190 02E6                       u3911 0A75                       u4471 0740  
                     u2951 0CA0                       u2871 0C24                       u5191 02E5  
                     u4640 17D9                       u4480 0750                       u2960 0CA7  
                     u2880 0C29                       u4720 176E                       u4560 1680  
                     u4800 0D78                       u4641 17D8                       u5257 1660  
                     u3905 0A66                       u4705 171A                       u4385 06CC  
                     u2961 0CA6                       u2945 0C95                       u2881 0C28  
                     u4561 167F                       u4801 0D77                       u3930 0A93  
                     u4490 076F                       u2970 0CAC                       u2890 0C49  
                     u4554 0B64                       u4730 0B81                       u4810 0D7F  
                     u4635 17B4                       u5267 1671                       u3931 0A92  
                     u4491 076E                       u4395 06E3                       u2971 0CAB  
                     u2891 0C48                       u4731 0B80                       u4715 1760  
                     u4811 0D7E                       u4660 07CE                       u2980 0CC1  
                     u4740 0C08                       u4900 08E9                       u4580 1693  
                     u4820 0DD9                       u5277 084A                       u3925 0A7A  
                     u4485 074B                       u4741 0C04                       u4725 1769  
                     u4901 08E8                       u4581 1692                       u4821 0DD8  
                     u4670 07F0                       u3950 0AB2                       u3870 0A30  
                     u2990 0CD1                       u4590 169F                       u4830 0DED  
                     u5287 0859                       u4655 17E1                       u3951 0AB1  
                     u3935 0A8F                       u3871 0A2F                       u4495 076B  
                     u2991 0CD0                       u4591 169E                       u4575 1684  
                     u4831 0DEC                       u4680 07FE                       u3960 0AB9  
                     u3880 0A41                       u4920 08FE                       u4840 08A5  
                     u4760 0CEE                       u5297 0868                       u4681 07FD  
                     u3961 0AB8                       u3945 0AA4                       u3881 0A40  
                     u2985 0CBC                       u4921 08FD                       u4905 08E5  
                     u4841 08A4                       u4761 0CED               _PWM_Max_Duty 0802  
                     u3890 0A61                       u4690 1716                       u3970 1624  
                     u4754 0C0B                       u4930 0905                       u4850 08B1  
                     u4770 0D3D                       u3891 0A60                       u3971 1623  
                     u4931 0904                       u4915 08F2                       u4851 08B0  
                     u4595 169B                       u4771 0D3C                       u4860 08C3  
                     u4780 0D4F                       u4940 009F                       u4861 08C2  
                     u4781 0D4E                       u4941 009E                       u3990 1638  
                     u4790 0D6C                       u4950 00A7                       u4695 1711  
                     u3991 1637                       u4791 0D6B                       u4951 00A6  
                     u4880 08D6                       u4960 00B8                       u3985 162B  
                     u4881 08D5                       u4961 00B7                       u4970 00C5  
                     u4875 08C7                       u4795 0D68                       u4971 00C4  
                     u4980 00CB                       u4981 00CA                       u4990 00DA  
                     u4895 08D9                       u4991 00D9                       u4995 00D6  
       __size_of_DC_Napred 0005               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0077  
                     _main 0019                       _freq 00BB                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 000C         ??_Lcd_Write_String 0020  
          ___fldiv@new_exp 004D          _PWM1_procenat$918 00B9            __end_of_Lcd_Cmd 159F  
            ___fltol@sign1 00A9            __end_of___aldiv 0ACF                      ?_main 0070  
                    _CCP1X 00BD            __end_of___fldiv 1000                      _CCP1Y 00BC  
                    _CCP2X 00ED                      _CCP2Y 00EC            __end_of___awdiv 0911  
            __CFG_WDTE$OFF 0000            __end_of___flmul 07BF            __end_of___fltol 0A29  
          ___awdiv@divisor 0020            __end_of___lwdiv 1706                      i1l180 160B  
                    i1l181 160C            __end_of___lwmod 16BB                      i1l179 160C  
          ___awdiv@counter 0024    __size_of_Lcd_Set_Cursor 005C         __size_of_PWM1_Init 004F  
       __size_of_PWM1_Duty 00A7                ?_PWM1_Start 0070         __size_of_PWM2_Init 004F  
       __size_of_PWM2_Duty 00A7                ?_PWM2_Start 0070            __end_of_dpowers 1010  
                    _count 007A                      pclath 000A               main@procenat 01CA  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0DF7  
         __end_of_Lcd_Init 089E           __end_of_Lcd_Port 15C2            __initialization 000F  
             __end_of_main 044A          __end_of_DC_Napred 1564                     ??_main 006F  
       __size_of_Lcd_Clear 000D                     _CCP1M2 00BA                     _CCP1M3 00BB  
                   _CCP2M2 00EA                     _CCP2M3 00EB                     _CCPR1L 0015  
                   _CCPR2L 001B           ___awdiv@dividend 0022                     i1l2530 15EE  
                   i1l2540 1606                     i1l2532 15EF                     i1l2534 15F5  
                   i1l2536 15FC                     i1l2528 15EA                     i1l2538 15FE  
                   u354_20 15EE                     u354_21 15ED                     u355_20 15FC  
                   u355_21 15FB                  ??_Lcd_Cmd 0073                     _TMR2ON 0092  
  __size_of_Lcd_Write_Char 0039                     _TRISB1 0431                     _TRISB2 0432  
                   _TRISC1 0439                     _TRISC2 043A                     _TRISD0 0440  
                   _TRISD1 0441                     _TRISC4 043C                     _TRISD2 0442  
                   _TRISD3 0443                     _TRISC5 043D                     _TRISD4 0444  
                   _TRISD5 0445                     _TRISD6 0446                     _TRISD7 0447  
         __end_of___xxtofl 0CE1             __CFG_PWRTE$OFF 0000          __end_of_PWM1_Init 1755  
        __end_of_PWM1_Duty 0B76          __end_of_PWM2_Init 17A4          __end_of_PWM2_Duty 0C1D  
                ??___aldiv 0020                     ___wmul 15C2                  ??___fldiv 0043  
                ??___awdiv 0078        __size_of_PWM1_Start 0009                  ??___flmul 005D  
                ??___fltol 00A4        __size_of_PWM2_Start 000B                  ??___lwdiv 0076  
                ??___lwmod 0024           ___awdiv@quotient 0026         __size_of__Umul8_16 002C  
                   saved_w 007E                  ??_sprintf 002D            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
             ___xxtofl@arg 0037               ___xxtofl@exp 0036               ___xxtofl@val 002D  
  __end_of__initialization 0015          __end_of_Lcd_Clear 1585                 ___fltol@f1 00A0  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 17A4             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK3 01CC  
        __end_of__Umul8_16 163F                 __pmaintext 0019                    ?___wmul 0072  
               __pintentry 0004      __end_of_PWM1_procenat 098D  __size_of_Lcd_Write_String 0041  
   __end_of_Lcd_Set_Cursor 1800                    _T2CKPS0 0090                    _T2CKPS1 0091  
                ?___xxtofl 002D               ??_PWM1_Start 0072               ??_PWM2_Start 0072  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072    __size_of_my_isr_routine 0029  
               __stringtab 1000             _Lcd_Write_Char 163F                    _Lcd_Cmd 1585  
                  ___aldiv 0A29                    ___fldiv 0DF7                    ___awdiv 089E  
                  ___flmul 044A                    ___fltol 098D            __size_of___wmul 0028  
                  ___lwdiv 16BB                    ___lwmod 1678         __end_of_PWM1_Start 156D  
       __end_of_PWM2_Start 1578            ?_Lcd_Set_Cursor 0076                    __ptext1 0CE1  
                  __ptext2 1678                    __ptext3 16BB                    __ptext4 15C2  
                  __ptext5 089E                    __ptext6 156D                    __ptext7 1755  
                  __ptext8 0B76                    __ptext9 0911                    _dpowers 1006  
               ??___xxtofl 0031                  _DC_Napred 155F           ___aldiv@dividend 0076  
                  _sekunda 01CC                    main@cnt 01C0                    _sprintf 0CE1  
                  main@rpm 01C6     __end_of_Lcd_Write_Char 1678       end_of_initialization 0015  
           main@rpm_zadato 01C8          PWM1_procenat@koef 00B1           ___aldiv@quotient 0023  
                Lcd_Port@a 0072      PWM1_procenat@procenat 00B5                  _PWM1_Init 1706  
                _PWM1_Duty 0ACF                  _PWM2_Init 1755                  _PWM2_Duty 0B76  
                _PORTBbits 0006                 ?_DC_Napred 0070              ___xxtofl@sign 0035  
              ___fldiv@grs 004F                ___fldiv@rem 0048            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0023                ___flmul@grs 0064  
                _Lcd_Clear 1578             __end_of___wmul 15EA           _Lcd_Write_String 07BF  
               ?_PWM1_Init 0027                 ?_PWM1_Duty 00AB                 ?_PWM2_Init 0027  
               ?_PWM2_Duty 00AB        start_initialization 000F             _my_isr_routine 15EA  
            ?_PWM_Max_Duty 0027          __size_of_Lcd_Init 005E          __size_of_Lcd_Port 0023  
               ?_Lcd_Clear 0070                   ??___wmul 0076                  __Umul8_16 1613  
          Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075                  ___fldiv@a 003B  
                ___fldiv@b 003F                  ___flmul@a 0059                  ___flmul@b 0055  
              __pbssCOMMON 007A                ??_DC_Napred 0072                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK3 0190  
   __end_of_my_isr_routine 1613          __size_of___xxtofl 00C4             ??_PWM_Max_Duty 0029  
                 ?_Lcd_Cmd 0070                sprintf@flag 0031                sprintf@prec 0032  
                __pnvBANK1 00BB           ___lwdiv@dividend 0074           ??_Lcd_Set_Cursor 0077  
                 ?___aldiv 0072                   ?___fldiv 003B                   ?___awdiv 0020  
                 ?___flmul 0055                   ?___fltol 00A0                 ?__Umul8_16 0072  
                 ?___lwdiv 0072                   ?___lwmod 0020                ??_PWM1_Init 002B  
              ??_PWM1_Duty 00AD                ??_PWM2_Init 002B                ??_PWM2_Duty 00AD  
                __pstrings 1000            ?_my_isr_routine 0070           ___lwdiv@quotient 0077  
                 ?_sprintf 0026            ___aldiv@divisor 0072          interrupt_function 0004  
   __size_of_PWM1_procenat 007C            ___aldiv@counter 0021             ___wmul@product 0076  
                 Lcd_Cmd@a 0075              PWM1_Duty@duty 00AB                ??_Lcd_Clear 0076  
            PWM2_Duty@duty 00AB                __stringbase 1005          ___wmul@multiplier 0072  
                main@flag1 01C2                  main@flag2 01C4                  main@flag3 01BE  
                main@flag4 0190                  main@mod_1 01BA                  main@mod_2 01BC  
                main@druga 01A6           ??_Lcd_Write_Char 0073                   _Lcd_Init 0840  
                 _Lcd_Port 159F   __end_of_Lcd_Write_String 0800           __size_of_Lcd_Cmd 001A  
           PWM1_procenat@i 00AF                ??__Umul8_16 0074           __size_of___aldiv 00A6  
     __end_of_PWM_Max_Duty 0840           __size_of___fldiv 0209           __size_of___awdiv 0073  
         __size_of___flmul 0375           __size_of___fltol 009C           __size_of___lwdiv 004B  
         __size_of___lwmod 0043              _PWM1_procenat 0911         __end_of__stringtab 1006  
               sprintf@val 0033                   ___xxtofl 0C1D            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079                   __ptext10 0ACF                   __ptext11 0C1D  
                 __ptext20 07BF                   __ptext12 098D                   __ptext21 163F  
                 __ptext13 044A                   __ptext22 17A4                   __ptext14 1613  
                 __ptext23 0840                   __ptext15 0DF7                   __ptext24 1578  
                 __ptext16 0802                   __ptext25 1585                   __ptext17 1564  
                 __ptext26 159F                   __ptext18 1706                   __ptext27 155F  
                 __ptext19 0A29                   __ptext28 15EA           __size_of_sprintf 0116  
            __size_of_main 0431               PWM1_Init@fre 0027               PWM2_Init@fre 0027  
           ?_PWM1_procenat 00AF                   main@prva 0192                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0074                   intlevel1 0000                  sprintf@ap 0030  
                sprintf@sp 0026           ___lwmod@dividend 0022                  stringcode 1000  
       Lcd_Set_Cursor@temp 0023           ??_my_isr_routine 0070     __Umul8_16@multiplicand 0072  
                 sprintf@c 0035                   sprintf@f 0028            ___lwmod@divisor 0020  
          ___lwmod@counter 0025                   stringdir 1000                   stringtab 1000  
             ___aldiv@sign 0022                 _PWM1_Start 1564                 _PWM2_Start 156D  
     __Umul8_16@multiplier 0024      __size_of_PWM_Max_Duty 003E          __Umul8_16@product 0020  
